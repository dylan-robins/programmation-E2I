%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 1 /Symbol FMFONTDEFINE
4 0 /Times-BoldItalic FMFONTDEFINE
5 0 /AvantGarde-BookOblique FMFONTDEFINE
6 0 /AvantGarde-Book FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(1) 303.5 36.66 T
1 14 Q
(Beha) 179.66 568.67 T
(vioral Exploration with R) 209.65 568.67 T
(TL Library) 362.71 568.67 T
0 12 Q
(W) 276.08 506 T
(enwei P) 286.45 506 T
(an) 324.59 506 T
( Peter Grun) 278.34 492 T
(Daniel D. Gajski) 265.51 478 T
(T) 246.43 436 T
(echnical Report #96-34) 252.92 436 T
(July 29, 1996) 273.5 422 T
(Department of Information and Computer Science) 185.19 380 T
(Uni) 231.25 366 T
(v) 248.95 366 T
(ersity of California, Irvine) 254.77 366 T
(Irvine, CA 92697-3425) 249.84 352 T
(\050714\051 824-7063) 268.51 338 T
(wpan@ics.uci.edu) 261.82 296 T
(pgrun@ics.uci.edu) 260.81 282 T
(g) 260.51 268 T
(ajski@ics.uci.edu) 266.45 268 T
1 10 Q
(Abstract) 287.39 213.33 T
0 F
1.81 (Beha) 126 189.33 P
1.81 (vioral synthesis that tak) 146.35 189.33 P
1.81 (es into consideration real components as well as timing con-) 246.39 189.33 P
-0.06 (straints is necessary for the design of today\325) 108 177.33 P
-0.06 (s ASIC chips. In this report, we gi) 282.82 177.33 P
-0.06 (v) 418.52 177.33 P
-0.06 (e a methodology for) 423.36 177.33 P
-0.01 (design space e) 108 165.33 P
-0.01 (xploration under timing constraints. T) 165.59 165.33 P
-0.01 (o illustrate our proposed methodology) 316.68 165.33 P
-0.01 (, we also) 468.75 165.33 P
0.24 (gi) 108 153.33 P
0.24 (v) 115.53 153.33 P
0.24 (e se) 120.38 153.33 P
0.24 (v) 135.64 153.33 P
0.24 (eral designs that implement a Square Root Algorithm. W) 140.49 153.33 P
0.24 (e compare these designs and gi) 369.63 153.33 P
0.24 (v) 494.71 153.33 P
0.24 (e) 499.56 153.33 P
(their beha) 108 141.33 T
(vioral and structural description in the Appendix.) 147.51 141.33 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(2) 303.5 36.66 T
1 14 Q
(Contents) 279.17 710.67 T
0 12 Q
-0.08 (1 Introduction. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .3) 72 682 P
-0.04 (2 Example Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .3) 72 668 P
0.04 (3 Library Components. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .5) 72 654 P
-0.09 (4 Design Space Exploration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .7) 72 640 P
0.03 (5 Methodology) 72 626 P
0.03 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11) 144.92 626 P
-0.08 (6 VHDL models hierarch) 72 612 P
-0.08 (y) 194.01 612 P
-0.08 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14) 199.23 612 P
-0.08 (7 Conclusions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14) 72 598 P
-0.08 (8 References. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14) 72 584 P
-0.29 (9 Appendix. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15) 72 570 P
-0.12 (9.1 SRA System. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15) 81 556 P
-0.12 (9.2 T) 81 542 P
-0.12 (est Bench Entity) 105.38 542 P
-0.12 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16) 183.7 542 P
-0.11 (9.3 SRA Entity) 81 528 P
-0.11 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17) 153.69 528 P
-0.14 (9.4 Datapath Entity) 81 514 P
-0.14 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20) 173.59 514 P
-0.12 (9.5 Abs/min/max Entity) 81 500 P
-0.12 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22) 195.66 500 P
0.15 (9.6 16-bit Adder Entity) 81 486 P
0.15 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 192.66 486 P
-0.03 (.24 9.7 1-bit Full Adder Entity) 81 472 P
-0.03 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 226.42 472 P
-0.02 (. .27 9.8 16-bit Re) 81 458 P
-0.02 (gister Entity) 167.75 458 P
-0.02 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 225.95 458 P
0.04 (. . .28 9.9 D Flip Flop Entity) 81 444 P
0.04 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 216.86 444 P
-0.03 (. . . .29 9.10 2-input And Gate Entity) 81 430 P
-0.03 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 256.32 430 P
(. . . . . . 30) 81 416 T
1 14 Q
(List of Figur) 262.57 330.67 T
(es) 337.77 330.67 T
0 12 Q
-0.11 (1 Flo) 72 302 P
-0.11 (wchart of square root algorithm. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .3) 96.6 302 P
-0.07 (2 Simple library components. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .4) 72 288 P
-0.03 (3 Comple) 72 274 P
-0.03 (x library components. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .5) 118.79 274 P
-0.02 (4 Design space e) 72 260 P
-0.02 (xploration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .8) 152.74 260 P
-0.08 (5 SRA schedule 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .8) 72 246 P
-0.08 (6 SRA schedule 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .10) 72 232 P
-0.07 (7 Datapath schematic. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .10) 72 218 P
-0.08 (8 SRA schedule 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11) 72 204 P
-0.08 (9 Methodology \337o) 72 190 P
-0.08 (wchart. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12) 160.88 190 P
-0.25 (10 VHDL description hierarch) 72 176 P
-0.25 (y) 218.15 176 P
-0.25 (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13) 223.37 176 P
1 14 Q
(List of T) 265.81 132.67 T
(ables) 315.86 132.67 T
0 12 Q
0.08 (1 Delays and costs of simple library components. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .6) 72 104 P
-0.02 (2 Delays and costs of comple) 72 90 P
-0.02 (x library components using ripple-carry adder) 212.72 90 P
-0.02 (. . . . . . . . . . . . . . . . . 7) 432.26 90 P
-0.21 (3 Delays and costs of comple) 72 76 P
-0.21 (x library components using carry-look-ahead adder) 211.76 76 P
-0.21 (. . . . . . . . . . . . . .7) 455.68 76 P
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(3) 303.5 36.66 T
1 14 Q
(Beha) 179.66 696.67 T
(vioral Exploration with R) 209.65 696.67 T
(TL Library) 362.71 696.67 T
0 12 Q
(W) 203.42 666 T
(enwei P) 213.79 666 T
(an, Peter Grun, Daniel D. Gajski) 251.94 666 T
(Department of Information and Computer Science) 185.19 652 T
(Uni) 189.42 638 T
(v) 207.12 638 T
(ersity of California, Irvine, CA 92697-3425) 212.94 638 T
1 14 Q
(Abstract) 158.45 597.67 T
0 12 Q
1.54 (Beha) 72 569 P
1.54 (vioral synthesis that tak) 96.42 569 P
1.54 (es into consider-) 214.59 569 P
1.53 (ation real components as well as timing con-) 72 555 P
1.43 (straints is necessary for the design of today\325) 72 541 P
1.43 (s) 292.33 541 P
0.86 (ASIC chips. In this report, we gi) 72 527 P
0.86 (v) 232.82 527 P
0.86 (e a method-) 238.64 527 P
0.98 (ology for design space e) 72 513 P
0.98 (xploration under tim-) 192.38 513 P
5.06 (ing constraints. T) 72 499 P
5.06 (o illustrate our proposed) 164.83 499 P
0.07 (methodology) 72 485 P
0.07 (, we also gi) 134.56 485 P
0.07 (v) 189.13 485 P
0.07 (e se) 194.95 485 P
0.07 (v) 213.05 485 P
0.07 (eral designs that) 218.87 485 P
0.05 (implement a Square Root Algorithm. W) 72 471 P
0.05 (e com-) 263.96 471 P
2.63 (pare these designs and gi) 72 457 P
2.63 (v) 202.19 457 P
2.63 (e their beha) 208.01 457 P
2.63 (vioral) 269 457 P
(and structural description in the Appendix.) 72 443 T
1 14 Q
(1 Intr) 72 397.67 T
(oduction) 106.36 397.67 T
0 12 Q
3.86 (In this report, we gi) 72 369 P
3.86 (v) 181.47 369 P
3.86 (e a detailed e) 187.29 369 P
3.86 (xample) 261.67 369 P
2.27 (sho) 72 355 P
2.27 (wing ho) 88.37 355 P
2.27 (w to design digital systems from) 129.33 355 P
1.3 (beha) 72 341 P
1.3 (vioral description. The e) 94.42 341 P
1.3 (xample is a cus-) 215.45 341 P
1.34 (tom ASIC for computing square root. Details) 72 327 P
1.71 (of the design as well as the source listing of) 72 313 P
2.5 (VHDL code are gi) 72 299 P
2.5 (v) 168.17 299 P
2.5 (en in the follo) 173.99 299 P
2.5 (wing sec-) 248.18 299 P
(tions.) 72 285 T
2.19 (Generally) 72 257 P
2.19 (, in the synthesis based design, the) 118.54 257 P
4.41 (algorithm is represented as a Control/Data) 72 243 P
1.8 (Flo) 72 229 P
1.8 (w Graph \050CDFG\051. From CDFG, perform-) 87.71 229 P
4.14 (ing scheduling, allocation and binding, R) 72 215 P
4.14 (T) 289.67 215 P
0.58 (le) 72 201 P
0.58 (v) 80.36 201 P
0.58 (el design can be obtained. Dif) 86.18 201 P
0.58 (ferent heuris-) 232.11 201 P
4.67 (tics in each step and dif) 72 187 P
4.67 (ferent component) 208.02 187 P
1.18 (libraries will ha) 72 173 P
1.18 (v) 149.45 173 P
1.18 (e a direct impact on the cost) 155.27 173 P
(and performance of the \336nal design.) 72 159 T
0.08 (By doing se) 72 131 P
0.08 (v) 129.19 131 P
0.08 (eral manual designs we were able) 135.01 131 P
1.31 (to formulate a methodology for e) 72 117 P
1.31 (xploring the) 237.36 117 P
(design space.) 72 103 T
-0.09 (Section 2 presents the speci\336cation of the SRA) 315 613 P
1.26 (e) 315 599 P
1.26 (xample, section 3 describes the library com-) 320.15 599 P
2.6 (ponents needed. Ne) 315 585 P
2.6 (xt in section 4 we sho) 414.32 585 P
2.6 (w) 531.34 585 P
2.76 (three dif) 315 571 P
2.76 (ferent designs, and in section 5 we) 357.78 571 P
3.83 (present the methodology) 315 557 P
3.83 (. After the conclu-) 440.54 557 P
-0.08 (sions in section 6, in the appendix we sho) 315 543 P
-0.08 (w the) 513.75 543 P
(VHDL code for our optimal design.) 315 529 T
1 14 Q
(2 Example Description) 315 485.67 T
0 12 Q
0.8 (W) 315 457 P
0.8 (e ha) 325.37 457 P
0.8 (v) 345.58 457 P
0.8 (e designed a custom ASIC which is to) 351.4 457 P
0.26 (compute the square-root approximation \050SRA\051) 315 443 P
0.57 (of 2 signed inte) 315 429 P
0.57 (gers, a and b, by the follo) 390.87 429 P
0.57 (wing) 516 429 P
(formula:) 315 415 T
(where) 315 359 T
2 F
(x) 347.32 359 T
0 F
( = max\050|) 352.64 359 T
2 F
(a) 392.47 359 T
0 F
(|, |) 398.47 359 T
2 F
(b) 409.27 359 T
0 F
(|\051, y = min\050|) 415.27 359 T
2 F
(a) 471.5 359 T
0 F
(|, |) 477.5 359 T
2 F
(b) 488.3 359 T
0 F
(|\051.) 494.3 359 T
315 381.34 528.04 405.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0 X
0 0 0 1 0 0 0 K
(a) 327.02 387 T
0 12 Q
(2) 334.71 391.58 T
2 14 Q
(b) 355.61 387 T
0 12 Q
(2) 363.31 391.58 T
0 14 Q
(+) 344.21 387 T
2 F
(m) 383.99 387 T
(a) 394.92 387 T
(x) 402.75 387 T
0 F
(0.875) 421.14 387 T
2 F
(x) 453.85 387 T
0 F
(0.5) 475 387 T
2 F
(y) 493.66 387 T
0 F
(+) 463.6 387 T
3 F
(\050) 415.49 387 T
(\051) 500.87 387 T
2 F
(x) 512.91 387 T
3 F
(,) 505.53 387 T
(\050) 409.83 387 T
(\051) 520.16 387 T
(@) 372.8 387 T
367.91 402.6 327.02 402.6 322.82 385.53 3 L
0.63 H
2 Z
N
322.82 385.53 320.02 390.3 318.62 387.92 3 L
N
0 0 612 792 C
320.76 72.01 531 351 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
320.76 72.01 531 351 R
7 X
0 0 0 1 0 0 0 K
V
389.53 302.31 457.03 329.3 R
1 H
0 Z
0 X
N
0 9 Q
(a = In1) 412.09 317.79 T
(b = In2) 412.09 308.79 T
389.53 119.86 457.03 249.71 R
N
423.97 286.87 391.62 275.62 423.97 264.84 457.72 276.09 4 Y
N
(Start) 414.59 272.51 T
(t1 = | a |) 408.5 238.76 T
(t2 = | b |) 408.5 227.55 T
(x = max\050t1,t2\051) 395.11 216.35 T
(y = min\050t1,t2\051) 395.11 205.14 T
(t3 = x >> 3) 401.69 193.93 T
(t4 = y >> 1) 401.69 182.72 T
(t5 = x - t3) 403.81 171.52 T
(t6 = t4 + t5) 402.16 160.31 T
(t7 = max\050t6,x\051) 398.92 149.1 T
(Done = 1) 408.3 137.89 T
(Out = t7) 408.3 126.69 T
423.5 297.68 426.47 297.68 423.5 287.31 420.52 297.68 4 Y
0.5 H
N
423.5 297.68 426.47 297.68 423.5 287.31 420.52 297.68 4 Y
V
423.5 302.34 423.5 297.93 2 L
2 Z
N
423.5 261.12 426.47 261.12 423.5 250.74 420.52 261.12 4 Y
0 Z
N
423.5 261.12 426.47 261.12 423.5 250.74 420.52 261.12 4 Y
V
423.5 264.37 423.5 261.37 2 L
2 Z
N
441.31 338.63 443.67 338.63 441.31 330.4 438.95 338.63 4 Y
1 H
0 Z
N
441.31 338.63 443.67 338.63 441.31 330.4 438.95 338.63 4 Y
V
458.19 276.09 496.15 276.09 496.15 340.77 441.31 341.24 441.31 339.13 5 L
2 Z
N
(Figure 1: Flo) 348.92 82.59 T
(wchart of square root algorithm.) 395.7 82.59 T
408.12 330.14 408.3 330.14 408.21 329.14 3 Y
V
426.07 119.86 426.07 100.57 358.21 100.57 358.21 342 408.21 342 408.21 330.14 6 L
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(4) 303.5 36.66 T
0 12 Q
1.67 (According to Figure 1, the SRA ASIC has 2) 72 199 P
-0.22 (input ports,) 72 185 P
2 F
-0.22 (In1) 129.24 185 P
0 F
-0.22 ( and) 145.23 185 P
2 F
-0.22 (In2) 168.13 185 P
0 F
-0.22 (, which are used to read) 184.12 185 P
3.53 (inte) 72 171 P
3.53 (gers) 89.82 171 P
2 F
3.53 (a) 116.34 171 P
0 F
3.53 ( and) 122.34 171 P
2 F
3.53 (b) 152.71 171 P
0 F
3.53 (, and one output port) 158.71 171 P
2 F
3.53 (Out) 279 171 P
0 F
1.09 (which outputs the result. In the \337o) 72 157 P
1.09 (wchart, the) 242.59 157 P
0.38 (ASIC reads the input ports and starts the com-) 72 143 P
4.5 (putation whene) 72 129 P
4.5 (v) 149.86 129 P
4.5 (er the input control signal) 155.68 129 P
2 F
0.25 (Start) 72 115 P
0 F
0.25 ( becomes equal to 1. First it computes the) 95.34 115 P
3.08 (absolute v) 72 101 P
3.08 (alues of) 123.78 101 P
2 F
3.08 (a) 170.6 101 P
0 F
3.08 ( and) 176.6 101 P
2 F
3.08 (b) 206.09 101 P
0 F
3.08 ( and assigns the) 212.09 101 P
0.33 (maximum of these 2 v) 72 87 P
0.33 (alues to) 180.35 87 P
2 F
0.33 (x) 221 87 P
0 F
0.33 ( and minimum) 226.33 87 P
0.14 (to) 315 199 P
2 F
0.14 (y) 327.48 199 P
0 F
0.14 (. Then it shifts) 332.03 199 P
2 F
0.14 (x) 404.95 199 P
0 F
0.14 ( three positions to the right) 410.27 199 P
0.11 (to obtain 0.125) 315 185 P
2 F
0.11 (x) 387.56 185 P
0 F
0.11 ( and) 392.89 185 P
2 F
0.11 (y) 416.44 185 P
0 F
0.11 ( one position to the right) 421.77 185 P
0.64 (to obtain 0.5) 315 171 P
2 F
0.64 (y) 376.61 171 P
0 F
0.64 (. The ASIC calculates 0.875) 381.16 171 P
2 F
0.64 (x) 519.03 171 P
0 F
0.64 ( by) 524.36 171 P
0.36 (subtracting 0.125) 315 157 P
2 F
0.36 (x) 398.69 157 P
0 F
0.36 ( from) 404.02 157 P
2 F
0.36 (x) 434.07 157 P
0 F
0.36 (. Ne) 439.4 157 P
0.36 (xt it adds 0.875) 459.58 157 P
2 F
0.36 (x) 534.67 157 P
0 F
0.23 (and 0.5) 315 143 P
2 F
0.23 (y) 350.55 143 P
0 F
0.23 (, and computes the maximum of) 355.1 143 P
2 F
0.23 (x) 514.12 143 P
0 F
0.23 ( and) 519.45 143 P
0.08 (the e) 315 129 P
0.08 (xpression 0.875) 337.89 129 P
2 F
0.08 (x) 413.96 129 P
0 F
0.08 ( + 0.5) 419.29 129 P
2 F
0.08 (y) 447.21 129 P
0 F
0.08 (. Finally the ASIC) 451.76 129 P
4.17 (produces the result and mak) 315 115 P
4.17 (es it a) 466.21 115 P
4.17 (v) 502.31 115 P
4.17 (ailable) 508.01 115 P
(through the) 315 101 T
2 F
(Out) 373 101 T
0 F
( port for one clock c) 391 101 T
(ycle.) 487.79 101 T
0 146 163 464 616 318 453 147.5 256.33 FMBEGINEPSF
%%BeginDocument: /home/pgrun/public_html/publications/fig8.12.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Roman Times-Italic
%%Pages: 1
%%BoundingBox: 146 163 464 616
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Roman reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 180.742 180.742 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -22 23 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 271.74 624.53 ] concat
%I
[
(\(a\)  Absolute value unit)
(            \(version 1\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 360.363 748.193 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 283.363 733.55 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 318.363 745.693 ] concat
%I
[
("0")
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 -15.7418 609.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 318.453 713.852 ] concat
%I
[
(Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 324.778 671.086 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 28.9542 470.155 ] concat
%I
393 325 479 356 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 100.118 534.5 ] concat
%I 4
484 332
484 309
449 309
449 287
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 105.118 534.5 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 100.118 534.5 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 100.118 534.5 ] concat
%I 5
525 385
556 385
556 309
525 309
525 287
5 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 336.363 641.482 ] concat
%I
[
(|b|)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 100.118 534.5 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 498.745 747.193 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 421.245 699.05 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 456.745 744.693 ] concat
%I
[
("0")
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 122.64 608.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 456.835 712.852 ] concat
%I
[
(Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 463.16 670.086 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 167.336 469.155 ] concat
%I
393 325 479 356 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 238.5 533.5 ] concat
%I 4
484 332
484 309
449 309
449 287
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 243.5 533.5 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 238.5 533.5 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 238.5 533.5 ] concat
%I 5
525 385
556 385
556 309
525 309
525 287
5 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 474.745 640.482 ] concat
%I
[
(|b|)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 238.5 533.5 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 253.5 359 ] concat
%I 4
454 658
353 658
353 613
394 613
4 MLine
%I 2
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.60181e-17 -0.588235 0.588235 3.60181e-17 199.273 741.202 ] concat
%I 3
129 417
135 402
123 402
3 Poly
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.06153e-17 -0.5 0.5 3.06153e-17 239.554 720.82 ] concat
%I
111 412 4 4 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 409.372 623.53 ] concat
%I
[
(\(b\)  Absolute value unit)
(            \(version 2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 288.986 595.693 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 224.485 551.05 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 -87.1195 458.858 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 247.075 563.352 ] concat
%I
[
(Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.4 520.586 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 -42.4235 319.655 ] concat
%I
393 325 479 356 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 33.7405 384 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 28.7405 384 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 28.7405 384 ] concat
%I 5
525 385
556 385
556 309
525 309
525 287
5 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 28.7405 384 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 250.485 595.193 ] concat
%I
[
(a)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 186.74 375 ] concat
%I 5
132 403
68 403
68 323
131 323
131 305
5 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.495968 0 0 0.529851 186.43 364.963 ] concat
%I 5
169 351
169 335
47 335
47 286
108 286
5 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 255.985 490.482 ] concat
%I
[
(min\(a,b\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 426.617 594.693 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 362.117 550.05 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 50.5122 457.858 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 384.707 562.352 ] concat
%I
[
(Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 391.032 519.586 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 95.2083 318.655 ] concat
%I
393 325 479 356 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 171.372 383 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 166.372 383 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 166.372 383 ] concat
%I 5
525 385
556 385
556 309
525 309
525 287
5 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 166.372 383 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 388.117 594.193 ] concat
%I
[
(a)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 324.372 374 ] concat
%I 5
132 403
68 403
68 323
131 323
131 305
5 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.495968 0 0 0.529851 324.062 363.963 ] concat
%I 5
169 351
169 335
47 335
47 286
108 286
5 MLine
%I 2
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.60181e-17 -0.588235 0.588235 3.60181e-17 126.145 591.202 ] concat
%I 3
129 417
135 402
123 402
3 Poly
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.06153e-17 -0.5 0.5 3.06153e-17 166.426 570.82 ] concat
%I
111 412 4 4 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 393.617 489.482 ] concat
%I
[
(max\(a,b\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 493.24 469.53 ] concat
%I
[
(\(e\) Min/Max unit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 586.613 595.693 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 522.113 551.05 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 210.508 458.858 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 544.703 563.352 ] concat
%I
[
(Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 551.028 520.586 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 255.204 319.655 ] concat
%I
393 325 479 356 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 331.368 384 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 326.368 384 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 326.368 384 ] concat
%I 5
525 385
556 385
556 309
525 309
525 287
5 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 326.368 384 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 548.113 595.193 ] concat
%I
[
(a)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 484.368 375 ] concat
%I 5
132 403
68 403
68 323
131 323
131 305
5 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 543.613 490.482 ] concat
%I
[
(min/max\(a,b\))
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 171.368 370.5 ] concat
%I 5
793 361
793 344
672 344
672 303
681 303
5 MLine
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 441.564 358.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 441.564 358.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 487.487 450.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 484.487 450.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 171.368 371 ] concat
%I
711 295 734 295 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 171.368 370.5 ] concat
%I
681 288 630 288 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 468.113 535.482 ] concat
%I
[
(min/max)
(control)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 260.354 291.193 ] concat
%I
[
(b)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 -115.751 154.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 5.1089 79.5 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 0.108898 79.5 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 221.854 290.693 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 229.444 258.852 ] concat
%I
[
(Adder)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 115.109 131 ] concat
%I
255 231 255 186 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 3.06152e-17 -0.5 0.5 3.06152e-17 181.359 382.25 ] concat
%I
255 231 255 186 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 299.854 258.693 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 233.354 220.982 ] concat
%I
[
(a+b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 397.986 290.193 ] concat
%I
[
(b)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 21.8809 153.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 142.741 78.5 ] concat
%I 2
514 402
514 365
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 137.741 78.5 ] concat
%I 2
448 397
448 365
2 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 359.486 289.693 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 367.076 257.852 ] concat
%I
[
(Adder)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 252.741 130 ] concat
%I
255 231 255 186 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 3.06152e-17 -0.5 0.5 3.06152e-17 318.991 381.25 ] concat
%I
255 231 255 186 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 437.486 257.693 ] concat
%I
[
(0)
] Text
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ -0.588235 -7.20359e-17 7.20359e-17 -0.588235 475.772 511.195 ] concat
%I 3
129 417
135 402
123 402
3 Poly
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ -0.5 -6.12305e-17 6.12305e-17 -0.5 455.39 470.914 ] concat
%I
111 412 4 4 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 370.986 219.982 ] concat
%I
[
(a-b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 233.741 195.53 ] concat
%I
[
(\(i\)  Adder)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 360.872 194.53 ] concat
%I
[
(\(j\)  Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 567.613 300.693 ] concat
%I
[
(b)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.707865 0 0 0.515625 189.008 145.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 527.613 299.693 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 534.203 249.852 ] concat
%I
[
(Adder)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 419.868 122 ] concat
%I
255 231 255 186 Line
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.3766e-16 -0.249804 0.287 1.58157e-16 405.033 344.747 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.3766e-16 -0.249804 0.287 1.58157e-16 405.033 344.747 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.71501e-17 -0.14 0.14 7.71501e-17 496.992 298.824 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.71501e-17 -0.14 0.14 7.71501e-17 496.992 301.824 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 163.868 124 ] concat
%I
803 270 803 258 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 163.868 124 ] concat
%I 4
830 242
845 242
845 312
696 312
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 163.868 124 ] concat
%I
794 311 794 301 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 163.868 124 ] concat
%I
732 331 732 258 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 162.868 123 ] concat
%I
811 334 811 302 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 486.113 289.982 ] concat
%I
[
(add/sub)
(control)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 525.613 211.482 ] concat
%I
[
(a+b / a-b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 482.74 195.53 ] concat
%I
[
(\(k\)  Adder/Subtractor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 260.236 440.193 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 222.735 396.693 ] concat
%I
[
("0")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 244.735 357.482 ] concat
%I
[
(a >> 1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 256.236 380.05 ] concat
%I
[
(. . .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 252.235 416.05 ] concat
%I
[
(. . .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 260.736 400.193 ] concat
%I
[
(. . .)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 160.99 196.943 ] concat
%I 4
153 418
153 403
171 394
171 378
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.99 196.443 ] concat
%I 4
153 418
153 403
171 394
171 378
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 191.49 196.943 ] concat
%I 4
153 418
153 403
171 394
171 378
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 201.49 196.943 ] concat
%I 4
153 418
153 403
171 394
171 378
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 160.99 197.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.99 197.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 191.49 197.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 201.49 197.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 161.49 207.55 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 201.99 207.55 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 191.99 207.55 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 143.99 207.05 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 210.99 197.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 160.99 196.943 ] concat
%I
110 377 279 419 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 206.741 330.53 ] concat
%I
[
(\(f\) 1-bit right shifter)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 342.872 329.53 ] concat
%I
[
(\(g\) 3-bit right shifter)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 468.241 330.53 ] concat
%I
[
(\(h\) 1-bit/3-bit right shifter)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 397.867 439.193 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 393.867 379.05 ] concat
%I
[
(. . .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 371.867 418.55 ] concat
%I
[
(. . .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 387.367 396.193 ] concat
%I
[
(. . .)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 290.622 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 312.122 195.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 344.122 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 294.122 206.05 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 342.622 206.05 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 331.622 206.55 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 283.622 205.55 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 352.622 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 298.622 195.943 ] concat
%I
110 377 279 419 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 357.367 394.693 ] concat
%I
[
(0  0  0)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 273.622 206.05 ] concat
%I
170 357 170 316 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 282.622 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 169.622 194.5 ] concat
%I 4
438 421
438 408
494 394
494 380
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 180.622 194.5 ] concat
%I 4
438 421
438 408
494 394
494 380
4 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 382.367 356.482 ] concat
%I
[
(a >> 3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 540.108 380.086 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.720058 0 0 0.583136 244.284 179.155 ] concat
%I
393 325 479 356 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 315.448 243.5 ] concat
%I
485 249 485 219 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 554.693 450.693 ] concat
%I
[
(a)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.419056 0 0 0.515625 326.807 308.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 528.512 412.851 ] concat
%I
[
(>>1)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.419056 0 0 0.515625 369.307 308.358 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 571.012 412.851 ] concat
%I
[
(>>3)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 145.948 200.5 ] concat
%I
866 400 866 373 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 107.448 200 ] concat
%I
866 400 866 373 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 145.948 200.5 ] concat
%I 4
867 431
867 456
783 456
783 431
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 145.948 200.5 ] concat
%I
822 478 822 455 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 145.948 200.5 ] concat
%I
763 354 680 354 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 526.193 346.982 ] concat
%I
[
(a>>3 / a>>1)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 13 167 ] concat
%I 4
350 555
279 555
279 500
299 500
4 MLine
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 320.988 675.768 ] concat
%I
[
(1                     0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 459.37 675.768 ] concat
%I
[
(1                     0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 251.61 527.268 ] concat
%I
[
(1                    0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 388.242 526.268 ] concat
%I
[
(1                    0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 548.238 527.268 ] concat
%I
[
(1                    0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 536.318 385.768 ] concat
%I
[
(1                    0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 472.693 399.55 ] concat
%I
[
(shift)
(control)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 371.372 468.53 ] concat
%I
[
(\(d\) Max unit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 235.74 469.53 ] concat
%I
[
(\(c\) Min unit)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 333.622 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 323.122 196.004 ] concat
%I
153 418 153 448 Line
%I 2
End

End %I eop

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
0 10 Q
(Figure 2: Simple library components.) 228.36 236.18 T
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(5) 303.5 36.66 T
0 12 Q
2.92 (At the same time, it sets the control signal) 72 321.17 P
2 F
1.87 (Done) 72 307.17 P
0 F
1.87 ( to 1, in order to signal to the en) 97.99 307.17 P
1.87 (viron-) 267.67 307.17 P
0.3 (ment that the data that has appeared at the) 72 293.17 P
2 F
0.3 (Out) 279 293.17 P
0 F
(port is a v) 72 279.17 T
(alid result.) 119.36 279.17 T
1 14 Q
(3 Library Components.) 72 235.83 T
0 12 Q
0.22 (In the implementation of the SRA e) 72 207.17 P
0.22 (xample we) 244.46 207.17 P
2.84 (use the library components from [1] \050\336gure) 72 193.17 P
-0.1 (8.12 and 8.21\051, replicated here for con) 72 179.17 P
-0.1 (v) 254.53 179.17 P
-0.1 (enience) 260.35 179.17 P
2.81 (in Figures 2 and 3. W) 72 165.17 P
2.81 (e describe 2 units as) 189.1 165.17 P
0.25 (e) 72 151.17 P
0.25 (xample. Other units are de\336ned similarly) 77.15 151.17 P
0.25 (. F) 274.26 151.17 P
0.25 (or) 287 151.17 P
0.33 (bre) 72 137.17 P
0.33 (vity) 87.02 137.17 P
0.33 (, we consider 4 bit v) 104.92 137.17 P
0.33 (ersions of the input) 203.69 137.17 P
(and output v) 72 123.17 T
(alues in the follo) 131.7 123.17 T
(wing e) 211.73 123.17 T
(xamples.) 243.88 123.17 T
1 F
(\0501\051 Simple library component:) 315 321.17 T
4 F
(max) 472.99 321.17 T
1 F
( unit) 494.33 321.17 T
0 F
0.48 (Figure 2\050d\051 is a functional unit performing the) 315 293.17 P
-0.13 (maximum of the 2 inputs. W) 315 279.17 P
-0.13 (e present the func-) 451.41 279.17 P
1.65 (tionality of this component here as an e) 315 265.17 P
1.65 (xam-) 515.34 265.17 P
(ple:) 315 251.17 T
1 F
(Inputs:) 315 223.17 T
2 F
(A, B) 355.34 223.17 T
0 F
(: 4-bit 2\325) 376.01 223.17 T
(s complement v) 417.35 223.17 T
(alues) 493.04 223.17 T
1 F
(Outputs:) 315 209.17 T
2 F
(O) 364.01 209.17 T
0 F
(: 4-bit 2\325) 372.67 209.17 T
(s complement v) 414.01 209.17 T
(alue) 489.71 209.17 T
1 F
(Function) 315 195.17 T
0 F
(: if) 361.01 195.17 T
2 F
(A >= B, O = A) 377.68 195.17 T
0 F
(; else) 450.64 195.17 T
2 F
(O = B) 478.63 195.17 T
1 F
0.38 (Example:) 315 181.17 P
0 F
0.38 ( \0501\051.) 364.33 181.17 P
2 F
0.38 (A =) 388.08 181.17 P
0 F
0.38 (0111 \0507\051,) 410.27 181.17 P
2 F
0.38 (B =) 458.02 181.17 P
0 F
0.38 ( 0100 \0504\051.) 476.83 181.17 P
0.38 ( A) 527.96 181.17 P
0.85 (and B are the tw) 333 167.17 P
0.85 (o inputs to the subtractor) 414.93 167.17 P
0.85 (.) 537 167.17 P
0.72 (Since the result of the subtraction is 0011,) 333 153.17 P
-1.48 (and the sign bit is 0,) 333 139.17 P
2 F
-1.48 ( A) 422.27 139.17 P
0 F
-1.48 ( is selected as output;) 431.12 139.17 P
2.45 (\0502\051.) 333 125.17 P
2 F
2.45 (A =) 355.44 125.17 P
0 F
2.45 ( 1100 \050-4\051,) 376.33 125.17 P
2 F
2.45 (B =) 437.66 125.17 P
0 F
2.45 (0001 \0501\051.) 464 125.17 P
2.45 ( The) 515.89 125.17 P
2.05 (result of the subtraction is 1011, and the) 333 111.17 P
0.08 (sign bit is 1, therefore,) 333 97.17 P
2 F
0.08 (B) 444.37 97.17 P
0 F
0.08 ( is selected as out-) 451.71 97.17 P
(put;) 333 83.17 T
(Figure 3: Comple) 212.5 345.33 T
(x library components.) 296.99 345.33 T
0 84 176 534 512 450 336 82.83 369.45 FMBEGINEPSF
%%BeginDocument: /home/pgrun/public_html/publications/fig8.21.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Italic Times-Roman
%%Pages: 1
%%BoundingBox: 84 176 534 512
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Italic reencodeISO def
/Times-Roman reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 180.742 180.742 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 14 167 ] concat
%I 4
169 139
140 139
140 154
205 154
4 MLine
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 413 -87.864 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 423 -78.364 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 400 -100.864 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 166.008 477.875 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 171.133 471.95 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 612.508 375.733 ] concat
%I
[
(Operation)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 615.508 358.511 ] concat
%I
[
(addition)
(absolute)
(subtraction)
(minimum)
(maximum)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 567.508 358.511 ] concat
%I
[
(0   0   1)
(1   0   0)
(1   0   1)
(1   1   0)
(1   1   1)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 128 170.136 ] concat
%I
541 193 430 193 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 128 168.136 ] concat
%I
478 208 478 136 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -1.02867e-16 0.56 -0.56 -1.02867e-16 810.258 138.418 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.65377e-17 -0.25 0.25 7.65377e-17 144.431 660.962 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.56 2.74312e-16 -2.74312e-16 0.56 222.614 -32.152 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.543715 -0 -0 0.543715 174.424 295.912 ] concat
%I
322 511 19 19 Elli
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.409091 -0 -0 0.5 223.455 319.5 ] concat
%I 4
312 529
280 529
280 488
312 488
4 MLine
%I 2
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 228.5 -157.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 62.5 -69.5 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 198.645 331.306 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 438.103 432.768 ] concat
%I
[
(Adder)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 6.12303e-17 -1 1 6.12303e-17 14.075 755.694 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 338.119 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 335.619 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 241 -195 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 -1.98523e-23 1.98523e-23 1 76.5 -220.999 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 338.119 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 335.619 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -1.02867e-16 0.56 -0.56 -1.02867e-16 753.258 115.918 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.65377e-17 -0.25 0.25 7.65377e-17 144.431 660.962 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 376.5 127 ] concat
%I
65 281 3 3 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 214 -199 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 213.5 -166 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 215 -175 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 166.008 477.875 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 171.133 471.95 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 3.08601e-16 -0.56 0.56 3.08601e-16 180.206 579.041 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.543715 -0 -0 0.543715 174.424 295.912 ] concat
%I
322 511 19 19 Elli
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.409091 -0 -0 0.5 223.455 319.5 ] concat
%I 4
312 529
280 529
280 488
312 488
4 MLine
%I 2
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
256 509 256 488 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 398.5 123 ] concat
%I
256 509 256 488 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -1.02867e-16 0.56 -0.56 -1.02867e-16 755.758 260.918 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.65377e-17 -0.25 0.25 7.65377e-17 144.431 660.962 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I 2
301 556
301 540
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I 2
313 591
313 541
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 372.5 122 ] concat
%I 2
264 592
264 536
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
281 458 281 431 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I 3
263 585
230 585
230 431
3 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 361.5 131.5 ] concat
%I 2
281 364
281 336
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I 5
314 585
348 585
348 370
305 370
305 355
5 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
281 309 281 273 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
213 329 235 329 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
187 338 161 338 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I
134 334 103 334 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.51087 0 0 1.1395 371.435 -85.198 ] concat
%I 4
100 306
168 306
168 324
190 324
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 373.5 122 ] concat
%I 4
133 344
117 344
117 444
281 444
4 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 502.008 429.375 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 528.008 429.375 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 447.508 356.732 ] concat
%I
[
(sign bit)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 151.386 ] concat
%I 2
344 490
344 434
2 MLine
%I 2
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.06153e-17 -0.5 0.5 3.06153e-17 -22.433 360.387 ] concat
%I
111 412 4 4 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 206.231 406.761 ] concat
%I
[
(a)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -120.277 -195.114 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 332.423 499.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 124.123 243.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 338.133 508.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -145.277 -195.614 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 111.645 435.306 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 351.103 536.768 ] concat
%I
[
(Adder)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -145.277 -195.614 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.3766e-16 -0.249804 0.287 1.58157e-16 217.415 636.994 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.3766e-16 -0.249804 0.287 1.58157e-16 217.415 636.994 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.71501e-17 -0.14 0.14 7.71501e-17 309.374 591.071 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.71501e-17 -0.14 0.14 7.71501e-17 309.374 593.571 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -142.777 -110.614 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 258.633 495.45 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 253.508 501.375 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -145.277 -162.614 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 253.008 465.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 258.133 459.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -109.777 -272.114 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 221.696 414.34 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 221.696 414.34 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 267.619 506.299 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 78.723 99.886 ] concat
%I 2
313 591
313 541
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 78.723 99.886 ] concat
%I
281 458 281 431 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 91.223 110.386 ] concat
%I 2
281 364
281 336
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 91.223 137.386 ] concat
%I
213 329 235 329 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 233.731 406.261 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 160.731 333.618 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 41.723 16.886 ] concat
%I
381 679 381 655 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.554054 0 0 0.521583 15.98 144.785 ] concat
%I 5
396 466
431 466
431 343
410 343
410 329
5 MLine
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 3.08601e-16 -0.56 0.56 3.08601e-16 -115.571 559.427 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.543715 -0 -0 0.543715 174.424 295.912 ] concat
%I
322 511 19 19 Elli
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.409091 -0 -0 0.5 223.455 319.5 ] concat
%I 4
312 529
280 529
280 488
312 488
4 MLine
%I 2
End

End %I eop

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 151.386 ] concat
%I 2
384 462
384 437
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 151.386 ] concat
%I 4
330 438
330 448
195 448
195 293
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 151.386 ] concat
%I
296 293 163 293 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 150.886 ] concat
%I
338 412 338 387 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 37.223 151.386 ] concat
%I 4
408 372
423 372
423 463
169 463
4 MLine
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 109.75 -95.5461 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 119.75 -86.0461 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 309.258 368.05 ] concat
%I
[
(Operation)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -1.75 20.8179 ] concat
%I
735 669 550 669 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 277.258 348.829 ] concat
%I
[
(1   0)
(0   1)
(1   1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 312.258 348.829 ] concat
%I
[
(addition)
(absolute)
(subtraction)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 26.25 159.318 ] concat
%I
553 418 553 313 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 2.48649 -233 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -165 -102.182 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I
415 743 415 636 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
1 SetP
%I t
[ -1.83691e-16 1 -1 -1.83691e-16 988.163 785.993 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 3.60178e-17 0.588235 -0.588235 3.60178e-17 384.882 524.118 ] concat
%I 3
129 417
135 402
123 402
3 Poly
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.06152e-17 0.5 -0.5 3.06152e-17 344.601 544.5 ] concat
%I
111 412 4 4 Elli
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 360.258 975.375 ] concat
%I
[
(a)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 89.75 389 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -76.25 477 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 198.645 331.306 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 438.103 432.768 ] concat
%I
[
(Adder)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 102.25 351.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 -1.98523e-23 1.98523e-23 1 -34.75 322.001 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 338.119 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 335.619 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 109.25 487 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 107.25 383 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 234.75 668.5 ] concat
%I
281 458 281 431 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.427885 0 0 0.455083 250.953 687.859 ] concat
%I 3
263 585
230 585
230 431
3 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 222.75 678 ] concat
%I 2
281 364
281 336
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 234.75 668.5 ] concat
%I
281 309 281 273 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 389.758 974.875 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 314.258 902.732 ] concat
%I
[
(sign bit)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 3.08601e-16 -0.56 0.56 3.08601e-16 39.9294 1126.04 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.543715 -0 -0 0.543715 174.424 295.912 ] concat
%I
322 511 19 19 Elli
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.409091 -0 -0 0.5 223.455 319.5 ] concat
%I 4
312 529
280 529
280 488
312 488
4 MLine
%I 2
End

End %I eop

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 594.5 ] concat
%I 2
366 741
366 685
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 5
416 716
456 716
456 517
413 517
413 502
5 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 3
355 684
355 700
210 700
3 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 181 595 ] concat
%I
325 479 342 479 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 4
297 484
277 484
277 591
389 591
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 3
319 551
249 551
249 700
3 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I
297 472 214 472 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I
362 659 362 636 Line
%I 2
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -181 -104.75 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 283.75 454.636 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 293.75 464.136 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 483.258 918.232 ] concat
%I
[
(Operation)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 172.25 571 ] concat
%I
735 669 550 669 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 200.25 709.5 ] concat
%I
553 418 553 313 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 486.258 899.011 ] concat
%I
[
(absolute)
(minimum)
(maximum)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 451.258 899.011 ] concat
%I
[
(0   1)
(1   0)
(1   1)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 2.74999 -235 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 102.75 75.5 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 280.136 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 304 289.636 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 493.508 743.732 ] concat
%I
[
(Operation)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 461.508 724.511 ] concat
%I
[
(0   0)
(0   1)
(1   0)
(1   1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 496.508 724.511 ] concat
%I
[
(addition)
(minimum)
(subtraction)
(maximum)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 182.5 396.5 ] concat
%I
609 695 609 567 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 182.5 396.5 ] concat
%I
735 669 550 669 Line
%I 2
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 158 97.068 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 340.258 776.375 ] concat
%I
[
(a)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 51.25 190 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -96.25 278 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 198.645 331.306 ] concat
%I
463 179 550 209 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 438.103 432.768 ] concat
%I
[
(Adder)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 6.12303e-17 -1 1 6.12303e-17 -144.675 1103.19 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 338.119 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 335.619 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 68.75 152.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.811299 0 0 0.811299 253.423 483.768 ] concat
%I
[
(Selector)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.521482 0 0 0.751939 45.1226 227.243 ] concat
%I
393 325 479 356 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 259.133 492.45 ] concat
%I
[
(1             0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 -1.98523e-23 1.98523e-23 1 -86.75 158.501 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249804 1.22364e-16 -1.40584e-16 0.287 292.196 352.84 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 338.119 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.14 6.85779e-17 -6.85779e-17 0.14 335.619 444.799 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 242.75 534 ] concat
%I
65 281 3 3 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 68.25 210 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 170.633 458.95 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 165.508 464.875 ] concat
%I
[
(c)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 66.75 185.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 167.508 455.375 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.51367 0 0 0.51367 172.633 449.45 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -1.02867e-16 0.56 -0.56 -1.02867e-16 628.508 599.418 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 576
325 576
342 556
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.36567e-16 -0.446079 0.5125 1.56902e-16 -19.7819 742.967 ] concat
%I 3
292 538
325 537
342 557
3 BSpl
%I 2
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 7.65377e-17 -0.25 0.25 7.65377e-17 144.431 660.962 ] concat
%I 3
193 524
216 483
193 446
3 BSpl
%I 4
End

End %I eop

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 214.75 469.5 ] concat
%I 2
301 556
301 540
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 214.75 469.5 ] concat
%I 2
313 591
313 541
2 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.869559 0 0 0.308725 113.294 551.925 ] concat
%I 3
263 585
230 585
230 431
3 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 202.75 469 ] concat
%I
281 309 281 273 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 183.75 506.5 ] concat
%I
213 329 235 329 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 369.758 775.875 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.772778 0 0 0.772778 274.258 706.732 ] concat
%I
[
(sign bit)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 177.75 386.5 ] concat
%I 2
328 760
328 655
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 177.75 386.5 ] concat
%I
381 679 381 655 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 177.75 386.5 ] concat
%I 4
400 641
414 641
414 723
240 723
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.4 0 0 0.495496 -16.6499 389.725 ] concat
%I 3
216 716
198 716
198 496
3 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05276 0 0 0.5 57.249 386.5 ] concat
%I 3
218 728
186 728
186 562
3 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180 594.5 ] concat
%I
350 207 350 106 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 5
382 318
417 318
417 193
311 193
311 180
5 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 4
286 132
286 119
300 119
300 105
4 MLine
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I 4
185 158
167 158
167 202
349 202
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 595 ] concat
%I
192 145 127 145 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 180.5 596 ] concat
%I
277 80 127 80 Line
%I 2
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 153.74 461.53 ] concat
%I
[
(\(a\)  Unit for computing minimum, )
(       maximum and absolute value)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 425.504 461.53 ] concat
%I
[
(\(b\)  Unit for computing addition, )
(       subtraction, minimum and maximum)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 145.74 245.53 ] concat
%I
[
(\(c\)  Unit for computing addition, )
(       subtraction, and absolute value)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 410.504 245.53 ] concat
%I
[
(\(d\)  Unit for computing addition, subtraction, )
(        minimum, maximum and absolute value)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 14 167 ] concat
%I 3
393 117
393 240
400 240
3 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 14 167 ] concat
%I 3
484 223
484 242
411 242
3 MLine
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290 249.5 ] concat
%I
214 37 214 302 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I 4
492 220
506 220
506 302
214 302
4 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I
243 79 223 79 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I
235 37 213 37 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I 2
376 150
223 150
2 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 250 ] concat
%I
239 21 199 21 Line
%I 2
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I 3
223 22
223 329
247 329
3 MLine
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I
243 89 201 89 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I
243 70 200 70 Line
%I 2
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 290.5 249.5 ] concat
%I
211 87 215 91 Rect
End

End %I eop

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(6) 303.5 36.66 T
1 12 Q
3.42 (\0502\051 Complex library component:) 72 698 P
4 F
3.42 (abs/min/) 254.32 698 P
(max) 72 684 T
1 F
( unit) 93.34 684 T
0 F
0.41 (A library of comple) 72 656 P
0.41 (x functional units from [1]) 168.03 656 P
1.38 (is presented in Figure 3. These units perform) 72 642 P
1.95 (combinations of the) 72 628 P
2 F
1.95 (+, -, min, max,) 176.17 628 P
0 F
1.95 ( and) 253.11 628 P
2 F
1.95 (abs) 280.33 628 P
0 F
1.38 (operations. In order to sho) 72 614 P
1.38 (w ho) 203.52 614 P
1.38 (w the compo-) 228.26 614 P
4.83 (nents from the comple) 72 600 P
4.83 (x library w) 193.97 600 P
4.83 (ork, we) 256.18 600 P
-0.27 (describe the) 72 586 P
2 F
-0.27 (abs/min/max) 132.1 586 P
0 F
-0.27 (unit from Figure 3\050a\051) 196.16 586 P
(belo) 72 572 T
(w) 92.36 572 T
(.) 100.25 572 T
1 F
(Inputs) 72 544 T
0 F
(:) 105.35 544 T
2 F
(A, B) 111.68 544 T
0 F
(: 4-bit 2\325) 132.35 544 T
(s complement v) 173.69 544 T
(alues) 249.38 544 T
2 F
(c1, c0:) 105 530 T
0 F
( 1-bit mode control signal) 137.65 530 T
1 F
(Outputs) 72 516 T
0 F
(:) 114.01 516 T
2 F
(O) 120.35 516 T
0 F
(: 4-bit 2\325) 129.01 516 T
(s complement v) 170.35 516 T
(alue) 246.05 516 T
1 F
(Function) 72 502 T
0 F
(:) 118.01 502 T
(If) 108 488 T
2 F
(c1c0 = 01) 118.99 488 T
0 F
(:) 167.75 488 T
2 F
(O = abs\050B\051) 174.08 488 T
0 F
(;) 228.84 488 T
(If) 108 474 T
2 F
(c1c0 = 10) 118.99 474 T
0 F
(:) 167.75 474 T
2 F
(O = min\050A. B\051;) 174.08 474 T
0 F
(If) 108 460 T
2 F
(c1c0 = 11) 118.99 460 T
0 F
(:) 167.75 460 T
2 F
(O = max\050A, B\051;) 174.08 460 T
1 F
1.44 (Example) 72 446 P
0 F
1.44 (: \0501\051. Assume) 117.34 446 P
2 F
1.44 (c1c0 =) 189.63 446 P
0 F
1.44 ( 01,) 224.83 446 P
2 F
1.44 (A =) 248.7 446 P
0 F
1.44 ( 0111) 268.56 446 P
1.38 (\0507\051,) 90 432 P
2 F
1.38 (B =) 111.38 432 P
0 F
1.38 ( 1100 \050-4\051. Since) 131.19 432 P
2 F
1.38 (c1 =) 220.38 432 P
0 F
1.38 ( 0, the left) 244.19 432 P
1.08 (input to the 4-bit adder is) 90 418 P
1.08 (0000. The right) 220.5 418 P
0.71 (input is 0011 by in) 90 404 P
0.71 (v) 182.38 404 P
0.71 (erting) 188.21 404 P
2 F
0.71 (B) 219.91 404 P
0 F
0.71 (\0501100\051. So the) 227.25 404 P
1.66 (result of the adder is 0100. Since) 90 390 P
2 F
1.66 (c1 =) 262.26 390 P
0 F
1.66 (0) 291 390 P
-0.07 (this result is selected as the left input of the) 90 376 P
2.43 (output selector) 90 362 P
2.43 (. Since the sign bit of the) 162.76 362 P
-0.04 (adder result is 0, and) 90 348 P
2 F
-0.04 (c0 =) 192.44 348 P
0 F
-0.04 ( 1, the control bit) 214.83 348 P
0.28 (for the output selector is 1. Therefore,) 90 334 P
2 F
0.28 (O =) 276.95 334 P
0 F
-0.08 (0100 \0504\051 which is equi) 90 320 P
-0.08 (v) 197.37 320 P
-0.08 (alent to) 203.07 320 P
2 F
-0.08 (abs\050B\051) 241.57 320 P
0 F
-0.08 (.) 273.56 320 P
0.52 (\0502\051. Assume) 107 306 P
2 F
0.52 (c1c0 =) 169.7 306 P
0 F
0.52 ( 10,) 203.98 306 P
2 F
0.52 (A =) 226.02 306 P
0 F
0.52 ( 1110 \050-2\051,) 244.97 306 P
2 F
0.62 (B =) 90 292 P
0 F
0.62 ( 1011 \050-5\051. Since) 109.05 292 P
2 F
0.62 (c1 =) 195.16 292 P
0 F
0.62 ( 1, the left input) 218.21 292 P
1.08 (to the 4-bit adder is 1110. The right input) 90 278 P
3.34 (of the adder is 0100. The result of the) 90 264 P
2.5 (adder is 0011. Since the sign bit of this) 90 250 P
-0.01 (result is 0, and c0 = 0, the control bit of the) 90 236 P
1.94 (output selector is 0. Therefore,) 90 222 P
2 F
1.94 (O = B =) 249.99 222 P
0 F
(1011 \050-5\051, which is equi) 90 208 T
(v) 204.68 208 T
(alent to) 210.38 208 T
2 F
(min\050A,B\051.) 249.05 208 T
0 F
1.11 (In the T) 72 180 P
1.11 (ables 1,2 and 3 we present the delays) 111.26 180 P
3.63 (and the cost of the functional units in the) 72 166 P
2.95 (library) 72 152 P
2.95 (. The cost is e) 103.21 152 P
2.95 (xpressed in number of) 181.16 152 P
(transistors, whereas the delay is in) 72 138 T
2 F
(ns) 239.64 138 T
0 F
(.) 250.31 138 T
0 9 Q
(No) 321.85 665.5 T
(Component) 357.97 665.5 T
(Delay) 427.25 682 T
(from) 429.25 671 T
(input) 428.74 660 T
(\050ns\051) 431 649 T
(Delay) 468.4 682 T
(from) 470.4 671 T
(control) 466.4 660 T
(\050ns\051) 472.15 649 T
(Cost) 512.02 671 T
(\050trans.\051) 507.4 660 T
0 10 Q
(1) 321.62 627.33 T
(and 2 input) 345.08 627.33 T
(2.4) 424.87 627.33 T
(6) 507.17 627.33 T
(2) 321.62 607.33 T
(and 3 input) 345.08 607.33 T
(2.4) 424.87 607.33 T
(8) 507.17 607.33 T
(3) 321.62 587.33 T
(and 4 input) 345.08 587.33 T
(3.2) 424.87 587.33 T
(10) 507.17 587.33 T
(4) 321.62 567.33 T
(or 2 input) 345.08 567.33 T
(2.4) 424.87 567.33 T
(6) 507.17 567.33 T
(5) 321.62 547.33 T
(or 3 input) 345.08 547.33 T
(2.4) 424.87 547.33 T
(8) 507.17 547.33 T
(6) 321.62 527.33 T
(or 4 input) 345.08 527.33 T
(3.2) 424.87 527.33 T
(10) 507.17 527.33 T
(7) 321.62 507.33 T
(xor 2 input) 345.08 507.33 T
(4.2) 424.87 507.33 T
(14) 507.17 507.33 T
(8) 321.62 487.33 T
(nand 2 input) 345.08 487.33 T
(1.4) 424.87 487.33 T
(4) 507.17 487.33 T
(9) 321.62 467.33 T
(nand 3 input) 345.08 467.33 T
(1.8) 424.87 467.33 T
(6) 507.17 467.33 T
(10) 321.62 447.33 T
(nand 4 input) 345.08 447.33 T
(2.2) 424.87 447.33 T
(8) 507.17 447.33 T
(11) 321.62 427.33 T
(in) 345.08 427.33 T
(v) 352.46 427.33 T
(1) 424.87 427.33 T
(2) 507.17 427.33 T
(12) 321.62 407.33 T
(full adder) 345.08 407.33 T
(8.4) 424.87 407.33 T
(30) 507.17 407.33 T
(13) 321.62 387.33 T
(df) 345.08 387.33 T
(f) 353.16 387.33 T
(4) 424.87 387.33 T
(18) 507.17 387.33 T
(14) 321.62 367.33 T
(df) 345.08 367.33 T
(f with clear) 353.16 367.33 T
(4) 424.87 367.33 T
(26) 507.17 367.33 T
(15) 321.62 347.33 T
(mux 2 to 1) 345.08 347.33 T
(4.8) 424.87 347.33 T
(5.8) 463.12 347.33 T
(14) 507.17 347.33 T
(16) 321.62 327.33 T
(and_) 345.08 327.33 T
(16) 345.08 315.33 T
(2.4) 424.87 327.33 T
(96) 507.17 327.33 T
(17) 321.62 295.33 T
(or_16) 345.08 295.33 T
(2.4) 424.87 295.33 T
(96) 507.17 295.33 T
(18) 321.62 275.33 T
(xor_16) 345.08 275.33 T
(4.2) 424.87 275.33 T
(224) 507.17 275.33 T
(19) 321.62 255.33 T
(in) 345.08 255.33 T
(v_16) 352.46 255.33 T
(1) 424.87 255.33 T
(32) 507.17 255.33 T
(20) 321.62 235.33 T
(Ripple carry) 345.08 235.33 T
(adder_16) 345.08 223.33 T
(50.4) 424.87 235.33 T
(494) 507.17 235.33 T
(21) 321.62 203.33 T
(CLA adder_16) 345.08 203.33 T
(21.6) 424.87 203.33 T
(1074) 507.17 203.33 T
(22) 321.62 183.33 T
(b) 345.08 183.33 T
(uf) 349.88 183.33 T
(fer_16) 357.96 183.33 T
(2) 424.87 183.33 T
(96) 507.17 183.33 T
(23) 321.62 163.33 T
(re) 345.08 163.33 T
(gister_16) 352.7 163.33 T
(4) 424.87 163.33 T
(512) 507.17 163.33 T
(24) 321.62 143.33 T
(selector2_16) 345.08 143.33 T
(4.8) 424.87 143.33 T
(5.8) 463.12 143.33 T
(224) 507.17 143.33 T
0 12 Q
(T) 324.83 122 T
(able 1: Delays and costs of simple library) 331.2 122 T
(components) 398.5 108 T
315.62 695.75 315.62 136.25 2 L
V
0.5 H
0 Z
N
339.08 696.25 339.08 135.75 2 L
V
N
418.87 696.25 418.87 135.75 2 L
V
N
457.12 696.25 457.12 135.75 2 L
V
N
501.17 696.25 501.17 135.75 2 L
V
N
539.38 695.75 539.38 136.25 2 L
V
N
315.37 696 539.63 696 2 L
V
N
315.87 641.25 539.13 641.25 2 L
V
N
315.87 638.75 539.13 638.75 2 L
V
N
315.37 620 539.63 620 2 L
V
N
315.37 600 539.63 600 2 L
V
N
315.37 580 539.63 580 2 L
V
N
315.37 560 539.63 560 2 L
V
N
315.37 540 539.63 540 2 L
V
N
315.37 520 539.63 520 2 L
V
N
315.37 500 539.63 500 2 L
V
N
315.37 480 539.63 480 2 L
V
N
315.37 460 539.63 460 2 L
V
N
315.37 440 539.63 440 2 L
V
N
315.37 420 539.63 420 2 L
V
N
315.37 400 539.63 400 2 L
V
N
315.37 380 539.63 380 2 L
V
N
315.37 360 539.63 360 2 L
V
N
315.37 340 539.63 340 2 L
V
N
315.37 308 539.63 308 2 L
V
N
315.37 288 539.63 288 2 L
V
N
315.37 268 539.63 268 2 L
V
N
315.37 248 539.63 248 2 L
V
N
315.37 216 539.63 216 2 L
V
N
315.37 196 539.63 196 2 L
V
N
315.37 176 539.63 176 2 L
V
N
315.37 156 539.63 156 2 L
V
N
315.37 136 539.63 136 2 L
V
N
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(7) 303.5 36.66 T
0 12 Q
-0.1 (T) 315 582 P
-0.1 (able 1 sho) 321.37 582 P
-0.1 (ws the simple components from the) 369.53 582 P
0.77 (library \050the components numbered 1 to 15 are) 315 568 P
0.62 (1-bit components, whereas 16 to 24 are 16-bit) 315 554 P
(functional units and re) 315 540 T
(gisters\051.) 422.47 540 T
0.59 (T) 315 512 P
0.59 (able 2 sho) 321.37 512 P
0.59 (ws the cost and delay for the com-) 370.91 512 P
4.04 (ple) 315 498 P
4.04 (x functional units using the ripple-carry) 329.48 498 P
1.35 (adder) 315 484 P
1.35 (, whereas T) 341.17 484 P
1.35 (able 3 sho) 398.56 484 P
1.35 (ws the same com-) 449.63 484 P
(ponents with 2-le) 315 470 T
(v) 398.03 470 T
(el CLA adder) 403.85 470 T
(.) 468.5 470 T
0.52 (In the third/fourth column we sho) 315 442 P
0.52 (w the delays) 478.97 442 P
0.94 (from the data-inputs/control-inputs to the out-) 315 428 P
-0.02 (put. This is the w) 315 414 P
-0.02 (orse case delay for single sig-) 397.8 414 P
(nal change from an) 315 400 T
(y input to an) 407.12 400 T
(y output.) 467.28 400 T
1.37 (F) 315 372 P
1.37 (or area we use 1 literal/2 transistors estima-) 321.49 372 P
1.94 (tion for the basic g) 315 358 P
1.94 (ates \050) 412.68 358 P
2 F
1.94 (nand, nor) 440.28 358 P
1.94 (, in) 487.55 358 P
1.94 (verter) 504.35 358 P
0 F
1.94 (\051,) 533 358 P
1.63 (which we use subsequently in the rest of the) 315 344 P
(components.) 315 330 T
1 14 Q
(4 Design Space Exploration.) 315 302 T
0 12 Q
4.73 (The problem addressed is starting from a) 315 274 P
1.4 (beha) 315 260 P
1.4 (vioral description to generate R) 337.42 260 P
1.4 (TL struc-) 493.61 260 P
0.27 (tural implementations of the algorithm satisfy-) 315 246 P
-0.21 (ing a timing constraint, using R) 315 232 P
-0.21 (TL components) 464.55 232 P
(from a library) 315 218 T
(.) 380.87 218 T
0.85 (By using dif) 315 190 P
0.85 (ferent components from a library) 375.74 190 P
0.85 (,) 537 190 P
-0.06 (we can obtain a lar) 315 176 P
-0.06 (ge spectrum of implementa-) 405.19 176 P
-0.21 (tions for the gi) 315 162 P
-0.21 (v) 384.41 162 P
-0.21 (en beha) 390.23 162 P
-0.21 (vioral description. Intu-) 426.76 162 P
3.21 (iti) 315 148 P
3.21 (v) 324.71 148 P
3.21 (ely) 330.53 148 P
3.21 (, if we allocate more functional units) 344.41 148 P
-0.14 (\050more potential for parallelism\051, or f) 315 134 P
-0.14 (aster units,) 488.14 134 P
-0.24 (we can increase the speed. If the speed require-) 315 120 P
2.25 (ments are not important, we can use less or) 315 106 P
1.72 (slo) 315 92 P
1.72 (wer functional units, and obtain a cheaper) 328.7 92 P
0.61 (implementation. Based on the requirements of) 315 78 P
0 9 Q
(No) 80.54 689.5 T
(Component) 112.95 689.5 T
(Delay) 178.38 706 T
(from) 180.38 695 T
(input) 179.87 684 T
(\050ns\051) 182.13 673 T
(Delay) 219.53 706 T
(from) 221.53 695 T
(control) 217.53 684 T
(\050ns\051) 223.28 673 T
(Cost) 265.32 695 T
(\050trans.\051) 260.7 684 T
0 10 Q
(25) 80.16 651.33 T
(+/-) 103.91 651.33 T
(54.6) 176 651.33 T
(54.6) 214.25 651.33 T
(718) 258.3 651.33 T
(26) 80.16 631.33 T
(abs1) 103.91 631.33 T
(56.2) 176 631.33 T
(750) 258.3 631.33 T
(27) 80.16 611.33 T
(abs2) 103.91 611.33 T
(57.2) 176 611.33 T
(752) 258.3 611.33 T
(28) 80.16 591.33 T
(min) 103.91 591.33 T
(56.2) 176 591.33 T
(750) 258.3 591.33 T
(29) 80.16 571.33 T
(max) 103.91 571.33 T
(57.2) 176 571.33 T
(752) 258.3 571.33 T
(30) 80.16 551.33 T
(min/max) 103.91 551.33 T
(60.4) 176 551.33 T
(10) 214.25 551.33 T
(764) 258.3 551.33 T
(31) 80.16 531.33 T
(shift1) 103.91 531.33 T
(0) 176 531.33 T
(0) 258.3 531.33 T
(32) 80.16 511.33 T
(shift3) 103.91 511.33 T
(0) 176 511.33 T
(0) 258.3 511.33 T
(33) 80.16 491.33 T
(abs/min/max) 103.91 491.33 T
(62.8) 176 491.33 T
(62.8) 214.25 491.33 T
(1084) 258.3 491.33 T
(34) 80.16 471.33 T
(+/-/abs/min/) 103.91 471.33 T
(max) 103.91 459.33 T
(69.6) 176 471.33 T
(70.2) 214.25 471.33 T
(1318) 258.3 471.33 T
(35) 80.16 439.33 T
(+/-/abs) 103.91 439.33 T
(63.8) 176 439.33 T
(63.8) 214.25 439.33 T
(1046) 258.3 439.33 T
(36) 80.16 419.33 T
(+/-/min/max) 103.91 419.33 T
(70.4) 176 419.33 T
(72.8) 214.25 419.33 T
(1188) 258.3 419.33 T
0 12 Q
(T) 77.26 398 T
(able 2: Delays and costs of comple) 83.63 398 T
(x library) 250.75 398 T
(components using ripple-carry adder) 96.35 384 T
0 9 Q
(No) 79.08 337.5 T
(Component) 110.6 337.5 T
(Delay) 175.63 354 T
(From) 176.62 343 T
(Input) 176.88 332 T
(\050ns\051) 179.38 321 T
(Delay) 218.27 354 T
(From) 219.26 343 T
(Control) 215.26 332 T
(\050ns\051) 222.02 321 T
(Cost) 265.91 343 T
(\050trans.\051) 261.29 332 T
0 10 Q
(25) 78.71 299.33 T
(+/-) 102.45 299.33 T
(25.8) 172.75 299.33 T
(25.8) 212 299.33 T
(1298) 258.02 299.33 T
(26) 78.71 279.33 T
(abs1) 102.45 279.33 T
(27.4) 172.75 279.33 T
(1330) 258.02 279.33 T
(27) 78.71 259.33 T
(abs2) 102.45 259.33 T
(28.4) 172.75 259.33 T
(1332) 258.02 259.33 T
(28) 78.71 239.33 T
(min) 102.45 239.33 T
(27.4) 172.75 239.33 T
(1330) 258.02 239.33 T
(29) 78.71 219.33 T
(max) 102.45 219.33 T
(28.4) 172.75 219.33 T
(1332) 258.02 219.33 T
(30) 78.71 199.33 T
(min/max) 102.45 199.33 T
(31.2) 172.75 199.33 T
(10) 212 199.33 T
(1344) 258.02 199.33 T
(31) 78.71 179.33 T
(shift1) 102.45 179.33 T
(0) 172.75 179.33 T
(0) 258.02 179.33 T
(32) 78.71 159.33 T
(shift3) 102.45 159.33 T
(0) 172.75 159.33 T
(0) 258.02 159.33 T
(33) 78.71 139.33 T
(abs/min/max) 102.45 139.33 T
(33.6) 172.75 139.33 T
(33.6) 212 139.33 T
(1664) 258.02 139.33 T
0 12 Q
(T) 94.75 118 T
(able 3: Delays and costs of comple) 101.12 118 T
(x) 268.25 118 T
(components using CLA adder) 111.5 104 T
(.) 254.5 104 T
74.16 719.75 74.16 412.25 2 L
V
0.5 H
0 Z
N
97.91 720.25 97.91 411.75 2 L
V
N
170 720.25 170 411.75 2 L
V
N
208.25 720.25 208.25 411.75 2 L
V
N
252.3 720.25 252.3 411.75 2 L
V
N
294.84 719.75 294.84 412.25 2 L
V
N
73.91 720 295.09 720 2 L
V
N
74.41 665.25 294.59 665.25 2 L
V
N
74.41 662.75 294.59 662.75 2 L
V
N
73.91 644 295.09 644 2 L
V
N
73.91 624 295.09 624 2 L
V
N
73.91 604 295.09 604 2 L
V
N
73.91 584 295.09 584 2 L
V
N
73.91 564 295.09 564 2 L
V
N
73.91 544 295.09 544 2 L
V
N
73.91 524 295.09 524 2 L
V
N
73.91 504 295.09 504 2 L
V
N
73.91 484 295.09 484 2 L
V
N
73.91 452 295.09 452 2 L
V
N
73.91 432 295.09 432 2 L
V
N
73.91 412 295.09 412 2 L
V
N
72.71 367.75 72.71 132.25 2 L
V
N
96.45 368.25 96.45 131.75 2 L
V
N
166.75 368.25 166.75 131.75 2 L
V
N
206 368.25 206 131.75 2 L
V
N
252.02 368.25 252.02 131.75 2 L
V
N
296.29 367.75 296.29 132.25 2 L
V
N
72.46 368 296.54 368 2 L
V
N
72.46 312 296.54 312 2 L
V
N
72.46 292 296.54 292 2 L
V
N
72.46 272 296.54 272 2 L
V
N
72.46 252 296.54 252 2 L
V
N
72.46 232 296.54 232 2 L
V
N
72.46 212 296.54 212 2 L
V
N
72.46 192 296.54 192 2 L
V
N
72.46 172 296.54 172 2 L
V
N
72.46 152 296.54 152 2 L
V
N
72.46 132 296.54 132 2 L
V
N
0 10 Q
(34) 321.71 707.33 T
(+/-/abs/min/) 345.45 707.33 T
(max) 345.45 695.33 T
(40.4) 415.75 707.33 T
(40.8) 455 707.33 T
(1898) 501.02 707.33 T
(35) 321.71 675.33 T
(+/-/abs) 345.45 675.33 T
(34.6) 415.75 675.33 T
(34.6) 455 675.33 T
(1626) 501.02 675.33 T
(36) 321.71 655.33 T
(+/-/min/max) 345.45 655.33 T
(41) 415.75 655.33 T
(43.4) 455 655.33 T
(1768) 501.02 655.33 T
0 12 Q
(T) 337.75 634 T
(able 3: Delays and costs of comple) 344.12 634 T
(x) 511.25 634 T
(components using CLA adder) 354.5 620 T
(.) 497.5 620 T
315.71 719.75 315.71 648.25 2 L
V
N
339.45 720.25 339.45 647.75 2 L
V
N
409.75 720.25 409.75 647.75 2 L
V
N
449 720.25 449 647.75 2 L
V
N
495.02 720.25 495.02 647.75 2 L
V
N
539.29 719.75 539.29 648.25 2 L
V
N
315.46 720 539.54 720 2 L
V
N
315.46 688 539.54 688 2 L
V
N
315.46 668 539.54 668 2 L
V
N
315.46 648 539.54 648 2 L
V
N
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(8) 303.5 36.66 T
0 12 Q
4.45 (a speci\336c application, one can choose the) 72 712 P
(implementation which best \336ts it\325) 72 698 T
(s needs.) 232.68 698 T
1.77 (In the follo) 72 460 P
1.77 (wing we will present the w) 128.56 460 P
1.77 (ay we) 266.91 460 P
0.99 (deri) 72 446 P
0.99 (v) 90.36 446 P
0.99 (e tw) 96.18 446 P
0.99 (o sets of three dif) 117.38 446 P
0.99 (ferent implementa-) 204.36 446 P
1.04 (tions for the SRA algorithm: the \336rst three of) 72 432 P
1.5 (them are deri) 72 418 P
1.5 (v) 138.02 418 P
1.5 (ed using the library of compo-) 143.84 418 P
2.47 (nents sho) 72 404 P
2.47 (wn in T) 119.17 404 P
2.47 (ables 1 and 2 \050ripple-carry) 160.49 404 P
-0.21 (adder v) 72 390 P
-0.21 (ersion\051, and the ne) 107.26 390 P
-0.21 (xt 3 use the library of) 195.08 390 P
3.44 (components summarized in T) 72 376 P
3.44 (ables 1 and 3) 223.69 376 P
1.39 (\050carry-look-ahead adder v) 72 362 P
1.39 (ersion\051. In each set,) 199.2 362 P
1.47 (the \336rst implementation maximizes the speed) 72 348 P
0.12 (of the resulting chip, the second one sho) 72 334 P
0.12 (ws the) 265.88 334 P
1.61 (best cost/performance trade-of) 72 320 P
1.61 (f, and the third) 221.53 320 P
6 (implementation represents the lo) 72 306 P
6 (west cost) 246.68 306 P
(solution.) 72 292 T
2.13 (The points \0501.1\051, \0501.2\051 and \0501.3\051 in Figure 4) 72 264 P
5.9 (represent the ripple-carry implementations,) 72 250 P
0.91 (whereas the points \0502.1\051, \0502.2\051 and \0502.3\051 sho) 72 236 P
0.91 (w) 288.34 236 P
1.05 (the CLA implementation in terms of) 72 222 P
2 F
1.05 (cost) 256.29 222 P
0 F
1.05 ( and) 275.62 222 P
2 F
2.75 (e) 72 208 P
2.75 (xecution time) 77.09 208 P
0 F
2.75 (. The best design in terms of) 144.16 208 P
1.35 (both cost and performance should ha) 72 194 P
1.35 (v) 255.49 194 P
1.35 (e mini-) 261.31 194 P
(mal product of) 72 180 T
2 F
(cost) 145.66 180 T
0 F
(and) 167.99 180 T
2 F
(e) 188.32 180 T
(xecution t) 193.4 180 T
0 F
(ime.) 240.4 180 T
3.18 (W) 72 150.67 P
3.18 (e tried man) 82.37 150.67 P
3.18 (y implementations b) 142.53 150.67 P
3.18 (ut for the) 246.65 150.67 P
0.21 (sak) 72 134.67 P
0.21 (e of bre) 87.88 134.67 P
0.21 (vity we only sho) 124.64 134.67 P
0.21 (w 6 of them. In the) 204.64 134.67 P
0.94 (follo) 72 118.67 P
0.94 (wing we sho) 94.37 118.67 P
0.94 (w the three schedules gener-) 156.61 118.67 P
0.39 (ated for the slo) 72 102.67 P
0.39 (wer library) 144.53 102.67 P
0.39 (, and by only chang-) 197.12 102.67 P
1.15 (ing the cost and delay of the adders used, we) 72 86.67 P
1.39 (recompute the cost and e) 315 710.67 P
1.39 (x) 439.68 710.67 P
1.39 (ecution time of the) 445.51 710.67 P
(implementations under the f) 315 694.67 T
(aster library) 449.87 694.67 T
(.) 506.74 694.67 T
1.57 (In the F) 315 666 P
1.57 (ollo) 355.28 666 P
1.57 (wing three cases, we use the for-) 373.66 666 P
-0.22 (mula) 315 652 P
4 F
-0.22 (ex) 341.77 652 P
-0.22 (ecution time) 352.98 652 P
2 F
-0.22 ( = cloc) 413.77 652 P
-0.22 (k cycle) 447.17 652 P
5 F
-0.25 (x) 482.69 652 P
2 F
-0.22 ( number of) 488.45 652 P
(states) 315 638 T
0 F
( to compute the e) 342.34 638 T
(x) 424.81 638 T
(ecution time.) 430.63 638 T
1 F
(Case 1. F) 315 608 T
(astest schedule and allocation.) 361.69 608 T
0 F
3 (Starting from the \337o) 315 580 P
3 (wchart representing the) 421.37 580 P
0.36 (SRA algorithm, we deri) 315 566 P
0.36 (v) 430.43 566 P
0.36 (e the CDFG. In order) 436.26 566 P
4.5 (to generate the f) 315 552 P
4.5 (astest implementation, we) 406.01 552 P
3.62 (assume initially that each operation is per-) 315 538 P
0.09 (formed by the f) 315 524 P
0.09 (astest component in the library) 389.45 524 P
0.09 (.) 537 524 P
(Later on, we optimize the description, by) 315 510 T
0.62 (allo) 315 130 P
0.62 (wing operations that are not on the critical) 332.7 130 P
1.83 (path to be performed by slo) 315 116 P
1.83 (wer components,) 456.18 116 P
3.1 (since no performance is lost by doing this.) 315 102 P
7.25 (Also components which can be mer) 315 88 P
7.25 (ged) 522.67 88 P
4 X
90 450 18.89 15.83 475.6 408.54 G
0.5 H
0 Z
0 X
90 450 18.89 15.83 475.6 408.54 A
4 X
90 450 18.89 15.83 394.26 408.76 G
0 X
90 450 18.89 15.83 394.26 408.76 A
368.69 294.68 M
 384.34 329.75 434.46 332.6 468.29 331.92 D
 481.01 331.66 501.48 334.38 499.82 312.08 D
 497.88 286.01 444.4 291.99 414.06 285.44 D
 400.12 282.43 365.92 273.05 368.69 295.23 D
4 X
V
2 Z
0 X
N
4 X
90 450 18.89 15.83 394.15 372.76 G
0 Z
0 X
90 450 18.89 15.83 394.15 372.76 A
4 X
90 450 18.89 15.83 475.48 372.54 G
0 X
90 450 18.89 15.83 475.48 372.54 A
4 X
90 450 18.89 10 474.59 344.26 G
0 X
90 450 18.89 10 474.59 344.26 A
4 X
90 450 18.89 10 393.15 338.49 G
0 X
90 450 18.89 10 393.15 338.49 A
4 X
90 450 18.89 15.83 393.82 260.87 G
0 X
90 450 18.89 15.83 393.82 260.87 A
343.42 467.37 507.21 467.37 2 L
4 X
V
2 Z
10 X
N
343.42 429.93 507.21 429.93 2 L
4 X
V
10 X
N
343.42 392.49 507.21 392.49 2 L
4 X
V
10 X
N
343.42 355.06 507.21 355.06 2 L
4 X
V
10 X
N
343.42 317.62 507.21 317.62 2 L
4 X
V
10 X
N
343.42 280.18 507.21 280.18 2 L
4 X
V
10 X
N
343.42 242.74 507.21 242.74 2 L
4 X
V
10 X
N
343.42 205.3 507.21 205.3 2 L
4 X
V
10 X
N
0 8 Q
0 X
(S0) 331.71 444.05 T
(S1) 331.71 407.26 T
(S2) 331.71 372.16 T
(S3) 331.71 332.37 T
(S4) 331.71 295.58 T
(S5) 331.71 256.33 T
(S6) 331.71 219.54 T
7 X
90 450 14.62 5.85 475.04 343.36 G
0 Z
0 X
90 450 14.62 5.85 475.04 343.36 A
7 X
90 450 14.62 5.85 475.04 448.65 G
0 X
90 450 14.62 5.85 475.04 448.65 A
7 X
90 450 14.62 5.85 475.04 407.7 G
0 X
90 450 14.62 5.85 475.04 407.7 A
7 X
90 450 14.62 5.85 393.14 448.65 G
0 X
90 450 14.62 5.85 393.14 448.65 A
7 X
90 450 14.62 5.85 393.14 407.7 G
0 X
90 450 14.62 5.85 393.14 407.7 A
7 X
90 450 14.62 5.85 393.14 372.61 G
0 X
90 450 14.62 5.85 393.14 372.61 A
7 X
90 450 14.62 5.85 475.04 372.61 G
0 X
90 450 14.62 5.85 475.04 372.61 A
7 X
90 450 14.62 5.85 393.14 337.51 G
0 X
90 450 14.62 5.85 393.14 337.51 A
7 X
90 450 14.62 5.85 475.04 325.81 G
0 X
90 450 14.62 5.85 475.04 325.81 A
7 X
90 450 14.62 5.85 393.14 296.56 G
0 X
90 450 14.62 5.85 393.14 296.56 A
7 X
90 450 14.62 5.85 393.14 261.46 G
0 X
90 450 14.62 5.85 393.14 261.46 A
7 X
90 450 14.62 5.85 393.14 226.36 G
0 X
90 450 14.62 5.85 393.14 226.36 A
(a) 391.3 446.59 T
(b) 473.63 445.73 T
(abs) 388.7 404.56 T
(abs) 470.6 404.56 T
(min) 387.4 369.46 T
(max) 468 369.9 T
(>>1) 388.27 334.36 T
(>>3) 468.86 340.86 T
(_) 473.63 325.7 T
(+) 391.3 294.5 T
(max) 386.96 258.53 T
(out) 388.7 223.87 T
393.03 466.65 396.01 466.65 393.03 456.27 390.06 466.65 4 Y
N
393.03 466.65 396.01 466.65 393.03 456.27 390.06 466.65 4 Y
V
393.03 488.73 393.03 466.9 2 L
7 X
V
2 Z
0 X
N
474.5 466.65 477.47 466.65 474.5 456.27 471.52 466.65 4 Y
0 Z
N
474.5 466.65 477.47 466.65 474.5 456.27 471.52 466.65 4 Y
V
474.5 488.73 474.5 466.9 2 L
7 X
V
2 Z
0 X
N
393.9 423.32 396.87 423.32 393.9 412.94 390.92 423.32 4 Y
0 Z
N
393.9 423.32 396.87 423.32 393.9 412.94 390.92 423.32 4 Y
V
393.9 441.93 393.9 423.57 2 L
7 X
V
2 Z
0 X
N
474.93 424.19 477.91 424.19 474.93 413.81 471.95 424.19 4 Y
0 Z
N
474.93 424.19 477.91 424.19 474.93 413.81 471.95 424.19 4 Y
V
474.93 442.8 474.93 424.44 2 L
7 X
V
2 Z
0 X
N
393.46 389.52 396.44 389.63 393.86 379.14 390.49 389.4 4 Y
0 Z
N
393.46 389.52 396.44 389.63 393.86 379.14 390.49 389.4 4 Y
V
393.03 400.77 393.45 389.77 2 L
7 X
V
2 Z
0 X
N
393.9 354.42 396.87 354.42 393.9 344.05 390.92 354.42 4 Y
0 Z
N
393.9 354.42 396.87 354.42 393.9 344.05 390.92 354.42 4 Y
V
393.9 366.54 393.9 354.67 2 L
7 X
V
2 Z
0 X
N
393.03 312.83 396.01 312.83 393.03 302.45 390.06 312.83 4 Y
0 Z
N
393.03 312.83 396.01 312.83 393.03 302.45 390.06 312.83 4 Y
V
393.03 331.44 393.03 313.08 2 L
7 X
V
2 Z
0 X
N
392.82 278.16 395.8 278.22 393.02 267.78 389.85 278.11 4 Y
0 Z
N
392.82 278.16 395.8 278.22 393.02 267.78 389.85 278.11 4 Y
V
392.6 290.28 392.82 278.41 2 L
7 X
V
2 Z
0 X
N
392.82 243.06 395.79 243.12 393.02 232.69 389.84 243.01 4 Y
0 Z
N
392.82 243.06 395.79 243.12 393.02 232.69 389.84 243.01 4 Y
V
392.6 254.74 392.81 243.31 2 L
7 X
V
2 Z
0 X
N
474.93 389.52 477.91 389.52 474.93 379.14 471.95 389.52 4 Y
0 Z
N
474.93 389.52 477.91 389.52 474.93 379.14 471.95 389.52 4 Y
V
474.93 401.2 474.93 389.77 2 L
7 X
V
2 Z
0 X
N
474.78 360.05 477.76 359.98 474.52 349.68 471.8 360.13 4 Y
0 Z
N
474.78 360.05 477.76 359.98 474.52 349.68 471.8 360.13 4 Y
V
474.93 366.11 474.79 360.3 2 L
7 X
V
2 Z
0 X
N
474.93 336.61 476.15 336.61 474.93 332.35 473.71 336.61 4 Y
0 Z
N
474.93 336.61 476.15 336.61 474.93 332.35 473.71 336.61 4 Y
V
474.93 337.94 474.93 336.86 2 L
7 X
V
2 Z
0 X
N
408.08 381.79 409.01 378.96 398.23 378.52 407.14 384.61 4 Y
0 Z
N
408.08 381.79 409.01 378.96 398.23 378.52 407.14 384.61 4 Y
V
469.3 402.07 408.32 381.87 2 L
7 X
V
2 Z
0 X
N
457.67 381.22 458.57 384.05 467.57 378.08 456.77 378.38 4 Y
0 Z
N
457.67 381.22 458.57 384.05 467.57 378.08 456.77 378.38 4 Y
V
397.36 400.34 457.43 381.29 2 L
7 X
V
2 Z
0 X
N
406.39 275.72 408.84 274.03 400.48 267.19 403.94 277.41 4 Y
0 Z
N
406.39 275.72 408.84 274.03 400.48 267.19 403.94 277.41 4 Y
V
469.3 366.54 406.53 275.93 2 L
7 X
V
2 Z
0 X
N
410.51 304.58 411.2 301.68 400.41 302.18 409.83 307.47 4 Y
0 Z
N
410.51 304.58 411.2 301.68 400.41 302.18 409.83 307.47 4 Y
V
474.5 319.74 410.76 304.64 2 L
7 X
V
2 Z
0 X
N
457.29 335.4 458.22 338.23 467.14 332.16 456.36 332.58 4 Y
0 Z
N
457.29 335.4 458.22 338.23 467.14 332.16 456.36 332.58 4 Y
V
457.05 335.48 M
 451.27 337.39 448.93 345.06 448.93 351.81 D
2 Z
N
90 180 16.03 16.03 464.96 351.37 A
(    Out) 379.17 177.94 T
392.46 196.7 395.43 196.74 392.59 186.32 389.48 196.66 4 Y
0 Z
N
392.46 196.7 395.43 196.74 392.59 186.32 389.48 196.66 4 Y
V
392.17 220.51 392.46 196.95 2 L
2 Z
N
(In1) 388.7 493.39 T
(In2) 468.43 494.26 T
0 10 Q
(Figure 5: SRA schedule 1.) 362.75 159.6 T
412.59 260.71 M
 449.22 258.14 515.91 271.26 511.46 314.6 D
 509.71 331.57 508.67 355.15 493.03 364.04 D
10 H
4 X
N
412.26 265.31 M
 447.11 262.91 510.58 275.15 506.34 315.52 D
 504.67 331.34 503.68 353.32 488.8 361.6 D
0.5 H
0 X
N
412.48 255.54 M
 450.29 252.69 519.13 267.2 514.53 315.08 D
 512.73 333.83 511.65 359.89 495.51 369.71 D
N
72.14 502 297.16 674.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72.14 502 297.16 674.45 R
7 X
0 0 0 1 0 0 0 K
V
223.62 647.67 223.62 515.26 2 L
1 H
2 Z
3 X
N
4 X
90 450 1.5 1.5 149.69 148.46 609.59 GG
147.16 610.34 145.25 607.07 135.73 617.03 149.08 613.62 4 Y
3 H
0 Z
N
147.16 610.34 145.25 607.07 135.73 617.03 149.08 613.62 4 Y
V
167.15 598.66 148.46 609.59 2 L
2 Z
N
1 H
11 X
180 270 64.44 96.11 176.59 658.1 A
0 X
180 270 86.75 51.46 262.19 601.62 A
108.24 663.74 105.59 663.74 108.24 672.96 110.88 663.74 4 Y
0 Z
N
108.24 663.74 105.59 663.74 108.24 672.96 110.88 663.74 4 Y
V
108.24 515.97 108.24 663.24 2 L
7 X
V
2 Z
0 X
N
270 523.17 270 525.81 279.22 523.17 270 520.53 4 Y
0 Z
N
270 523.17 270 525.81 279.22 523.17 270 520.53 4 Y
V
101.04 523.17 269.5 523.17 2 L
7 X
V
2 Z
0 X
N
0 10 Q
(Cost [transistors]) 115.99 664.93 T
(Ex) 219.07 531.76 T
(ecution time [ns]) 230.03 531.76 T
148.09 526.77 148.09 523.17 2 L
7 X
V
0.5 H
0 X
N
164.73 526.77 164.73 523.17 2 L
7 X
V
0 X
N
181.37 526.77 181.37 523.17 2 L
7 X
V
0 X
N
198.01 526.77 198.01 523.17 2 L
7 X
V
0 X
N
214.65 526.77 214.65 523.17 2 L
7 X
V
0 X
N
231.29 526.77 231.29 523.17 2 L
7 X
V
0 X
N
247.93 526.77 247.93 523.17 2 L
7 X
V
0 X
N
108.68 534.95 112.28 534.95 2 L
7 X
V
0 X
N
108.68 544.92 112.28 544.92 2 L
7 X
V
0 X
N
108.68 554.89 112.28 554.89 2 L
7 X
V
0 X
N
108.68 564.86 112.28 564.86 2 L
7 X
V
0 X
N
108.68 574.83 112.28 574.83 2 L
7 X
V
0 X
N
108.68 584.8 112.28 584.8 2 L
7 X
V
0 X
N
108.68 594.77 112.28 594.77 2 L
7 X
V
0 X
N
(300) 142.36 515.34 T
(400) 175.05 515.34 T
(500) 207.74 515.34 T
(600) 243.4 515.34 T
(1000) 86.59 542.44 T
(2000) 86.59 562.07 T
(3000) 86.59 581.7 T
90 450 1.49 1.37 181.32 600.7 G
1 H
0 Z
90 450 1.49 1.37 181.32 600.7 A
90 450 1.49 1.37 257.39 551.01 G
90 450 1.49 1.37 257.39 551.01 A
90 450 1.49 1.37 198.16 569.74 G
90 450 1.49 1.37 198.16 569.74 A
(\0501.1\051) 185.78 601.53 T
(\0501.2\051) 202.99 570.25 T
(\0501.3\051) 258.89 555.32 T
108.68 604.74 112.28 604.74 2 L
0.5 H
2 Z
N
(4000) 86.59 601.33 T
(Figure 4: Design space e) 123.77 504.08 T
(xploration.) 222.49 504.08 T
(timing) 209.47 657.15 T
(constraint) 203.35 650.98 T
114.92 526.94 114.92 523.34 2 L
7 X
V
0 X
N
131.56 526.94 131.56 523.34 2 L
7 X
V
0 X
N
(200) 109.25 515.12 T
108.68 634.65 112.28 634.65 2 L
7 X
V
0 X
N
108.68 644.62 112.28 644.62 2 L
N
108.68 614.71 112.28 614.71 2 L
7 X
V
0 X
N
108.68 624.68 112.28 624.68 2 L
N
108.68 654.59 112.28 654.59 2 L
N
(6000) 86.59 640.59 T
(5000) 86.59 620.96 T
90 450 1.49 1.37 115.98 657.14 G
1 H
0 Z
90 450 1.49 1.37 115.98 657.14 A
90 450 1.49 1.37 130.65 593.03 G
90 450 1.49 1.37 130.65 593.03 A
90 450 1.49 1.37 165.87 563.92 G
90 450 1.49 1.37 165.87 563.92 A
(\0502.1\051) 121.55 652.98 T
(\0502.2\051) 136.22 594.98 T
(\0502.3\051) 164.77 569.2 T
0 8 Q
(F) 131.59 620.89 T
(aster library) 135.92 620.89 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9) 303.5 36.66 T
0 12 Q
-0.24 (together without increasing clock c) 72 712 P
-0.24 (ycle and the) 239.5 712 P
0.99 (number of control steps \050because the) 72 698 P
0.99 (y are not) 253.04 698 P
4.19 (on the critical path, or the clock c) 72 684 P
4.19 (ycle is) 261.81 684 P
3.63 (already determined by e) 72 670 P
3.63 (v) 198.23 670 P
3.63 (en slo) 204.05 670 P
3.63 (wer compo-) 235.72 670 P
3.19 (nents\051 are considered in order to lo) 72 656 P
3.19 (wer the) 258.15 656 P
(cost.) 72 642 T
0.06 (Kno) 72 614 P
0.06 (wing the smallest delays for implementing) 92.36 614 P
1.53 (each operator in the CDFG \050according to the) 72 600 P
2.95 (library\051, we can determine the critical path.) 72 586 P
2.05 (Ob) 72 572 P
2.05 (viously) 86.48 572 P
2.05 (, the biggest of these delays deter-) 121.04 572 P
0.44 (mines the clock c) 72 558 P
0.44 (ycle \050we don\325) 156.8 558 P
0.44 (t consider mul-) 223.45 558 P
(tic) 72 544 T
(ycling at this step\051.) 83.82 544 T
0.57 (Based on the clock c) 72 516 P
0.57 (ycle we \336rst schedule the) 173.41 516 P
2.34 (operations on the critical path. Starting with) 72 502 P
0.05 (the \336rst operation in the CDFG we assign each) 72 488 P
2.4 (node to the \336rst state a) 72 474 P
2.4 (v) 192.06 474 P
2.4 (ailable. Consecuti) 197.76 474 P
2.4 (v) 285.85 474 P
2.4 (e) 291.67 474 P
5.02 (operations which ha) 72 460 P
5.02 (v) 178.45 460 P
5.02 (e the sum of delays) 184.27 460 P
0.07 (smaller than the clock c) 72 446 P
0.07 (ycle can be assigned to) 186.08 446 P
5.45 (the same state, pro) 72 432 P
5.45 (vided the dependences) 177.47 432 P
1.13 (allo) 72 418 P
1.13 (w it. The schedule generated for case 1 is) 89.7 418 P
(sho) 72 404 T
(wn in Figure 5.) 88.37 404 T
-0.07 (The operations not on the critical path ha) 72 376 P
-0.07 (v) 268.26 376 P
-0.07 (e the) 274.08 376 P
1.38 (freedom to be mo) 72 362 P
1.38 (v) 160.96 362 P
1.38 (ed to dif) 166.78 362 P
1.38 (ferent states. This) 209.25 362 P
0.96 (freedom can be used to optimize the usage of) 72 348 P
1.47 (components, allo) 72 334 P
1.47 (wing us to lo) 155.16 334 P
1.47 (wer the cost of) 221.61 334 P
0.1 (the ASIC implementation \050as long as the clock) 72 320 P
0.17 (c) 72 306 P
0.17 (ycle is not af) 77.15 306 P
0.17 (fected\051. If tw) 139 306 P
0.17 (o operations are not) 201.52 306 P
2.51 (in the same state in the schedule, and there) 72 292 P
-0.1 (e) 72 278 P
-0.1 (xists a functional unit in the library which can) 77.15 278 P
1.53 (perform both of them, we say that we mer) 72 264 P
1.53 (ge) 285.67 264 P
-0.16 (them by allocating the same library component) 72 250 P
0.19 (to e) 72 236 P
0.19 (x) 89.67 236 P
0.19 (ecute them. In our e) 95.49 236 P
0.19 (xample we can mer) 191.69 236 P
0.19 (ge) 285.67 236 P
2.14 (together the) 72 222 P
2 F
2.14 (+) 136.26 222 P
0 F
2.14 ( and) 144.36 222 P
2 F
2.14 (-) 171.96 222 P
0 F
2.14 ( operations, because the) 175.96 222 P
1.53 (delay of the library component for) 72 208 P
2 F
1.53 (+/-) 249.16 208 P
0 F
1.53 ( is not) 264.59 208 P
1.88 (longer than the clock c) 72 194 P
1.88 (ycle computed so f) 188.65 194 P
1.88 (ar) 285.16 194 P
1.88 (,) 294 194 P
1.12 (and by doing this we decrease the cost of the) 72 180 P
0.23 (implementation. Therefore in this case we will) 72 166 P
0.22 (ha) 72 152 P
0.22 (v) 83.09 152 P
0.22 (e the) 88.91 152 P
2 F
0.22 (max) 115.35 152 P
0 F
0.22 ( library component implementing) 135.34 152 P
0.25 (the) 72 138 P
2 F
0.25 (max) 89.92 138 P
0 F
0.25 ( operators from the CDFG, the) 109.91 138 P
2 F
0.25 (min) 261.75 138 P
0 F
0.25 ( for) 279.75 138 P
1.84 (the) 72 124 P
2 F
1.84 (min) 91.5 124 P
0 F
1.84 ( operators, 2) 109.5 124 P
2 F
1.84 (abs) 177.67 124 P
0 F
1.84 ( library components,) 194.34 124 P
1.85 (and one) 72 110 P
2 F
1.85 (+/-) 116.35 110 P
0 F
1.85 ( component. The shadings in the) 131.78 110 P
2.89 (\336gures sho) 72 96 P
2.89 (w the clustering of the operation) 126.92 96 P
-0.19 (nodes as the result of mer) 315 712 P
-0.19 (ging. F) 436.79 712 P
-0.19 (or each cluster) 470.42 712 P
(of operations we allocate one functional unit.) 315 698 T
0.62 (In the follo) 315 684 P
0.62 (wing, we sho) 369.28 684 P
0.62 (w the cost and e) 433.89 684 P
0.62 (x) 513.53 684 P
0.62 (ecu-) 519.35 684 P
2.7 (tion time for the designs. F) 315 670 P
2.7 (or the e) 457.65 670 P
2.7 (x) 498.85 670 P
2.7 (ecution) 504.67 670 P
3.24 (time we use the formula) 315 656 P
4 F
3.24 (ex) 450.2 656 P
3.24 (ecution time) 461.4 656 P
2 F
3.24 ( =) 525.66 656 P
(cloc) 315 642 T
(k cycle) 334.75 642 T
6 F
( x) 367.73 642 T
2 F
( number of states) 376.81 642 T
0 F
(.) 459.14 642 T
1 F
(\0501.1\051 Slo) 315 614 T
(w library \050ripple-carry adder\051) 356.88 614 T
4 F
1.37 (cost) 315 586 P
2 F
1.37 ( = 1) 334.33 586 P
6 F
1.52 (x) 361.55 586 P
2 F
1.37 ( Cost\050min\051 + 1) 367.31 586 P
6 F
1.52 (x) 446.9 586 P
2 F
1.37 ( Cost\050max\051 + 2) 452.66 586 P
6 F
1.52 (x) 534.24 586 P
2 F
0.78 (Cost\050abs\051 + 1) 333 572 P
6 F
0.86 (x) 405.1 572 P
2 F
0.78 ( Cost\050+/-\051 = 3720 tr) 410.86 572 P
0.78 (ansis-) 511.33 572 P
(tor) 333 558 T
(s) 346.88 558 T
4 F
(cloc) 315 544 T
(k cycle) 334.87 544 T
2 F
( = 57.2 ns) 368.52 544 T
4 F
(number of states) 315 530 T
2 F
( = 7) 397.01 530 T
4 F
(ex) 315 516 T
(ecution time) 326.21 516 T
2 F
( = 57.2) 387.22 516 T
6 F
(x) 425.32 516 T
2 F
( 7 = 400.4 ns) 431.08 516 T
1 F
(\0501.2\051 F) 315 488 T
(ast library \050CLA adder\051) 348.02 488 T
4 F
1.37 (cost) 315 460 P
2 F
1.37 ( = 1) 334.33 460 P
6 F
1.52 (x) 361.55 460 P
2 F
1.37 ( Cost\050min\051 + 1) 367.31 460 P
6 F
1.52 (x) 446.9 460 P
2 F
1.37 ( Cost\050max\051 + 2) 452.66 460 P
6 F
1.52 (x) 534.24 460 P
2 F
0.78 (Cost\050abs\051 + 1) 333 446 P
6 F
0.86 (x) 405.1 446 P
2 F
0.78 ( Cost\050+/-\051 = 6620 tr) 410.86 446 P
0.78 (ansis-) 511.33 446 P
(tor) 333 432 T
(s) 346.88 432 T
4 F
(cloc) 315 418 T
(k cycle) 334.87 418 T
2 F
( = 28.4 ns) 368.52 418 T
4 F
(number of states) 315 404 T
2 F
( = 7) 397.01 404 T
4 F
(ex) 315 390 T
(ecution time) 326.21 390 T
2 F
( = 28.4) 387.22 390 T
6 F
(x) 425.32 390 T
2 F
( 7 = 198.8 ns) 431.08 390 T
1 F
-0.69 (Case 2. Optimal cost/perf) 315 362 P
-0.69 (ormance trade-off) 442.6 362 P
-0.69 (.) 534.69 362 P
0 F
-0.09 (In order to get the best cost/performance trade-) 315 334 P
0.81 (of) 315 320 P
0.81 (f, dif) 324.7 320 P
0.81 (ferent schedules and mer) 348.54 320 P
0.81 (ging of opera-) 470.39 320 P
3.32 (tions ha) 315 306 P
3.32 (v) 355.75 306 P
3.32 (e to be attempted. By an iterati) 361.57 306 P
3.32 (v) 528.85 306 P
3.32 (e) 534.67 306 P
2.33 (impro) 315 292 P
2.33 (v) 343.49 292 P
2.33 (ement technique, we can mer) 349.31 292 P
2.33 (ge more) 498.69 292 P
3.4 (operations in the CDFG, compromising the) 315 278 P
0.9 (clock c) 315 264 P
0.9 (ycle and/or the number of states in the) 350.04 264 P
5.69 (schedule ag) 315 250 P
5.69 (ainst substantial cost impro) 376.95 250 P
5.69 (v) 524.86 250 P
5.69 (e-) 530.68 250 P
1.05 (ments. If the cost impro) 315 236 P
1.05 (v) 433.36 236 P
1.05 (ement is higher than) 439.18 236 P
3.62 (the performance loss, we obtain an o) 315 222 P
3.62 (v) 512.86 222 P
3.62 (erall) 518.68 222 P
(cost/performance impro) 315 208 T
(v) 429.79 208 T
(ement.) 435.61 208 T
0.57 (As pre) 315 180 P
0.57 (viously stated, we could get better cost/) 346.93 180 P
0.51 (performance ratio, by trading of) 315 166 P
0.51 (f some perfor-) 470.35 166 P
0.06 (mance loss ag) 315 152 P
0.06 (ainst an impro) 382.38 152 P
0.06 (v) 450.98 152 P
0.06 (ement in area. T) 456.8 152 P
0.06 (o) 534 152 P
0.2 (decrease the cost of the implementation we try) 315 138 P
0.82 (to mer) 315 124 P
0.82 (ge more operators into functional units.) 346.6 124 P
1.38 (This additional mer) 315 110 P
1.38 (ging will increase slightly) 411.54 110 P
(the clock c) 315 96 T
(ycle.) 366.8 96 T
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(10) 301 36.66 T
0 12 Q
0.97 (W) 72 712 P
0.97 (e observ) 82.37 712 P
0.97 (e that the) 123.48 712 P
2 F
0.97 (>>1) 173.37 712 P
0 F
0.97 ( and) 195.57 712 P
2 F
0.97 (>>3) 220.84 712 P
0 F
0.97 ( operations) 243.04 712 P
0.37 (ha) 72 698 P
0.37 (v) 83.09 698 P
0.37 (e 0 delay) 88.91 698 P
0.37 (, therefore, by chaining them with) 132.18 698 P
2.02 (other operations w) 72 684 P
2.02 (ould not af) 165.24 684 P
2.02 (fect the perfor-) 220.99 684 P
-0.19 (mance. On the other hand we can see that if we) 72 670 P
0.92 (mo) 72 656 P
0.92 (v) 87.16 656 P
0.92 (e the) 92.98 656 P
2 F
0.92 (min) 120.81 656 P
0 F
0.92 ( operation from state S2 to state) 138.81 656 P
1.36 (S3, we will be able to mer) 72 642 P
1.36 (ge it with the) 205.58 642 P
2 F
1.36 (max) 277.01 642 P
0 F
3.12 (operation and use the same functional unit,) 72 628 P
0.38 (which has a slightly higher delay) 72 614 P
0.38 (, b) 231.44 614 P
0.38 (ut it gener-) 243.58 614 P
(ates a good impro) 72 600 T
(v) 157.48 600 T
(ement in cost.) 163.3 600 T
3.95 (Figure 6 sho) 72 194 P
3.95 (ws the \336nal schedule for this) 139.6 194 P
3.8 (implementation. The \336nal allocation is one) 72 180 P
2 F
2.48 (abs/min/max) 72 166 P
0 F
2.48 ( unit, and one) 133.33 166 P
2 F
2.48 (abs/+/- unit) 211.6 166 P
0 F
2.48 (, and) 271.19 166 P
(this results in:) 72 152 T
1 F
(\0502.1\051 Slo) 72 124 T
(w library \050ripple-carry adder\051) 113.88 124 T
4 F
0.58 (cost) 72 96 P
2 F
0.58 ( = 1) 91.33 96 P
6 F
0.64 (x) 116.16 96 P
2 F
0.58 ( Cost\050abs/min/max\051 + 1) 121.92 96 P
6 F
0.64 (x) 241.66 96 P
2 F
0.58 ( Cost\050abs/) 247.42 96 P
(+/-\051 = 2130 tr) 90 82 T
(ansistor) 158.35 82 T
(s) 196.91 82 T
4 F
(cloc) 315 712 T
(k cycle) 334.87 712 T
2 F
( = 63.8 ns) 368.52 712 T
4 F
(number of states) 315 698 T
2 F
( = 7) 397.01 698 T
4 F
(ex) 315 684 T
(ecution time) 326.21 684 T
2 F
( = 63.8) 387.22 684 T
6 F
(x) 425.32 684 T
2 F
( 7 = 446.6 ns) 431.08 684 T
1 F
(\0502.2\051 F) 315 656 T
(ast library \050CLA adder\051) 348.02 656 T
4 F
0.58 (cost) 315 628 P
2 F
0.58 ( = 1) 334.33 628 P
6 F
0.64 (x) 359.16 628 P
2 F
0.58 ( Cost\050abs/min/max\051 + 1) 364.92 628 P
6 F
0.64 (x) 484.66 628 P
2 F
0.58 ( Cost\050abs/) 490.42 628 P
(+/-\051 = 3290 tr) 333 614 T
(ansistor) 401.35 614 T
(s) 439.91 614 T
4 F
(cloc) 315 600 T
(k cycle) 334.87 600 T
2 F
( = 35 ns) 368.52 600 T
4 F
(number of states) 315 586 T
2 F
( = 7) 397.01 586 T
4 F
(ex) 315 572 T
(ecution time) 326.21 572 T
2 F
( = 35) 387.22 572 T
6 F
(x) 416.32 572 T
2 F
( 7 = 245 ns) 422.08 572 T
0 F
3.07 (After scheduling and functional unit alloca-) 315 236 P
4.34 (tion, storage and interconnect allocation is) 315 222 P
4.01 (done, generating the \336nal R) 315 208 P
4.01 (TL netlist. W) 463.29 208 P
4.01 (e) 534.67 208 P
-0.2 (present the datapath schematic for the case 2 in) 315 194 P
(Figure 7.) 315 180 T
1 F
2 (Case 3. Minimal cost schedule and alloca-) 315 152 P
(tion.) 315 138 T
0 F
0.72 (In order to create the lo) 315 110 P
0.72 (west cost implementa-) 430.58 110 P
0.68 (tion, we ha) 315 96 P
0.68 (v) 369.12 96 P
0.68 (e to use the cheapest combination) 374.94 96 P
4 X
90 450 18.89 35.35 231.23 467.54 G
0.5 H
0 Z
0 X
90 450 18.89 35.35 231.23 467.54 A
4 X
90 450 18.89 7.08 150.01 418.99 G
0 X
90 450 18.89 7.08 150.01 418.99 A
209.13 447.64 162.13 425.64 2 L
4 X
V
20 H
2 Z
N
133.38 360.89 M
 123.86 367.38 126.26 388.18 138.88 388.34 D
 176.57 388.82 213.04 418.92 250.38 403.89 D
 255.38 401.89 245.98 393.69 241.38 390.95 D
 223.17 380.14 203.15 371.97 182.63 366.93 D
 166.72 363.02 149.9 355.33 133.63 360.64 D
V
0.5 H
0 X
N
4 X
90 450 18.89 15.83 150.01 484.24 G
0 Z
0 X
90 450 18.89 15.83 150.01 484.24 A
10 H
2 Z
4 X
90 180 19.91 55.08 132.06 420.52 A
180 270 17.65 43.96 129.8 420.02 A
0.5 H
0 X
90 180 16.27 50.06 132.75 420.76 A
180 270 14.42 39.96 130.9 420.3 A
99.16 467.97 262.96 467.97 2 L
10 X
N
4 X
90 450 18.89 10 230.34 419.74 G
0 Z
0 X
90 450 18.89 10 230.34 419.74 A
4 X
90 450 18.44 7.5 148.69 402.14 G
0 X
90 450 18.44 7.5 148.69 402.14 A
4 X
90 450 18.89 15.83 149.56 336.35 G
0 X
90 450 18.89 15.83 149.56 336.35 A
99.16 542.85 262.96 542.85 2 L
4 X
V
2 Z
10 X
N
99.16 505.41 262.96 505.41 2 L
4 X
V
10 X
N
99.16 430.53 262.96 430.53 2 L
4 X
V
10 X
N
99.16 355.66 262.96 355.66 2 L
4 X
V
10 X
N
99.16 318.22 262.96 318.22 2 L
4 X
V
10 X
N
99.16 280.78 262.96 280.78 2 L
4 X
V
10 X
N
0 10 Q
0 X
(S0) 87.46 519.53 T
(S1) 87.46 482.74 T
(S2) 87.46 447.64 T
(S3) 87.46 407.85 T
(S4) 87.46 371.06 T
(S5) 87.46 331.8 T
(S6) 87.46 295.01 T
7 X
90 450 14.62 5.85 230.78 418.83 G
0 Z
0 X
90 450 14.62 5.85 230.78 418.83 A
7 X
90 450 14.62 5.85 230.78 524.13 G
0 X
90 450 14.62 5.85 230.78 524.13 A
7 X
90 450 14.62 5.85 230.78 483.18 G
0 X
90 450 14.62 5.85 230.78 483.18 A
7 X
90 450 14.62 5.85 148.88 524.13 G
0 X
90 450 14.62 5.85 148.88 524.13 A
7 X
90 450 14.62 5.85 148.88 483.18 G
0 X
90 450 14.62 5.85 148.88 483.18 A
7 X
90 450 13.82 5.6 148.25 401.96 G
0 X
90 450 13.82 5.6 148.25 401.96 A
7 X
90 450 14.62 5.85 230.78 401.28 G
0 X
90 450 14.62 5.85 230.78 401.28 A
7 X
90 450 14.62 5.85 148.88 336.94 G
0 X
90 450 14.62 5.85 148.88 336.94 A
7 X
90 450 14.62 5.85 148.88 301.84 G
0 X
90 450 14.62 5.85 148.88 301.84 A
(a) 147.04 522.07 T
(b) 229.38 521.2 T
(abs) 144.44 480.04 T
(abs) 226.34 480.04 T
(>>1) 143.65 398.87 T
(>>3) 224.61 416.34 T
(_) 229.38 401.17 T
(max) 142.71 334.01 T
(out) 144.44 299.35 T
148.78 542.13 151.75 542.13 148.78 531.75 145.8 542.13 4 Y
N
148.78 542.13 151.75 542.13 148.78 531.75 145.8 542.13 4 Y
V
148.78 564.21 148.78 542.38 2 L
7 X
V
2 Z
0 X
N
230.24 542.13 233.22 542.13 230.24 531.75 227.27 542.13 4 Y
0 Z
N
230.24 542.13 233.22 542.13 230.24 531.75 227.27 542.13 4 Y
V
230.24 564.21 230.24 542.38 2 L
7 X
V
2 Z
0 X
N
149.64 498.8 152.62 498.8 149.64 488.42 146.67 498.8 4 Y
0 Z
N
149.64 498.8 152.62 498.8 149.64 488.42 146.67 498.8 4 Y
V
149.64 517.41 149.64 499.05 2 L
7 X
V
2 Z
0 X
N
230.68 499.67 233.65 499.67 230.68 489.29 227.7 499.67 4 Y
0 Z
N
230.68 499.67 233.65 499.67 230.68 489.29 227.7 499.67 4 Y
V
230.68 518.28 230.68 499.92 2 L
7 X
V
2 Z
0 X
N
148.57 353.64 151.54 353.69 148.76 343.26 145.59 353.58 4 Y
0 Z
N
148.57 353.64 151.54 353.69 148.76 343.26 145.59 353.58 4 Y
V
148.34 365.75 148.56 353.89 2 L
7 X
V
2 Z
0 X
N
148.56 318.54 151.54 318.6 148.76 308.16 145.59 318.48 4 Y
0 Z
N
148.56 318.54 151.54 318.6 148.76 308.16 145.59 318.48 4 Y
V
148.34 330.22 148.56 318.79 2 L
7 X
V
2 Z
0 X
N
230.68 465 233.65 465 230.68 454.62 227.7 465 4 Y
0 Z
N
230.68 465 233.65 465 230.68 454.62 227.7 465 4 Y
V
230.68 476.68 230.68 465.25 2 L
7 X
V
2 Z
0 X
N
230.52 435.53 233.5 435.46 230.26 425.16 227.55 435.61 4 Y
0 Z
N
230.52 435.53 233.5 435.46 230.26 425.16 227.55 435.61 4 Y
V
230.68 441.58 230.53 435.78 2 L
7 X
V
2 Z
0 X
N
230.68 412.08 231.9 412.08 230.68 407.83 229.45 412.08 4 Y
0 Z
N
230.68 412.08 231.9 412.08 230.68 407.83 229.45 412.08 4 Y
V
230.68 413.42 230.68 412.33 2 L
7 X
V
2 Z
0 X
N
213.64 457.32 214.7 460.1 223.33 453.61 212.57 454.54 4 Y
0 Z
N
213.64 457.32 214.7 460.1 223.33 453.61 212.57 454.54 4 Y
V
158.21 478.55 213.4 457.41 2 L
7 X
V
2 Z
0 X
N
(   Out) 134.91 253.42 T
148.2 272.18 151.18 272.21 148.33 261.8 145.23 272.14 4 Y
0 Z
N
148.2 272.18 151.18 272.21 148.33 261.8 145.23 272.14 4 Y
V
147.91 295.99 148.2 272.43 2 L
7 X
V
2 Z
0 X
N
(In1) 144.44 568.87 T
(In2) 224.18 569.73 T
(Figure 6: SRA schedule 2.) 118.5 235.07 T
168.14 334.44 M
 204.83 331.79 271.64 345.33 267.18 390.03 D
 265.43 407.54 264.38 431.87 248.72 441.04 D
10 H
4 X
N
167.81 339.19 M
 202.72 336.72 266.3 349.34 262.05 390.99 D
 260.39 407.3 259.39 429.97 244.48 438.51 D
0.5 H
0 X
N
166.12 328.74 M
 205.28 325.82 276.63 340.64 271.85 389.49 D
 269.98 408.62 268.86 435.21 252.14 445.23 D
N
218.63 440.89 168.88 417.39 2 L
N
90 180 26.03 60.51 132.4 420.37 A
180 270 23.07 48.3 129.45 419.81 A
161.8 350.99 164.25 349.3 155.9 342.46 159.36 352.69 4 Y
0 Z
N
161.8 350.99 164.25 349.3 155.9 342.46 159.36 352.69 4 Y
V
224.71 441.81 161.95 351.2 2 L
2 Z
N
149.26 411.7 150.27 411.7 149.26 408.17 148.24 411.7 4 Y
0 Z
N
149.26 411.7 150.27 411.7 149.26 408.17 148.24 411.7 4 Y
V
149.26 412.88 149.26 411.95 2 L
2 Z
N
251.63 445.14 247.13 447.89 2 L
N
90 180 15.4 16.93 220.08 426.45 A
212.42 409.81 213.47 412.6 222.14 406.17 211.38 407.03 4 Y
0 Z
N
212.42 409.81 213.47 412.6 222.14 406.17 211.38 407.03 4 Y
V
212.19 409.9 M
 206.62 411.99 204.68 419.92 204.68 426.9 D
2 Z
N
7 X
90 450 14.62 5.85 230.78 448.08 G
0 Z
0 X
90 450 14.62 5.85 230.78 448.08 A
(max) 223.74 445.37 T
99.16 393.1 262.96 393.1 2 L
7 X
V
2 Z
10 X
N
7 X
90 450 14.62 5.85 148.88 372.04 G
0 Z
0 X
90 450 14.62 5.85 148.88 372.04 A
(+) 147.04 369.98 T
148.84 388.3 151.82 388.29 148.78 377.93 145.87 388.32 4 Y
N
148.84 388.3 151.82 388.29 148.78 377.93 145.87 388.32 4 Y
V
148.88 394.89 148.84 388.55 2 L
7 X
V
2 Z
0 X
N
166.26 380.05 166.94 377.16 156.16 377.66 165.57 382.95 4 Y
0 Z
N
166.26 380.05 166.94 377.16 156.16 377.66 165.57 382.95 4 Y
V
230.24 395.22 166.5 380.11 2 L
7 X
V
2 Z
0 X
N
136.63 472.14 132.88 471.14 2 L
7 X
V
0 X
N
163.9 431.66 165.69 429.28 155.6 425.43 162.12 434.04 4 Y
0 Z
N
163.9 431.66 165.69 429.28 155.6 425.43 162.12 434.04 4 Y
V
225.04 477.55 164.1 431.81 2 L
7 X
V
2 Z
0 X
N
152.13 428.14 146.88 425.14 2 L
7 X
V
7 H
4 X
N
212.63 461.14 139.88 425.14 2 L
7 X
V
0.5 H
0 X
N
149.79 436.17 152.76 436.19 149.87 425.79 146.81 436.15 4 Y
0 Z
N
149.79 436.17 152.76 436.19 149.87 425.79 146.81 436.15 4 Y
V
149.53 468.5 149.79 436.42 2 L
7 X
V
2 Z
0 X
N
7 X
90 450 14.62 5.85 148.5 418.64 G
0 Z
0 X
90 450 14.62 5.85 148.5 418.64 A
(min) 142.75 415.49 T
314.68 290.73 539.16 558.07 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
340.68 482.73 371.35 498.73 R
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 10 Q
(R1) 352.68 488.07 T
406.02 482.73 436.68 498.73 R
N
(R2) 418.02 488.07 T
471.35 482.73 502.02 498.73 R
N
(R3) 483.35 488.07 T
352.02 367.4 398.68 387.4 R
N
433.35 367.4 480.02 387.4 R
N
0 8 Q
(abs/min/max) 354.68 375.4 T
(abs/+/-) 444.02 375.4 T
496.68 455.4 522.68 468.73 R
N
(>>3) 504.02 458.73 T
360.68 341.4 386.68 354.73 R
N
(>>1) 368.02 344.73 T
334.02 436.07 523.35 436.07 2 L
1 H
N
334.02 418.73 523.35 418.73 2 L
N
334.02 402.73 523.35 402.73 2 L
N
445.35 418.73 445.35 388.07 2 L
0.5 H
N
470.02 403.4 470.02 387.4 2 L
N
362.02 388.07 362.02 435.4 2 L
N
389.35 387.4 389.35 464.07 354.68 464.07 3 L
N
354.02 464.07 354.02 482.07 2 L
N
331.35 508.07 378.68 508.07 2 L
1 H
N
400.02 508.07 447.35 508.07 2 L
N
362.46 519.35 365.43 519.41 362.66 508.97 359.48 519.29 4 Y
0.5 H
0 Z
N
362.02 541.4 362.45 519.6 2 L
2 Z
N
413.12 519.35 416.1 519.41 413.33 508.97 410.15 519.29 4 Y
0 Z
N
412.68 541.4 413.12 519.6 2 L
2 Z
N
354.02 430.02 356.99 430.02 354.02 419.64 351.04 430.02 4 Y
0 Z
N
354.02 463.4 354.02 430.27 2 L
2 Z
N
485.35 448.02 488.32 448.02 485.35 437.64 482.37 448.02 4 Y
0 Z
N
485.35 482.07 485.35 448.27 2 L
2 Z
N
420.68 447.35 423.66 447.35 420.68 436.97 417.71 447.35 4 Y
0 Z
N
420.68 482.07 420.68 447.6 2 L
2 Z
N
466.02 430.68 468.99 430.68 466.02 420.31 463.04 430.68 4 Y
0 Z
N
485.35 466.07 466.02 466.07 466.02 430.93 3 L
2 Z
N
407.35 414.02 410.32 414.02 407.35 403.64 404.37 414.02 4 Y
0 Z
N
420.68 465.4 407.35 465.4 407.35 414.27 3 L
2 Z
N
509.35 414.68 512.32 414.68 509.35 404.3 506.37 414.68 4 Y
0 Z
N
509.35 455.4 509.35 414.93 2 L
2 Z
N
509.35 468.73 509.35 476.73 485.35 476.73 3 L
N
350.68 520.02 353.66 520.02 350.68 509.64 347.71 520.02 4 Y
0 Z
N
350.68 526.07 350.68 520.27 2 L
2 Z
N
339.35 519.35 342.32 519.35 339.35 508.97 336.37 519.35 4 Y
0 Z
N
339.35 525.4 339.35 519.6 2 L
2 Z
N
375.35 518.68 378.32 518.68 375.35 508.31 372.37 518.68 4 Y
0 Z
N
375.35 524.73 375.35 518.93 2 L
2 Z
N
432.68 519.35 435.66 519.35 432.68 508.97 429.71 519.35 4 Y
0 Z
N
432.68 525.4 432.68 519.6 2 L
2 Z
N
373.35 354.73 373.35 366.73 2 L
N
373.35 362.07 328.02 362.07 2 L
N
327.35 362.07 328.02 526.07 2 L
N
328.68 526.07 339.35 526.07 2 L
N
372.68 341.4 372.68 325.4 320.02 325.4 3 L
N
320.02 325.4 320.02 533.4 2 L
N
319.85 532.9 350.35 532.9 350.35 526.9 3 L
N
375.35 524.9 375.35 532.9 527.85 532.9 527.85 354.4 454.85 354.4 454.85 366.9 6 L
N
432.35 525.9 432.35 533.4 2 L
N
0 12 Q
(In1) 354.85 546.9 T
(In2) 405.35 546.9 T
339.35 525.9 486.35 525.9 486.35 498.9 3 L
N
353.85 498.9 353.85 507.9 2 L
N
420.35 499.4 420.35 508.4 2 L
N
415.85 351.68 418.82 351.68 415.85 341.3 412.87 351.68 4 Y
0 Z
N
389.85 395.4 415.85 395.4 415.85 351.93 3 L
2 Z
N
0 10 Q
( Out) 406.35 328.9 T
(Figure 7: Datapath schematic) 365.35 307.4 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(11) 301 36.66 T
0 12 Q
4.06 (of functional units which still perform the) 72 712 P
(desired operations.) 72 698 T
1 (In our case the) 72 670 P
2 F
1 (abs) 149.29 670 P
0 F
1 (,) 165.96 670 P
2 F
1 (min) 172.96 670 P
0 F
1 (,) 190.96 670 P
2 F
1 (max, +) 197.95 670 P
0 F
1 (and) 237.04 670 P
2 F
1 (-) 258.36 670 P
0 F
1 ( opera-) 262.36 670 P
1.11 (tions ha) 72 656 P
1.11 (v) 110.54 656 P
1.11 (e to be performed \050besides the shifts) 116.36 656 P
1.83 (which ha) 72 642 P
1.83 (v) 117.24 642 P
1.83 (e cost 0\051. The best combination in) 123.06 642 P
0.34 (this case is to use only one functional unit, the) 72 628 P
2 F
2.26 (+/-/abs/min/max) 72 614 P
0 F
2.26 ( which has the cost of 1318) 152.1 614 P
(transistors.) 72 600 T
0.81 (When using only one functional unit, we can-) 72 572 P
-0.16 (not perform in the same state 2 dif) 72 558 P
-0.16 (ferent opera-) 235.53 558 P
6.27 (tions, therefore the schedule gets longer) 72 544 P
6.27 (.) 294 544 P
1.67 (Figure 8 sho) 72 530 P
1.67 (ws that we need 9 states to per-) 135.03 530 P
(form the computation.) 72 516 T
1 F
(\0503.1\051 Slo) 315 712 T
(w library \050ripple-carry adder\051) 356.88 712 T
4 F
-0.17 (cost) 315 684 P
2 F
-0.17 ( = 1) 334.33 684 P
6 F
-0.19 (x) 356.91 684 P
2 F
-0.17 ( Cost\050+/-/abs/min/max\051 = 1318 tr) 362.67 684 P
-0.17 (an-) 524 684 P
(sistor) 333 670 T
(s) 359.56 670 T
4 F
(cloc) 315 656 T
(k cycle) 334.87 656 T
2 F
( = 69.6 ns) 368.52 656 T
4 F
(number of states) 315 642 T
2 F
( = 9) 397.01 642 T
4 F
(ex) 315 628 T
(ecution time) 326.21 628 T
2 F
(= 69.6) 390.22 628 T
6 F
(x) 425.32 628 T
2 F
( 9 = 626.4 ns) 431.08 628 T
1 F
(\0503.2\051 F) 315 600 T
(ast library \050CLA adder\051) 348.02 600 T
4 F
-0.17 (cost) 315 586 P
2 F
-0.17 ( = 1) 334.33 586 P
6 F
-0.19 (x) 356.91 586 P
2 F
-0.17 ( Cost\050+/-/abs/min/max\051 = 1898 tr) 362.67 586 P
-0.17 (an-) 524 586 P
(sistor) 333 572 T
(s) 359.56 572 T
4 F
(cloc) 315 558 T
(k cycle) 334.87 558 T
2 F
( = 40.8 ns) 368.52 558 T
4 F
(umber of states) 315 544 T
2 F
( = 9) 390.34 544 T
4 F
(ex) 315 530 T
(ecution time) 326.21 530 T
2 F
(= 40.8) 390.22 530 T
6 F
(x) 425.32 530 T
2 F
( 9 = 367.2 ns) 431.08 530 T
0 F
0.12 (In Figure 4 we can see the dif) 315 502 P
0.12 (ferences in terms) 457.8 502 P
3.51 (of cost and performance between the three) 315 488 P
7.6 (implementations presented here for each) 315 474 P
1.04 (library) 315 460 P
1.04 (. By k) 346.21 460 P
1.04 (eeping the library of components) 377.18 460 P
1.05 (the same and changing the schedule and allo-) 315 446 P
-0.1 (cation, we generate the points on the curv) 315 432 P
-0.1 (es, as) 514.1 432 P
1.46 (sho) 315 418 P
1.46 (wn in the Figure 4. By changing the time) 331.37 418 P
2.51 (and cost characteristics of the library \050using) 315 404 P
1.92 (f) 315 390 P
1.92 (aster components\051 and k) 318.88 390 P
1.92 (eeping the schedule) 441.51 390 P
1.67 (and allocation the same, the implementations) 315 376 P
(mo) 315 362 T
(v) 330.16 362 T
(e along the dotted arro) 335.98 362 T
(w) 443.65 362 T
(.) 451.54 362 T
2.42 (Considering that we ha) 315 334 P
2.42 (v) 433.01 334 P
2.42 (e a gi) 438.83 334 P
2.42 (v) 469.35 334 P
2.42 (en time con-) 475.17 334 P
1.52 (straint, we can choose the lo) 315 320 P
1.52 (west cost imple-) 458.29 320 P
(mentation which satis\336es it.) 315 306 T
1 14 Q
(5 Methodology) 315 276.67 T
(.) 403.07 276.67 T
0 12 Q
2.22 (As pre) 315 248 P
2.22 (viously stated, we start with a beha) 348.58 248 P
2.22 (v-) 530 248 P
0.5 (ioral speci\336cation of an algorithm \050possibly in) 315 234 P
0.01 (VHDL\051, and generate a set of implementations) 315 220 P
2.14 (of dif) 315 206 P
2.14 (ferent cost/performance ratios, that sat-) 343.17 206 P
(isfy a timing constraint.) 315 192 T
2.29 (Therefore the starting point is an HDL high) 315 164 P
2.11 (le) 315 150 P
2.11 (v) 323.36 150 P
2.11 (el description. First, we deri) 329.18 150 P
2.11 (v) 471.97 150 P
2.11 (e the CDFG) 477.79 150 P
1.67 (representing this description, and we allocate) 315 136 P
1.42 (to each operation the f) 315 122 P
1.42 (astest component from) 427.85 122 P
0.74 (the library \050which implements that operation\051.) 315 108 P
0.34 (Kno) 315 94 P
0.34 (wing the delays for performing each oper-) 335.36 94 P
0.46 (ation, we can \336nd the critical paths. The clock) 315 80 P
4 X
90 450 20.98 32.64 153.43 219.75 G
0.5 H
0 Z
0 X
90 450 20.98 32.64 153.43 219.75 A
4 X
90 450 15.62 6.93 154.01 261.65 G
0 X
90 450 15.62 6.93 154.01 261.65 A
4 X
90 450 15.62 7.36 229.52 315.99 G
0 X
90 450 15.62 7.36 229.52 315.99 A
4 X
90 450 15.62 8.43 229.67 296.93 G
0 X
90 450 15.62 8.43 229.67 296.93 A
4 X
90 450 18.83 30.93 229.37 358.94 G
0 X
90 450 18.83 30.93 229.37 358.94 A
4 X
90 450 15.62 12.71 153.24 409.2 G
0 X
90 450 15.62 12.71 153.24 409.2 A
108.45 461.92 259.65 461.92 2 L
4 X
V
2 Z
10 X
N
108.45 427.36 259.65 427.36 2 L
4 X
V
10 X
N
107.17 392.37 258.36 392.37 2 L
4 X
V
10 X
N
108.45 358.24 259.65 358.24 2 L
4 X
V
10 X
N
108.45 323.68 259.65 323.68 2 L
4 X
V
10 X
N
108.45 289.12 259.65 289.12 2 L
4 X
V
10 X
N
108.45 254.56 259.65 254.56 2 L
4 X
V
10 X
N
108.45 220.01 259.65 220.01 2 L
4 X
V
10 X
N
0 8 Q
0 X
(S0) 97.65 440.17 T
(S1) 97.65 406.21 T
(S2) 97.65 373.82 T
(S3) 97.65 337.09 T
(S4) 97.65 303.13 T
(S5) 97.65 266.89 T
(S6) 97.65 232.93 T
7 X
90 450 13.5 5.4 229.09 315.73 G
0 Z
0 X
90 450 13.5 5.4 229.09 315.73 A
7 X
90 450 13.5 5.4 229.95 444.64 G
0 X
90 450 13.5 5.4 229.95 444.64 A
7 X
90 450 13.5 5.4 154.35 444.64 G
0 X
90 450 13.5 5.4 154.35 444.64 A
7 X
90 450 13.5 5.4 154.35 236.45 G
0 X
90 450 13.5 5.4 154.35 236.45 A
7 X
90 450 15.3 6 153.75 200.45 G
0 X
90 450 15.3 6 153.75 200.45 A
7 X
90 450 13.5 5.4 153.75 162.65 G
0 X
90 450 13.5 5.4 153.75 162.65 A
(a) 152.65 442.52 T
(b) 228.65 441.72 T
(>>3) 223.39 313.21 T
(+) 152.65 234.33 T
(max) 147.29 197.8 T
(out) 149.65 160.13 T
154.25 462.12 157.23 462.12 154.25 451.74 151.27 462.12 4 Y
N
154.25 462.12 157.23 462.12 154.25 451.74 151.27 462.12 4 Y
V
154.25 481.64 154.25 462.37 2 L
7 X
V
2 Z
0 X
N
229.45 462.12 232.43 462.12 229.45 451.74 226.47 462.12 4 Y
0 Z
N
229.45 462.12 232.43 462.12 229.45 451.74 226.47 462.12 4 Y
V
229.45 481.64 229.45 462.37 2 L
7 X
V
2 Z
0 X
N
155.05 422.12 158.03 422.12 155.05 411.74 152.07 422.12 4 Y
0 Z
N
155.05 422.12 158.03 422.12 155.05 411.74 152.07 422.12 4 Y
V
155.05 438.44 155.05 422.37 2 L
7 X
V
2 Z
0 X
N
229.85 391.24 232.83 391.24 229.85 380.86 226.87 391.24 4 Y
0 Z
N
229.85 391.24 232.83 391.24 229.85 380.86 226.87 391.24 4 Y
V
229.85 439.24 229.85 391.49 2 L
7 X
V
2 Z
0 X
N
154.45 274.26 156.03 274.26 154.45 268.75 152.87 274.26 4 Y
0 Z
N
154.45 274.26 156.03 274.26 154.45 268.75 152.87 274.26 4 Y
V
154.45 275.84 154.45 274.51 2 L
7 X
V
2 Z
0 X
N
153.65 253.24 156.63 253.24 153.65 242.86 150.68 253.24 4 Y
0 Z
N
153.65 253.24 156.63 253.24 153.65 242.86 150.68 253.24 4 Y
V
153.65 257.24 153.65 253.49 2 L
7 X
V
2 Z
0 X
N
154.45 217.93 157.43 217.93 154.45 207.55 151.48 217.93 4 Y
0 Z
N
154.45 217.93 157.43 217.93 154.45 207.55 151.48 217.93 4 Y
V
154.45 231.24 154.45 218.18 2 L
7 X
V
2 Z
0 X
N
153.65 178.93 156.63 178.93 153.65 168.55 150.68 178.93 4 Y
0 Z
N
153.65 178.93 156.63 178.93 153.65 168.55 150.68 178.93 4 Y
V
153.65 194.05 153.65 179.18 2 L
7 X
V
2 Z
0 X
N
216.99 353.43 218.92 355.69 224.88 346.69 215.06 351.17 4 Y
0 Z
N
216.99 353.43 218.92 355.69 224.88 346.69 215.06 351.17 4 Y
V
157.42 404.38 216.8 353.59 2 L
7 X
V
2 Z
0 X
N
163.38 215.39 166.02 214.02 158.58 206.19 160.75 216.77 4 Y
0 Z
N
163.38 215.39 166.02 214.02 158.58 206.19 160.75 216.77 4 Y
V
225.57 334.53 163.5 215.61 2 L
7 X
V
2 Z
0 X
N
214.96 305.97 215.97 308.77 224.74 302.44 213.95 303.17 4 Y
0 Z
N
214.96 305.97 215.97 308.77 224.74 302.44 213.95 303.17 4 Y
V
214.73 306.05 M
 209.74 307.86 207.99 314.65 207.99 320.53 D
2 Z
N
90 180 16.51 15.23 224.51 319.7 A
(In1) 150.25 485.72 T
(In2) 223.85 486.52 T
108.45 182.65 259.65 182.65 2 L
10 X
N
107.17 145.71 258.36 145.71 2 L
N
0 X
(S7) 97.65 199.29 T
(S8) 98.45 158.49 T
(Out) 146.79 123.99 T
229.44 309.14 231.11 309.24 229.79 303.29 227.76 309.03 4 Y
0 Z
N
229.44 309.14 231.11 309.24 229.79 303.29 227.76 309.03 4 Y
V
229.34 310.79 229.42 309.39 2 L
2 Z
N
230.02 357.81 232.99 357.88 230.26 347.43 227.04 357.74 4 Y
0 Z
N
230.02 357.81 232.99 357.88 230.26 347.43 227.04 357.74 4 Y
V
229.76 368.64 230.01 358.06 2 L
2 Z
N
229.85 332.1 232.83 332.1 229.85 321.72 226.87 332.1 4 Y
0 Z
N
229.85 332.1 232.83 332.1 229.85 321.72 226.87 332.1 4 Y
V
229.85 335.01 229.85 332.35 2 L
2 Z
N
168.01 248.34 169.7 245.89 159.46 242.47 166.33 250.8 4 Y
0 Z
N
168.01 248.34 169.7 245.89 159.46 242.47 166.33 250.8 4 Y
V
229.45 290.5 168.22 248.48 2 L
2 Z
N
153.74 141.99 156.71 141.99 153.74 131.61 150.76 141.99 4 Y
0 Z
N
153.74 141.99 156.71 141.99 153.74 131.61 150.76 141.99 4 Y
V
153.74 157.1 153.74 142.24 2 L
2 Z
N
7 X
90 450 13.71 4.97 153.97 261.82 G
0 Z
0 X
90 450 13.71 4.97 153.97 261.82 A
(>>1) 149.39 258.73 T
167.71 404.38 215.71 380.38 2 L
7 X
V
10 H
2 Z
4 X
N
164.65 400.75 213.9 375.5 2 L
7 X
V
0.5 H
0 X
N
168.4 409.25 218.9 384.5 2 L
7 X
V
0 X
N
10 H
4 X
0 90 8.14 25.28 245.71 318.24 A
270 360 9.86 18.86 243.99 318.67 A
0.5 H
0 X
0 90 11.24 30.63 247.77 317.63 A
270 360 13.61 22.85 245.4 318.15 A
0 90 5.93 20.41 243.59 318.52 A
270 360 7.18 15.22 242.34 318.86 A
4 X
90 450 15.62 9.93 155.18 281.63 G
0 Z
0 X
90 450 15.62 9.93 155.18 281.63 A
10 H
2 Z
4 X
90 180 20.14 21.43 138.14 260.81 A
180 270 17.14 27.43 134.71 261.67 A
0.5 H
0 X
90 180 23.15 25.81 137.44 261.02 A
180 270 19.7 33.04 133.5 262.05 A
136.9 286.75 142.15 286.75 2 L
N
90 180 16.85 17.15 139.15 260.52 A
180 270 14.34 21.96 136.28 261.21 A
154.18 297.81 157.16 297.83 154.24 287.43 151.21 297.79 4 Y
0 Z
N
154.18 297.81 157.16 297.83 154.24 287.43 151.21 297.79 4 Y
V
153.57 403.52 154.18 298.06 2 L
2 Z
N
164.95 295.3 167.26 293.43 158.42 287.23 162.63 297.17 4 Y
0 Z
N
164.95 295.3 167.26 293.43 158.42 287.23 162.63 297.17 4 Y
V
224.22 368.64 165.1 295.5 2 L
2 Z
N
213.99 294.24 170.28 283.53 2 L
10 H
4 X
N
218.9 290 169.9 278.5 2 L
0.5 H
0 X
N
215.4 299.5 166.9 288 2 L
N
7 X
90 450 13.5 5.4 154.95 280.84 G
0 Z
0 X
90 450 13.5 5.4 154.95 280.84 A
(min) 149.65 277.73 T
7 X
90 450 13.5 5.4 229.52 296.53 G
0 X
90 450 13.5 5.4 229.52 296.53 A
(_) 228.22 296.21 T
7 X
90 450 13.5 5.4 153.49 409.41 G
0 X
90 450 13.5 5.4 153.49 409.41 A
(abs) 149.39 406.29 T
7 X
90 450 13.5 5.4 229.09 374.7 G
0 X
90 450 13.5 5.4 229.09 374.7 A
(abs) 224.99 371.58 T
242.15 304 238.9 303.5 2 L
7 X
V
2 Z
0 X
N
7 X
90 450 13.5 5.4 229.52 340.58 G
0 Z
0 X
90 450 13.5 5.4 229.52 340.58 A
(max) 223.02 337.87 T
0 9 Q
(Figure 8: SRA schedule 3.) 132.65 110.87 T
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(12) 301 36.66 T
0 12 Q
0.11 (c) 72 134.85 P
0.11 (ycle is determined by the delay of the slo) 77.15 134.85 P
0.11 (west) 275 134.85 P
2.14 (component \050considering that the operation is) 72 120.85 P
0.15 (not performed in multiple c) 72 106.85 P
0.15 (ycles, chained with) 204.39 106.85 P
0.39 (other units or pipelined\051 allocated to an opera-) 72 92.85 P
(tion.) 72 78.85 T
1.69 (W) 315 134.85 P
1.69 (e then try to cluster as man) 325.37 134.85 P
1.69 (y operations as) 464.63 134.85 P
0.59 (possible, as long as we do not af) 315 120.85 P
0.59 (fect the clock) 474.17 120.85 P
2.07 (c) 315 106.85 P
2.07 (ycle or the number of nodes on the critical) 320.15 106.85 P
1.77 (path. F) 315 92.85 P
1.77 (or e) 349.92 92.85 P
1.77 (xample if 2 operations ha) 369.84 92.85 P
1.77 (v) 498.65 92.85 P
1.77 (e to be) 504.47 92.85 P
0.88 (performed in dif) 315 78.85 P
0.88 (ferent states, due to the e) 395.12 78.85 P
0.88 (xist-) 518.66 78.85 P
74.57 164.62 536.71 725.57 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
74.57 164.62 536.71 725.57 R
7 X
0 0 0 1 0 0 0 K
V
218.92 684.54 367.42 717.97 16.71 RR
1 H
0 Z
0 X
N
0 11 Q
(Beha) 242.71 698.38 T
(vioral speci\336cation) 265.09 698.38 T
225.35 618.49 360.99 657.06 R
N
(Create CDFG) 256.85 634.25 T
(Component) 429.6 562.09 T
(library) 439.89 550.01 T
2 Z
180 270 45 18.64 455.32 528.97 A
270 360 45 18.64 453.52 528.84 A
410.32 528.97 410.32 602.26 2 L
N
497.87 526.92 497.87 600.2 2 L
N
0 Z
90 450 44.03 13.82 453.71 603.86 A
(Analyze critical path) 247.45 517.4 T
(and determine the) 255.59 507.93 T
(Mer) 242.39 454.42 T
(ge of) 260.51 454.42 T
(f-critical-path) 282.54 454.42 T
(components) 267.46 443.62 T
(w/o increasing clock c) 232.74 432.82 T
(ycle) 331.25 432.82 T
(Allocate to each) 253.1 582.02 T
(operator the f) 245.38 570.58 T
(astest) 304.53 570.58 T
(component) 267.24 560.81 T
(Schedule CDFG) 255.64 385.03 T
(\050list scheduling\051) 257.56 374.88 T
398.65 370.93 516.89 414.76 R
N
292.69 331.34 234.72 304.05 292.69 276.06 354.29 306.15 4 Y
N
(T) 261.17 305.92 T
(iming constraint) 267.51 305.92 T
393.53 227.99 520.81 260.15 16.08 RR
N
385.82 291.16 528.53 323.95 R
N
(Allocate storage and) 407.67 308.21 T
(interconnect components) 399.72 298.1 T
(R) 423.1 239.91 T
(TL description) 429.78 239.91 T
(Mer) 414.08 402.19 T
(ge tw) 432.21 402.19 T
(o operators) 456.23 402.19 T
(causing minimal delay) 414.01 389.46 T
(increase) 437.34 379.33 T
293.17 668.08 296.15 668.08 293.17 657.7 290.2 668.08 4 Y
0.5 H
N
293.17 668.08 296.15 668.08 293.17 657.7 290.2 668.08 4 Y
V
293.17 685.29 293.17 668.33 2 L
2 Z
N
457.17 272.8 460.15 272.8 457.17 262.42 454.2 272.8 4 Y
0 Z
11 X
N
457.17 272.8 460.15 272.8 457.17 262.42 454.2 272.8 4 Y
V
457.17 290.02 457.17 273.05 2 L
2 Z
N
293 341 295.98 341.05 293.16 330.62 290.03 340.96 4 Y
0 Z
0 X
N
293 341 295.98 341.05 293.16 330.62 290.03 340.96 4 Y
V
292.68 362.43 293 341.25 2 L
2 Z
N
293.17 410.23 296.15 410.23 293.17 399.85 290.2 410.23 4 Y
0 Z
N
293.17 410.23 296.15 410.23 293.17 399.85 290.2 410.23 4 Y
V
293.17 426.43 293.17 410.48 2 L
2 Z
N
293.17 477.28 296.15 477.28 293.17 466.9 290.2 477.28 4 Y
0 Z
N
293.17 477.28 296.15 477.28 293.17 466.9 290.2 477.28 4 Y
V
293.17 490.43 293.17 477.53 2 L
2 Z
N
293.17 539.08 296.15 539.08 293.17 528.7 290.2 539.08 4 Y
0 Z
N
293.17 539.08 296.15 539.08 293.17 528.7 290.2 539.08 4 Y
V
293.17 553.77 293.17 539.33 2 L
2 Z
N
293.17 602.38 296.15 602.38 293.17 592 290.2 602.38 4 Y
0 Z
N
293.17 602.38 296.15 602.38 293.17 592 290.2 602.38 4 Y
V
293.17 619.59 293.17 602.63 2 L
2 Z
N
(Y) 354.15 310.74 T
(es) 360.99 310.74 T
(No) 222.24 310.41 T
456.82 425.83 459.79 425.83 456.82 415.45 453.84 425.83 4 Y
0 Z
11 X
N
456.82 425.83 459.79 425.83 456.82 415.45 453.84 425.83 4 Y
V
456.82 509.79 456.82 426.08 2 L
2 Z
N
373.3 577.29 373.3 574.32 362.92 577.29 373.3 580.27 4 Y
0 Z
10 X
N
373.3 577.29 373.3 574.32 362.92 577.29 373.3 580.27 4 Y
V
410.32 577.29 373.55 577.29 2 L
2 Z
N
0 X
(Figure 9: Methodology \337o) 246.42 178.96 T
(wchart.) 362.57 178.96 T
(satis\336ed) 275.17 295.59 T
185.56 292.86 188.54 292.86 185.56 282.48 182.59 292.86 4 Y
0 Z
N
185.56 292.86 188.54 292.86 185.56 282.48 182.59 292.86 4 Y
V
233.66 303.72 185.56 303.72 185.56 293.11 3 L
2 Z
N
227.56 210.36 291.73 235.03 12.33 RR
0 Z
N
(Done) 246.81 219.69 T
374.37 306.38 374.37 309.36 384.75 306.38 374.37 303.41 4 Y
N
374.37 306.38 374.37 309.36 384.75 306.38 374.37 303.41 4 Y
V
352.99 306.38 374.12 306.38 2 L
2 Z
N
457.49 359.1 454.52 359.14 457.64 369.48 460.47 359.06 4 Y
0 Z
N
457.49 359.1 454.52 359.14 457.64 369.48 460.47 359.06 4 Y
V
456.99 324.38 457.49 358.85 2 L
2 Z
N
(Create an) 470.99 278.39 T
(implementation) 462.99 268.05 T
(Create ne) 470.32 349.05 T
(xt) 512 349.05 T
(implementations) 460.32 340.05 T
185.14 282.87 127.17 255.58 185.14 227.58 246.74 257.68 4 Y
1 H
0 Z
N
(At least one) 155.87 263.19 T
(R) 145.87 252.62 T
(TL description) 152.55 252.62 T
(generated) 160.87 243.48 T
83.92 428.92 151.87 463.85 R
N
(Use another) 88.43 449.32 T
(library) 104.83 439.48 T
(Y) 241.82 261.53 T
(es) 248.67 261.53 T
(No) 121.54 261.43 T
260.75 246.03 263.73 246.03 260.75 235.65 257.78 246.03 4 Y
0.5 H
N
260.75 246.03 263.73 246.03 260.75 235.65 257.78 246.03 4 Y
V
246.59 257.24 260.75 257.24 260.75 246.28 3 L
2 Z
N
281.25 610.1 281.25 613.08 291.63 610.1 281.25 607.12 4 Y
0 Z
N
281.25 610.1 281.25 613.08 291.63 610.1 281.25 607.12 4 Y
V
117.87 464.43 117.87 610.1 281 610.1 3 L
2 Z
N
226.02 554.49 361.66 593.06 R
1 H
0 Z
N
225.35 490.49 360.99 529.06 R
N
225.35 426.49 360.99 465.06 R
N
225.35 362.49 360.99 401.06 R
N
(clock c) 266.92 498.27 T
(ycle) 298.22 498.27 T
304.63 420.43 304.63 417.46 294.26 420.43 304.63 423.41 4 Y
0.5 H
N
304.63 420.43 304.63 417.46 294.26 420.43 304.63 423.41 4 Y
V
427.35 415.1 427.35 420.43 304.88 420.43 3 L
2 Z
N
118.02 418.48 115.04 418.48 118.02 428.86 120.99 418.48 4 Y
0 Z
N
118.02 418.48 115.04 418.48 118.02 428.86 120.99 418.48 4 Y
V
126.02 255.1 118.02 255.1 118.02 418.23 3 L
2 Z
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(13) 301 36.66 T
0 12 Q
-0.07 (ence of a path between them in the CDFG then) 72 397 P
1.34 (by allocating the same functional unit to per-) 72 383 P
0.08 (form them we do not increase the length of the) 72 369 P
(schedule \050the number of states needed\051.) 72 355 T
3.06 (W) 72 327 P
3.06 (e still ha) 82.37 327 P
3.06 (v) 128.91 327 P
3.06 (e to mak) 134.73 327 P
3.06 (e sure that we do not) 182.06 327 P
2.86 (increase the clock c) 72 313 P
2.86 (ycle. This is true if the) 174.7 313 P
2.73 (delay of the functional unit which performs) 72 299 P
3.72 (both the operations is not greater than the) 72 285 P
1.67 (delay of the slo) 72 271 P
1.67 (west functional unit allocated) 150.35 271 P
1.02 (so f) 72 257 P
1.02 (ar to an) 90.57 257 P
1.02 (y other operation. In our e) 128.43 257 P
1.02 (xample,) 258.67 257 P
0.29 (all these conditions hold for the + and - opera-) 72 243 P
1.09 (tions \050see Figure 5\051. Therefore we are able to) 72 229 P
0.85 (group the + and - operations without compro-) 72 215 P
3.36 (mising performance ag) 72 201 P
3.36 (ainst the decrease of) 189.29 201 P
0.71 (cost \050the area of the unit which performs both) 72 187 P
0.47 (+ and - is less than the sum of the areas of the) 72 173 P
(unit for + and the unit for -\051.) 72 159 T
1.8 (At this point we ha) 72 131 P
1.8 (v) 170.29 131 P
1.8 (e a v) 176.11 131 P
1.8 (alid functional unit) 202.07 131 P
3.46 (allocation, and we can generate a schedule) 72 117 P
0.12 (using list scheduling. The allocated and sched-) 72 103 P
1.75 (uled CDFG corresponds to the f) 72 89 P
1.75 (astest imple-) 234.26 89 P
4.93 (mentation, using the gi) 315 397 P
4.93 (v) 439.51 397 P
4.93 (en library) 445.33 397 P
4.93 (. If this) 495.8 397 P
0.18 (implementation doesn\325) 315 383 P
0.18 (t satisfy the timing con-) 425.29 383 P
3.03 (straint we ha) 315 369 P
3.03 (v) 382.14 369 P
3.03 (e to use a library with f) 387.96 369 P
3.03 (aster) 517.34 369 P
4 (components. If the implementation satis\336es) 315 355 P
3.68 (the constraint, we can allocate storage and) 315 341 P
0.6 (interconnect to generate a complete R) 315 327 P
0.6 (TL le) 498.89 327 P
0.6 (v) 525.52 327 P
0.6 (el) 531.34 327 P
(implementation of the algorithm.) 315 313 T
1.09 (In order to generate the ne) 315 285 P
1.09 (xt implementations) 446.57 285 P
2.24 (we will mer) 315 271 P
2.24 (ge at each step the 2 operations) 376.59 271 P
1.38 (which create the smallest performance de) 315 257 P
1.38 (gra-) 520.68 257 P
0.71 (dation measured by the product of) 315 243 P
2 F
0.71 (cloc) 486.56 243 P
0.71 (k cycle) 506.31 243 P
0 F
1.37 (and) 315 229 P
2 F
1.37 ( number of states) 332.33 229 P
0 F
1.37 (. This allo) 418.78 229 P
1.37 (ws us to trade) 469.56 229 P
0.82 (of) 315 215 P
0.82 (f performance ag) 324.7 215 P
0.82 (ainst the cost of the imple-) 408.24 215 P
-0.2 (mentation. W) 315 201 P
-0.2 (e k) 379.17 201 P
-0.2 (eep on doing this until we pass) 393.18 201 P
1.29 (the timing constraint. At each iteration of the) 315 187 P
-0.1 (methodology \337o) 315 173 P
-0.1 (wchart a ne) 393.61 173 P
-0.1 (w point in the cost/) 448.41 173 P
1.24 (e) 315 159 P
1.24 (x) 320.15 159 P
1.24 (ecution time space is generated \050see Figure) 325.97 159 P
1.51 (4\051. All the R) 315 145 P
1.51 (TL descriptions generated so f) 378.8 145 P
1.51 (ar) 530.68 145 P
2.39 (represent points in the design space and are) 315 131 P
(considered for use in the \336nal implementation.) 315 117 T
246.38 678.62 316.62 693.53 7.45 RR
0.5 H
0 Z
N
0 9 Q
(SRA_SYSTEM) 218.87 737.85 T
(TEST BENCH) 144.45 698.79 T
(SRA) 306.54 699.52 T
(CONTR) 254.12 682.64 T
(OLLER) 284.26 682.64 T
(D) 333.76 682.81 T
(A) 339.9 682.81 T
(T) 345.4 682.81 T
(AP) 350.06 682.81 T
(A) 360.73 682.81 T
(TH) 366.23 682.81 T
(REGISTER_16) 423.29 560.85 T
(DRIVER) 372.63 561.55 T
(ABS/MIN/MAX) 335.27 621.8 T
(+/-/ABS/MIN/MAX) 247.64 621.72 T
208.93 734.09 281.67 749 7.45 RR
N
134.51 695.03 204.13 709.94 7.45 RR
N
236.42 673.58 391.59 710.07 18 RR
N
323.45 678.62 383.09 693.53 7.45 RR
N
290.22 557.09 360.45 572 7.45 RR
N
418.32 557.09 483.43 572 7.45 RR
N
242.75 617.09 326.46 632 7.45 RR
N
330.3 617.09 400.41 632 7.45 RR
N
179.31 713.48 180.21 710.64 169.42 710.34 178.41 716.31 4 Y
N
179.31 713.48 180.21 710.64 169.42 710.34 178.41 716.31 4 Y
V
245.3 734.4 179.55 713.55 2 L
2 Z
N
303.92 713.84 304.92 716.64 313.7 710.37 302.93 711.03 4 Y
0 Z
N
303.92 713.84 304.92 716.64 313.7 710.37 302.93 711.03 4 Y
V
245.92 734.4 303.69 713.92 2 L
2 Z
N
(DFF) 220.07 444.06 T
(AND) 248.47 443.67 T
(OR) 279.63 444.06 T
(INV) 306.45 444.06 T
(MUX21) 330.51 444.06 T
(MUX41) 373.11 443.67 T
(FULL ADDER) 219.64 499.19 T
(ADDER_16) 198.33 561.4 T
192.41 557.09 245.29 572 7.45 RR
0 Z
N
213.61 495.27 280.02 510.18 7.45 RR
N
209.42 437.38 436.61 455.53 9.07 RR
1 H
N
(XOR) 409.79 443.27 T
292.87 638.77 294.47 636.26 284.12 633.18 291.27 641.27 4 Y
0.5 H
N
292.87 638.77 294.47 636.26 284.12 633.18 291.27 641.27 4 Y
V
355.74 678.87 293.08 638.9 2 L
2 Z
N
362.38 643.78 365.3 644.34 364.3 633.59 359.45 643.23 4 Y
0 Z
N
362.38 643.78 365.3 644.34 364.3 633.59 359.45 643.23 4 Y
V
355.74 678.87 362.33 644.03 2 L
2 Z
N
224.75 577.79 226.4 575.31 216.1 572.05 223.11 580.27 4 Y
0 Z
N
224.75 577.79 226.4 575.31 216.1 572.05 223.11 580.27 4 Y
V
283.98 617.1 224.96 577.93 2 L
2 Z
N
317.1 580.03 319.34 582 323.94 572.23 314.86 578.07 4 Y
0 Z
N
317.1 580.03 319.34 582 323.94 572.23 314.86 578.07 4 Y
V
284.61 617.1 316.94 580.22 2 L
2 Z
N
(SELECT) 294.94 561.72 T
(OR2_16) 327.78 561.72 T
228 574.28 228.88 571.43 218.09 571.2 227.11 577.12 4 Y
0 Z
N
228 574.28 228.88 571.43 218.09 571.2 227.11 577.12 4 Y
V
365.72 617.1 228.24 574.35 2 L
2 Z
N
332.05 579.35 334.27 577.37 325.14 571.6 329.83 581.33 4 Y
0 Z
N
332.05 579.35 334.27 577.37 325.14 571.6 329.83 581.33 4 Y
V
365.72 617.1 332.22 579.53 2 L
2 Z
N
441.84 582.21 444.82 582.21 441.84 571.83 438.87 582.21 4 Y
0 Z
N
441.84 582.21 444.82 582.21 441.84 571.83 438.87 582.21 4 Y
V
356.99 678.87 441.84 626.47 441.84 582.46 3 L
2 Z
N
390.79 581.28 393.35 579.77 385.52 572.33 388.22 582.78 4 Y
0 Z
N
390.79 581.28 393.35 579.77 385.52 572.33 388.22 582.78 4 Y
V
356.36 679.49 416.26 624.59 390.91 581.49 3 L
2 Z
N
236.03 518.69 238.73 519.93 240.34 509.25 233.32 517.46 4 Y
0 Z
N
236.03 518.69 238.73 519.93 240.34 509.25 233.32 517.46 4 Y
V
218.4 557.27 235.92 518.92 2 L
2 Z
N
252.97 467.32 255.84 468.11 255.71 457.31 250.1 466.54 4 Y
0 Z
N
252.97 467.32 255.84 468.11 255.71 457.31 250.1 466.54 4 Y
V
245.03 496.29 252.9 467.56 2 L
2 Z
N
325.79 467.4 328.77 467.4 325.79 457.02 322.81 467.4 4 Y
0 Z
N
325.79 467.4 328.77 467.4 325.79 457.02 322.81 467.4 4 Y
V
325.79 556.57 325.79 467.65 2 L
2 Z
N
417.55 466.95 420.41 466.12 414.64 456.99 414.7 467.78 4 Y
0 Z
N
417.55 466.95 420.41 466.12 414.64 456.99 414.7 467.78 4 Y
V
443.72 556.57 417.62 467.19 2 L
2 Z
N
374.74 467.3 377.68 466.89 373.33 457.02 371.79 467.7 4 Y
0 Z
N
374.74 467.3 377.68 466.89 373.33 457.02 371.79 467.7 4 Y
V
386.94 556.57 374.77 467.55 2 L
2 Z
N
219.01 465.85 221.57 467.36 224.25 456.9 216.44 464.35 4 Y
0 Z
N
219.01 465.85 221.57 467.36 224.25 456.9 216.44 464.35 4 Y
V
283.36 678.87 152.33 579.66 218.88 466.07 3 L
2 Z
N
(Figure 10: VHDL description hierarch) 223.32 418.14 T
(y) 361.74 418.14 T
(.) 365.66 418.14 T
363.57 556.28 415 572 7.86 RR
N
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(14) 301 36.66 T
1 14 Q
(6 VHDL Models Hierar) 72 710.67 T
(ch) 213.68 710.67 T
(y) 227.47 710.67 T
(.) 233.49 710.67 T
0 12 Q
-0.19 (All the VHDL models are de) 72 682 P
-0.19 (v) 209.73 682 P
-0.19 (eloped hierarchi-) 215.55 682 P
0.6 (cally in a bottom up f) 72 668 P
0.6 (ashion, as sho) 177.89 668 P
0.6 (wn in Fig-) 245.79 668 P
(ure 10.) 72 654 T
1.32 (\0501\051. The 1st le) 72 626 P
1.32 (v) 142.99 626 P
1.32 (el of hierarch) 148.81 626 P
1.32 (y consists of the) 215.37 626 P
4.77 (basic g) 72 612 P
4.77 (ates) 110.37 612 P
2 F
4.77 (, muxes) 129.03 612 P
0 F
4.77 ( and) 169.8 612 P
2 F
4.77 (\337ip \337ops) 202.67 612 P
0 F
4.77 (. All the) 248.45 612 P
1.5 (VHDL models in this le) 72 598 P
1.5 (v) 193.03 598 P
1.5 (el ha) 198.85 598 P
1.5 (v) 223.1 598 P
1.5 (e only beha) 228.92 598 P
1.5 (v-) 287 598 P
1.42 (ioral description. All the higher le) 72 584 P
1.42 (v) 241.44 584 P
1.42 (el compo-) 247.26 584 P
(nents are composed of these basic entities.) 72 570 T
0.87 (The delay information for these g) 72 542 P
0.87 (ates and \337ip) 237.26 542 P
(\337ops are sho) 72 528 T
(wn in T) 132.36 528 T
(able 1.) 168.73 528 T
0.82 (\0502\051. The 2nd le) 72 500 P
0.82 (v) 145.49 500 P
0.82 (el of hierarch) 151.31 500 P
0.82 (y consists of the) 216.87 500 P
0.88 (16-bit adders, selectors, b) 72 486 P
0.88 (us dri) 197.38 486 P
0.88 (v) 224.96 486 P
0.88 (ers and re) 230.78 486 P
0.88 (gis-) 279 486 P
1.77 (ters. The) 72 472 P
1.77 (y appear as R) 115.58 472 P
1.77 (T le) 185.16 472 P
1.77 (v) 205.63 472 P
1.77 (el components in) 211.46 472 P
3 (the datapath. All the VHDL models in this) 72 458 P
2.14 (le) 72 444 P
2.14 (v) 80.36 444 P
2.14 (el ha) 86.18 444 P
2.14 (v) 111.08 444 P
2.14 (e both the beha) 116.9 444 P
2.14 (vioral and structural) 196.07 444 P
1.41 (description. The structural VHDL models are) 72 430 P
1.06 (simulated \336rst and then the delay information) 72 416 P
(is inserted into the beha) 72 402 T
(vioral models.) 185.75 402 T
1.07 (\0503\051. The 3rd le) 72 374 P
1.07 (v) 144.23 374 P
1.07 (el of hierarch) 150.05 374 P
1.07 (y consists of the) 216.11 374 P
1.11 (comple) 72 360 P
1.11 (x library components such as) 107.15 360 P
2 F
1.11 (abs/min/) 255.66 360 P
0.91 (max) 72 346 P
0 F
0.91 ( and) 91.99 346 P
2 F
0.91 (abs/min/max/add/sub) 117.13 346 P
0 F
0.91 (units. The) 223.71 346 P
0.91 (y are) 272.44 346 P
2.91 (also used in the datapath. F) 72 332 P
2.91 (or e) 217.04 332 P
2.91 (xample, the) 238.1 332 P
2 F
0.61 (abs/min/max) 72 318 P
0 F
0.61 ( consists of 2 16-bit selectors and) 133.33 318 P
4.06 (1 16-bit ripple carry adder) 72 304 P
4.06 (. W) 213.55 304 P
4.06 (e ha) 233.98 304 P
4.06 (v) 257.45 304 P
4.06 (e both) 263.27 304 P
3.32 (beha) 72 290 P
3.32 (vioral and structural VHDL description) 94.42 290 P
(for them.) 72 276 T
1.16 (\0504\051. The 4th le) 72 248 P
1.16 (v) 143.82 248 P
1.16 (el of hierarch) 149.64 248 P
1.16 (y consists of the) 215.87 248 P
0.45 (datapath and controller) 72 234 P
0.45 (. The datapath model is) 182.88 234 P
2.43 (an R) 72 220 P
2.43 (T le) 96.04 220 P
2.43 (v) 117.16 220 P
2.43 (el structural model. The controller) 122.98 220 P
4.46 (has both beha) 72 206 P
4.46 (vioral model which generate) 146.66 206 P
3.88 (appropriate control signals e) 72 192 P
3.88 (v) 219.64 192 P
3.88 (ery c) 225.46 192 P
3.88 (ycle and) 252.8 192 P
1.7 (structural model which is a g) 72 178 P
1.7 (ate le) 219.43 178 P
1.7 (v) 246.48 178 P
1.7 (el imple-) 252.3 178 P
3.88 (mentation including ne) 72 164 P
3.88 (xt-state logic, output) 190.24 164 P
0.5 (logic and state \337ip \337ops. The testbench is also) 72 150 P
(included in this le) 72 136 T
(v) 157.37 136 T
(el.) 163.19 136 T
0.23 (\0505\051. The 5th le) 72 108 P
0.23 (v) 141.03 108 P
0.23 (el of hierarch) 146.85 108 P
0.23 (y simply incorpo-) 211.21 108 P
1.54 (rates the SRA model and the testbench to be) 72 94 P
(simulated.) 72 80 T
1 14 Q
(7 Conclusions.) 315 710.67 T
0 12 Q
2.28 (This report presents a methodology for time) 315 682 P
6.42 (constrained functional unit allocation and) 315 668 P
0.53 (scheduling, taking into account the area of the) 315 654 P
5.26 (implementation. It sho) 315 640 P
5.26 (ws ho) 433.55 640 P
5.26 (w to perform) 466.84 640 P
0.37 (design space e) 315 626 P
0.37 (xploration by selecting dif) 384.88 626 P
0.37 (ferent) 512.02 626 P
5.75 (library components, and creating dif) 315 612 P
5.75 (ferent) 512.02 612 P
-0.23 (schedules of the CDFG. W) 315 598 P
-0.23 (e also gi) 442.76 598 P
-0.23 (v) 481.99 598 P
-0.23 (e a method) 487.81 598 P
5.37 (ho) 315 584 P
5.37 (w to achie) 326.7 584 P
5.37 (v) 386.45 584 P
5.37 (e the best cost/performance) 392.27 584 P
1.97 (trade-of) 315 570 P
1.97 (f, pro) 352.68 570 P
1.97 (viding a good starting point for) 380.47 570 P
1.67 (the ne) 315 556 P
1.67 (xt le) 345.48 556 P
1.67 (v) 367.85 556 P
1.67 (els of synthesis. Our future plans) 373.67 556 P
(are to e) 315 542 T
(xtend this w) 350.14 542 T
(ork for pipelined designs.) 408.68 542 T
1 14 Q
(8 Refer) 387.98 484.67 T
(ences.) 431.64 484.67 T
0 12 Q
6.45 ([1] D. D. Gajski, \322Principles of Digital) 315 456 P
(Design\323, Prentice Hall 1996.) 333 442 T
0.93 ([2] D. D. Gajski, N. Dutt, A. W) 315 428 P
0.93 (u, and S. Lin,) 472.55 428 P
5.2 (\322High Le) 333 414 P
5.2 (v) 382.89 414 P
5.2 (el Synthesis: Introduction to) 388.71 414 P
2.87 (Chip and System Design\323, Kluwer Aca-) 333 400 P
(demic Publishers, 1992.) 333 386 T
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(15) 301 36.66 T
1 14 Q
(9 A) 72 710.67 T
(ppendix.) 92.26 710.67 T
1 10 Q
(9.1 SRA System.) 72 685.33 T
0 F
(////////////////////////// SRA system //////////////////////////////////) 72 661.33 T
1.08 (-- square root approximation algorithm system - struc-) 72 637.33 P
(tural description) 72 625.33 T
1.6 (-- includes the whole system comprised of test bench) 72 613.33 P
(component and the SRA.) 72 601.33 T
(library ieee;) 72 577.33 T
(   use ieee.std_logic_1164.all;) 72 565.33 T
(   use ieee.std_logic_misc.all;) 72 553.33 T
(   use ieee.std_logic_arith.all;) 72 541.33 T
(entity sqr_system is) 72 517.33 T
(end sqr_system;) 72 505.33 T
(architecture schematic of sqr_system is) 72 481.33 T
(   signal       done) 72 457.33 T
(  : std_logic;) 140.33 457.33 T
(   signal   sqr_out : std_logic_v) 72 445.33 T
(ector\05015 do) 195.19 445.33 T
(wnto 0\051;) 240.76 445.33 T
(   signal       reset : std_logic;) 72 433.33 T
(   signal           clk : std_logic;) 72 421.33 T
(   signal       start  : std_logic;) 72 409.33 T
(   signal          in2  : std_logic_v) 72 397.33 T
(ector\05015 do) 197.97 397.33 T
(wnto 0\051;) 243.54 397.33 T
(   signal          in1  : std_logic_v) 72 385.33 T
(ector\05015 do) 197.97 385.33 T
(wnto 0\051;) 243.54 385.33 T
(   -- test bench component) 72 361.33 T
(   component tb) 72 349.33 T
(      port \050    done  : in     std_logic;) 72 337.33 T
(               sqr_out : in     std_logic_v) 72 325.33 T
(ector\05015 do) 214.08 325.33 T
(wnto 0\051;) 259.65 325.33 T
(                       clk : out   std_logic;) 72 313.33 T
(                      in1  : out   std_logic_v) 72 301.33 T
(ector\05015 do) 216.86 301.33 T
(wnto 0\051;) 262.43 301.33 T
(                      in2  : out   std_logic_v) 72 289.33 T
(ector\05015 do) 216.86 289.33 T
(wnto 0\051;) 262.43 289.33 T
(                   reset : out   std_logic;) 72 277.33 T
(                   start  : out   std_logic \051;) 72 265.33 T
(   end component;) 72 253.33 T
(   -- square root approximation component) 72 229.33 T
(   component sqr) 72 217.33 T
(      port \050     clk  : in    std_logic;) 72 205.33 T
(         in1   : in    std_logic_v) 97 193.33 T
(ector\05015 do) 209.36 193.33 T
(wnto 0\051;) 254.93 193.33 T
(                   in2   : in    std_logic_v) 72 181.33 T
(ector\05015 do) 209.36 181.33 T
(wnto 0\051;) 254.93 181.33 T
(                 reset : in    std_logic;) 72 169.33 T
(                 start  : in    std_logic;) 72 157.33 T
(                 done  : out   std_logic;) 72 145.33 T
(            sqr_out  : out   std_logic_v) 72 133.33 T
(ector\05015 do) 209.08 133.33 T
(wnto 0\051 \051;) 254.65 133.33 T
(   end component;) 72 121.33 T
(   for all: sqr use entity w) 72 109.33 T
(ork.sqr\050 schematic_optimal\051;) 171.89 109.33 T
(be) 72 85.33 T
(gin) 81.29 85.33 T
(   i_tb : tb) 315 713.33 T
3.69 (      port map \050 done=>done, sqr_out=>sqr_out,) 315 701.33 P
(clk=>clk, in1=>in1,) 315 689.33 T
(                 in2=>in2, reset=>reset, start=>start \051;) 315 677.33 T
(   i_sqr : sqr) 315 665.33 T
3.99 (      port map \050 clk=>clk, in1=>in1, in2=>in2,) 315 653.33 P
(reset=>reset,) 315 641.33 T
-0.16 (                 start=>start, done=>done, sqr_out=>sqr_out \051;) 315 629.33 P
(end schematic;) 315 617.33 T
1.03 (con\336guration cfg_sqr_system_schematic of sqr_system) 315 593.33 P
(is) 315 581.33 T
(   for schematic) 315 569.33 T
(   end for;) 315 557.33 T
(end cfg_sqr_system_schematic;) 315 545.33 T
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(16) 301 36.66 T
1 F
(9.2 T) 72 713.33 T
(est Bench Entity) 92.75 713.33 T
(.) 162.05 713.33 T
0 F
(//////////////////////////// test bench //////////////////////////////////) 72 689.33 T
1.24 (--test bench for square root approximation algorithm -) 72 665.33 P
(beha) 72 653.33 T
(vioral description) 90.68 653.33 T
(library ieee;) 72 629.33 T
(   use ieee.std_logic_1164.all;) 72 617.33 T
(   use ieee.std_logic_misc.all;) 72 605.33 T
(   use ieee.std_logic_arith.all;) 72 593.33 T
(entity tb is) 72 569.33 T
(      port \050done   : in     std_logic;) 72 557.33 T
(           sqr_out   : in     std_logic_v) 72 545.33 T
(ector\05015 do) 209.08 545.33 T
(wnto 0\051;) 254.65 545.33 T
(                  clk    : out   std_logic;) 72 533.33 T
(                  in1    : out   std_logic_v) 72 521.33 T
(ector\05015 do) 211.86 521.33 T
(wnto 0\051;) 257.43 521.33 T
(                  in2    : out   std_logic_v) 72 509.33 T
(ector\05015 do) 211.86 509.33 T
(wnto 0\051;) 257.43 509.33 T
(              reset    : out   std_logic;) 72 497.33 T
(               start    : out   std_logic \051;) 72 485.33 T
(end tb;) 72 473.33 T
(architecture beha) 72 449.33 T
(vioral of tb is) 140.38 449.33 T
(signal c : std_logic := \3240\325;) 72 437.33 T
(constant period : time := 90 ns;) 72 425.33 T
(be) 72 413.33 T
(gin) 81.29 413.33 T
(-- clock generation) 79.5 401.33 T
(   c) 72 389.33 T
(<= not c after \050period / 2.0 \051 ;) 86.44 389.33 T
(   clk) 72 377.33 T
(<= c;) 94.22 377.33 T
(-- test v) 72 353.33 T
(ectors generation) 102.4 353.33 T
(process) 72 341.33 T
(type test_v) 79.5 329.33 T
(ector is array \0501 to 10\051 of) 122.96 329.33 T
(   std_logic_v) 72 317.33 T
(ector\05015 do) 126.02 317.33 T
(wnto 0\051;) 171.59 317.33 T
(   constant in_1: test_v) 72 305.33 T
(ector:=) 162.13 305.33 T
(\050\3221111111111111111\323,) 87 293.33 T
(        \3220000000000000001\323,) 72 281.33 T
( \3220000000000000001\323,) 92 269.33 T
(        \3220000000000000011\323,) 72 257.33 T
(         \3220000000000000101\323,) 72 245.33 T
(        \3221111111111111011\323,) 74.5 233.33 T
(        \3221000000000000000\323,) 74.5 221.33 T
( \3220000000000001001\323,) 92 209.33 T
(         \3220000000000000100\323,) 72 197.33 T
( \3220000000000000111\323) 92 185.33 T
( \051;) 84.5 173.33 T
(constant in_2: test_v) 79.5 161.33 T
(ector:=) 162.13 161.33 T
(      \050\3220000000000000001\323,) 72 149.33 T
( \3220000000000000000\323,) 92 137.33 T
( \3220000000000000011\323,) 92 125.33 T
( \3220000000000000011\323,) 92 113.33 T
(         \3221111111111110100\323,) 72 101.33 T
( \3221111111111110100\323,) 92 89.33 T
( \3220111111111111111\323,) 92 77.33 T
(         \3220000000000011000\323,) 315 713.33 T
( \3220000000000000100\323,) 335 701.33 T
(         \3220000000000001000\323) 315 689.33 T
( \051;) 327.5 677.33 T
(be) 315 665.33 T
(gin) 324.29 665.33 T
(for i in in_1\325) 335 653.33 T
(range loop) 385.33 653.33 T
(           reset) 315 641.33 T
(<= \3240\325,) 363.88 641.33 T
(                            \3241\325 after 150 ns;) 315 629.33 T
(           start) 315 617.33 T
(<= \3240\325,) 364.72 617.33 T
(                        \3241\325 after 150 ns,) 322.5 605.33 T
(                        \3240\325 after 300 ns;) 322.5 593.33 T
(           in1 <= in_1\050i\051;) 315 581.33 T
(           in2 <= in_2\050i\051;) 315 569.33 T
(w) 342.5 557.33 T
(ait for 900 ns;) 349.62 557.33 T
(        end loop;) 315 545.33 T
(end process;) 315 533.33 T
(end beha) 315 521.33 T
(vioral;) 350.62 521.33 T
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(17) 301 36.66 T
1 F
(9.3 SRA Entity) 72 713.33 T
(.) 135.47 713.33 T
0 F
(///////////////////////////// SRA entity ////////////////////////////////) 72 689.33 T
2.06 (-- Square Root Algorithm - beha) 72 665.33 P
2.06 (vioral and structural) 212.35 665.33 P
(descriptions) 72 653.33 T
(library ieee;) 72 629.33 T
(   use ieee.std_logic_1164.all;) 72 617.33 T
(   use ieee.std_logic_misc.all;) 72 605.33 T
(   use ieee.std_logic_arith.all;) 72 593.33 T
(entity sqr is) 72 569.33 T
(      port \050   clk : in     std_logic;) 72 557.33 T
(                  in1 : in     std_logic_v) 72 545.33 T
(ector\05015 do) 204.36 545.33 T
(wnto 0\051;) 249.93 545.33 T
(                  in2 : in     std_logic_v) 72 533.33 T
(ector\05015 do) 204.36 533.33 T
(wnto 0\051;) 249.93 533.33 T
(              reset : in     std_logic;) 72 521.33 T
(               start : in     std_logic;) 72 509.33 T
(               done : out   std_logic;) 72 497.33 T
(          sqr_out : out   std_logic_v) 72 485.33 T
(ector\05015 do) 201.58 485.33 T
(wnto 0\051 \051;) 247.15 485.33 T
(end sqr;) 72 473.33 T
(-- beha) 72 449.33 T
(vioral description of SRA) 99.84 449.33 T
(architecture nonscheduled_beha) 72 437.33 T
(vioral of sqr is) 200.37 437.33 T
(be) 72 425.33 T
(gin) 81.29 425.33 T
(process\050clk,reset\051) 77 413.33 T
(v) 92 401.33 T
(ariable a,b,t1,t2,t3,t4,t5,t6,t7,x,y : inte) 96.75 401.33 T
(ger;) 247.99 401.33 T
-0.04 (v) 91.71 389.33 P
-0.04 (ariable v_sqr_out: std_logic_v) 96.46 389.33 P
-0.04 (ector\05015 do) 217.89 389.33 P
-0.04 (wnto 0\051;) 263.43 389.33 P
(v) 92 377.33 T
(ariable v_done : std_logic:=\3250\325;) 96.75 377.33 T
(  be) 72 365.33 T
(gin) 86.29 365.33 T
(if \050reset = \3240\325\051 then) 92 353.33 T
(v_done := \3240\325;) 112 341.33 T
(v_sqr_out := \322zzzzzzzzzzzzzzzz\323;) 112 329.33 T
-0.23 (elsif \050clk = \3241\325\051 and \050clk\325e) 90.16 317.33 P
-0.23 (v) 192.41 317.33 P
-0.23 (ent\051 and \050start = \3241\325\051 then) 197.26 317.33 P
(a := con) 112 305.33 T
(v_inte) 143.9 305.33 T
(ger\050signed\050in1\051\051;) 168.75 305.33 T
(b := con) 112 293.33 T
(v_inte) 144.46 293.33 T
(ger\050signed\050in2\051\051;) 169.31 293.33 T
(if \050a<0\051 then) 112 281.33 T
(t1 := -a;) 132 269.33 T
(else) 112 257.33 T
(t1 := a;) 132 245.33 T
(end if;) 112 233.33 T
(if \050b<0\051 then) 112 221.33 T
(t2 := -b;) 132 209.33 T
(else) 112 197.33 T
(t2 := b;) 132 185.33 T
(end if;) 112 173.33 T
(if \050t1<t2\051 then) 112 161.33 T
(x := t2;) 132 149.33 T
(y := t1;) 132 137.33 T
(else) 112 125.33 T
(x := t1;) 132 113.33 T
(y := t2;) 132 101.33 T
(end if;) 112 89.33 T
(t4 := y /2;) 112 77.33 T
(t3 := x /8;) 355 713.33 T
(t5 := x - t3;) 355 701.33 T
(t6 := t4 + t5;) 355 689.33 T
(if \050t6 > x\051 then) 355 677.33 T
(t7 := t6;) 375 665.33 T
(else) 355 653.33 T
(t7 := x;) 375 641.33 T
(end if;) 355 629.33 T
(v_done :=\3251\325;) 355 617.33 T
(v_sqr_out := con) 355 605.33 T
(v_std_logic_v) 422.46 605.33 T
(ector\050t7,16\051;) 478.98 605.33 T
(end if;) 335 593.33 T
(if \050reset\325e) 335 581.33 T
(v) 373.34 581.33 T
(ent\051 and \050reset = \3240\325\051 then) 378.19 581.33 T
(done <= v_done after 6.4 ns;) 355 569.33 T
(sqr_out <= v_sqr_out after 8.4 ns;) 355 557.33 T
(end if;) 335 545.33 T
(if \050clk\325e) 335 533.33 T
(v) 366.68 533.33 T
(ent\051 and \050clk = \3241\325\051 and \050start = \3241\325\051 then) 371.53 533.33 T
(done <= v_done after 7*88.8 ns;) 355 521.33 T
(sqr_out <= v_sqr_out after 7*88.8 ns;) 355 509.33 T
(end if;) 335 497.33 T
(end process;) 315 485.33 T
(end nonscheduled_beha) 315 473.33 T
(vioral;) 410.61 473.33 T
(-- SRA structural description \050datapath and controller\051) 315 449.33 T
(architecture schematic_optimal of sqr is) 315 437.33 T
(   signal      n_1 : std_logic;) 315 425.33 T
(   signal      n_2 : std_logic;) 315 413.33 T
(   signal      n_3 : std_logic;) 315 401.33 T
(   signal      n_4 : std_logic;) 315 389.33 T
(   signal      n_5 : std_logic;) 315 377.33 T
(   signal      n_6 : std_logic;) 315 365.33 T
(   signal      n_7 : std_logic;) 315 353.33 T
(   signal      n_8 : std_logic;) 315 341.33 T
(   signal      n_9 : std_logic;) 315 329.33 T
(   signal     n_10 : std_logic;) 315 317.33 T
(   signal     n_11 : std_logic;) 315 305.33 T
(   signal     n_12 : std_logic;) 315 293.33 T
(   signal     n_13 : std_logic;) 315 281.33 T
(   signal     n_14 : std_logic;) 315 269.33 T
(   signal     n_15 : std_logic;) 315 257.33 T
(   signal     n_16 : std_logic;) 315 245.33 T
(   signal     n_17 : std_logic;) 315 233.33 T
(   signal     n_18 : std_logic;) 315 221.33 T
(   signal     n_19 : std_logic;) 315 209.33 T
(   signal     n_20 : std_logic;) 315 197.33 T
(   component datapath_optimal) 315 173.33 T
(      port \050     c1 : in    std_logic;) 315 161.33 T
(                  c2 : in    std_logic;) 315 149.33 T
(                  c3 : in    std_logic;) 315 137.33 T
(                  c4 : in    std_logic;) 315 125.33 T
(                 clk : in    std_logic;) 315 113.33 T
(                  en : in    std_logic;) 315 101.33 T
(                 in1 : in    std_logic_vector\05015 downto 0\051;) 315 89.33 T
(                 in2 : in    std_logic_vector\05015 downto 0\051;) 315 77.33 T
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(18) 301 36.66 T
(               load1 : in    std_logic;) 72 713.33 T
(               load2 : in    std_logic;) 72 701.33 T
(               load3 : in    std_logic;) 72 689.33 T
(                   s1 : in    std_logic;) 72 677.33 T
(                 s10 : in    std_logic;) 72 665.33 T
(                 s11 : in    std_logic;) 72 653.33 T
(                 s12 : in    std_logic;) 72 641.33 T
(                  s2 : in    std_logic;) 72 629.33 T
(                  s3 : in    std_logic;) 72 617.33 T
(                  s4 : in    std_logic;) 72 605.33 T
(                  s5 : in    std_logic;) 72 593.33 T
(                  s6 : in    std_logic;) 72 581.33 T
(                  s7 : in    std_logic;) 72 569.33 T
(                  s8 : in    std_logic;) 72 557.33 T
(                  s9 : in    std_logic;) 72 545.33 T
(          sqr_out : out   std_logic_vector\05015 downto 0\051 \051;) 72 533.33 T
(   end component;) 72 521.33 T
(   component controller_optimal) 72 497.33 T
(      port \050   clk : in    std_logic;) 72 485.33 T
(               reset : in    std_logic;) 72 473.33 T
(               start : in    std_logic;) 72 461.33 T
(                  c1 : out   std_logic;) 72 449.33 T
(                  c2 : out   std_logic;) 72 437.33 T
(                  c3 : out   std_logic;) 72 425.33 T
(                  c4 : out   std_logic;) 72 413.33 T
(              done : out   std_logic;) 72 401.33 T
(                  en : out   std_logic;) 72 389.33 T
(             load1 : out   std_logic;) 72 377.33 T
(             load2 : out   std_logic;) 72 365.33 T
(             load3 : out   std_logic;) 72 353.33 T
(                  s1 : out   std_logic;) 72 341.33 T
(                 s10 : out   std_logic;) 72 329.33 T
(                 s11 : out   std_logic;) 72 317.33 T
(                 s12 : out   std_logic;) 72 305.33 T
(                  s2 : out   std_logic;) 72 293.33 T
(                  s3 : out   std_logic;) 72 281.33 T
(                  s4 : out   std_logic;) 72 269.33 T
(                  s5 : out   std_logic;) 72 257.33 T
(                  s6 : out   std_logic;) 72 245.33 T
(                  s7 : out   std_logic;) 72 233.33 T
(                  s8 : out   std_logic;) 72 221.33 T
(                  s9 : out   std_logic \051;) 72 209.33 T
(   end component;) 72 197.33 T
(begin) 72 173.33 T
(   i_1 : datapath_optimal) 72 161.33 T
-0.54 (      port map \050 c1=>n_11, c2=>n_10, c3=>n_9, c4=>n_8,) 72 149.33 P
(clk=>clk, en=>n_4,) 72 137.33 T
(           in1=>in1, in2=>in2, load1=>n_3, load2=>n_2,) 72 125.33 T
(load3=>n_1,) 72 113.33 T
(            s1=>n_20, s10=>n_7, s11=>n_6, s12=>n_5,) 72 101.33 T
(s2=>n_19,) 72 89.33 T
(             s3=>n_18, s4=>n_17, s5=>n_16, s6=>n_15,) 72 77.33 T
(s7=>n_14,) 315 713.33 T
(            s8=>n_13, s9=>n_12, sqr_out=>sqr_out \051;) 315 701.33 T
(   i_2 : controller_optimal) 315 689.33 T
(      port map \050 clk=>clk, reset=>reset, start=>start,) 315 677.33 T
(c1=>n_11,) 315 665.33 T
(             c2=>n_10, c3=>n_9, c4=>n_8, done=>done,) 315 653.33 T
(en=>n_4,) 315 641.33 T
(              load1=>n_3, load2=>n_2, load3=>n_1,) 315 629.33 T
(s1=>n_20, s10=>n_7,) 315 617.33 T
(              s11=>n_6, s12=>n_5, s2=>n_19, s3=>n_18,) 315 605.33 T
(s4=>n_17,) 315 593.33 T
(             s5=>n_16, s6=>n_15, s7=>n_14, s8=>n_13,) 315 581.33 T
(s9=>n_12 \051;) 315 569.33 T
(end schematic_optimal;) 315 557.33 T
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(19) 301 36.66 T
1 F
(9.4 Datapath Entity) 72 713.33 T
(.) 155.47 713.33 T
0 F
(//////////////////////////// Datapath //////////////////////////////////) 72 701.33 T
3.77 (-- Datapath of Square Root Algorithm - structural) 72 689.33 P
(description) 72 677.33 T
(library ieee;) 72 653.33 T
(   use ieee.std_logic_1164.all;) 72 641.33 T
(   use ieee.std_logic_misc.all;) 72 629.33 T
(   use ieee.std_logic_arith.all;) 72 617.33 T
(   use w) 72 605.33 T
(ork.all;) 102.45 605.33 T
(entity datapath_optimal is) 72 581.33 T
(      port \050    c1 : in    std_logic;) 72 569.33 T
(                  c2 : in    std_logic;) 72 557.33 T
(                  c3 : in    std_logic;) 72 545.33 T
(                  c4 : in    std_logic;) 72 533.33 T
(                 clk : in    std_logic;) 72 521.33 T
(                  en : in    std_logic;) 72 509.33 T
(                 in1 : in    std_logic_v) 72 497.33 T
(ector\05015 do) 199.36 497.33 T
(wnto 0\051;) 244.93 497.33 T
(                 in2 : in    std_logic_v) 72 485.33 T
(ector\05015 do) 199.36 485.33 T
(wnto 0\051;) 244.93 485.33 T
(              load1 : in    std_logic;) 72 473.33 T
(              load2 : in    std_logic;) 72 461.33 T
(              load3 : in    std_logic;) 72 449.33 T
(                   s1 : in    std_logic;) 72 437.33 T
(                 s10 : in    std_logic;) 72 425.33 T
(                 s11 : in    std_logic;) 72 413.33 T
(                 s12 : in    std_logic;) 72 401.33 T
(                  s2 : in    std_logic;) 72 389.33 T
(                  s3 : in    std_logic;) 72 377.33 T
(                  s4 : in    std_logic;) 72 365.33 T
(                  s5 : in    std_logic;) 72 353.33 T
(                  s6 : in    std_logic;) 72 341.33 T
(                  s7 : in    std_logic;) 72 329.33 T
(                  s8 : in    std_logic;) 72 317.33 T
(                  s9 : in    std_logic;) 72 305.33 T
(          sqr_out : out   std_logic_v) 72 293.33 T
(ector\05015 do) 201.58 293.33 T
(wnto 0\051 \051;) 247.15 293.33 T
(end datapath_optimal;) 72 281.33 T
(architecture schematic of datapath_optimal is) 72 257.33 T
(   signal     n_11 : std_logic_v) 72 233.33 T
(ector\05015 do) 190.19 233.33 T
(wnto 0\051;) 235.76 233.33 T
(   signal     n_12 : std_logic_v) 72 221.33 T
(ector\05015 do) 190.19 221.33 T
(wnto 0\051;) 235.76 221.33 T
(   signal     n_13 : std_logic_v) 72 209.33 T
(ector\05015 do) 190.19 209.33 T
(wnto 0\051;) 235.76 209.33 T
(   signal     n_14 : std_logic_v) 72 197.33 T
(ector\05015 do) 190.19 197.33 T
(wnto 0\051;) 235.76 197.33 T
(   signal      n_1 : std_logic_v) 72 185.33 T
(ector\05015 do) 187.69 185.33 T
(wnto 0\051;) 233.26 185.33 T
(   signal      n_2 : std_logic_v) 72 173.33 T
(ector\05015 do) 187.69 173.33 T
(wnto 0\051;) 233.26 173.33 T
(   signal      n_3 : std_logic_v) 72 161.33 T
(ector\05015 do) 187.69 161.33 T
(wnto 0\051;) 233.26 161.33 T
(   signal      n_4 : std_logic_v) 72 149.33 T
(ector\05015 do) 187.69 149.33 T
(wnto 0\051;) 233.26 149.33 T
(   signal      n_5 : std_logic_v) 72 137.33 T
(ector\05015 do) 187.69 137.33 T
(wnto 0\051;) 233.26 137.33 T
(   signal      n_7 : std_logic_v) 72 125.33 T
(ector\05015 do) 187.69 125.33 T
(wnto 0\051;) 233.26 125.33 T
(   signal      n_9 : std_logic_v) 72 113.33 T
(ector\05015 do) 187.69 113.33 T
(wnto 0\051;) 233.26 113.33 T
(   signal     n_10 : std_logic_v) 72 101.33 T
(ector\05015 do) 190.19 101.33 T
(wnto 0\051;) 235.76 101.33 T
(   component b) 72 77.33 T
(uf) 131.24 77.33 T
(fer16) 139.32 77.33 T
(      port \050    c : in    std_logic;) 315 713.33 T
(                   i : in    std_logic_v) 315 701.33 T
(ector\05015 do) 437.36 701.33 T
(wnto 0\051;) 482.93 701.33 T
(                   o : out   std_logic_v) 315 689.33 T
(ector\05015 do) 442.08 689.33 T
(wnto 0\051 \051;) 487.65 689.33 T
(   end component;) 315 677.33 T
(   component shift3) 315 653.33 T
(      port \050     i : in    std_logic_v) 315 641.33 T
(ector\05015 do) 439.3 641.33 T
(wnto 0\051;) 484.87 641.33 T
(                   o : out   std_logic_v) 315 629.33 T
(ector\05015 do) 442.08 629.33 T
(wnto 0\051 \051;) 487.65 629.33 T
(   end component;) 315 617.33 T
(   component shift1) 315 593.33 T
(      port \050     i : in    std_logic_v) 315 581.33 T
(ector\05015 do) 439.3 581.33 T
(wnto 0\051;) 484.87 581.33 T
(                   o : out   std_logic_v) 315 569.33 T
(ector\05015 do) 442.08 569.33 T
(wnto 0\051 \051;) 487.65 569.33 T
(   end component;) 315 557.33 T
(   component addsubabs) 315 533.33 T
(      port \050    c0 : in    std_logic;) 315 521.33 T
(                  c1 : in    std_logic;) 315 509.33 T
(                   i1 : in    std_logic_v) 315 497.33 T
(ector\05015 do) 442.36 497.33 T
(wnto 0\051;) 487.93 497.33 T
(                   i2 : in    std_logic_v) 315 485.33 T
(ector\05015 do) 442.36 485.33 T
(wnto 0\051;) 487.93 485.33 T
(                    o : out   std_logic_v) 315 473.33 T
(ector\05015 do) 444.58 473.33 T
(wnto 0\051 \051;) 490.15 473.33 T
(   end component;) 315 461.33 T
1.06 (   for all: addsubabs use entity w) 315 449.33 P
1.06 (ork.addsubabs\050 struc-) 452.85 449.33 P
(tural\051;) 315 437.33 T
(   component re) 315 413.33 T
(gister_16) 377.06 413.33 T
(      port \050   clk : in    std_logic;) 315 401.33 T
(                 din : in    std_logic_v) 315 389.33 T
(ector\05015 do) 442.36 389.33 T
(wnto 0\051;) 487.93 389.33 T
(                load : in    std_logic;) 315 377.33 T
(                dout : out   std_logic_v) 315 365.33 T
(ector\05015 do) 447.36 365.33 T
(wnto 0\051 \051;) 492.93 365.33 T
(   end component;) 315 353.33 T
(   component absminmax) 315 329.33 T
(      port \050    c0 : in    std_logic;) 315 317.33 T
(                  c1 : in    std_logic;) 315 305.33 T
(                  i1 : in    std_logic_v) 315 293.33 T
(ector\05015 do) 439.86 293.33 T
(wnto 0\051;) 485.43 293.33 T
(                  i2 : in    std_logic_v) 315 281.33 T
(ector\05015 do) 439.86 281.33 T
(wnto 0\051;) 485.43 281.33 T
(                   o : out   std_logic_v) 315 269.33 T
(ector\05015 do) 442.08 269.33 T
(wnto 0\051 \051;) 487.65 269.33 T
(   end component;) 315 257.33 T
(be) 315 233.33 T
(gin) 324.29 233.33 T
(   i_20 : b) 315 209.33 T
(uf) 352.86 209.33 T
(fer16) 360.94 209.33 T
(      port map \050 c=>en, i=>n_14, o=>sqr_out \051;) 315 197.33 T
(   i_1 : b) 315 185.33 T
(uf) 347.86 185.33 T
(fer16) 355.94 185.33 T
(      port map \050 c=>s6, i=>n_7, o=>n_4 \051;) 315 173.33 T
(   i_2 : b) 315 161.33 T
(uf) 347.86 161.33 T
(fer16) 355.94 161.33 T
(      port map \050 c=>s5, i=>in2, o=>n_4 \051;) 315 149.33 T
(   i_3 : b) 315 137.33 T
(uf) 347.86 137.33 T
(fer16) 355.94 137.33 T
(      port map \050 c=>s4, i=>n_7, o=>n_5 \051;) 315 125.33 T
(   i_4 : b) 315 113.33 T
(uf) 347.86 113.33 T
(fer16) 355.94 113.33 T
(      port map \050 c=>s3, i=>in1, o=>n_5 \051;) 315 101.33 T
(   i_5 : b) 315 89.33 T
(uf) 347.86 89.33 T
(fer16) 355.94 89.33 T
(      port map \050 c=>s2, i=>n_9, o=>n_5 \051;) 315 77.33 T
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(20) 301 36.66 T
(   i_6 : b) 72 713.33 T
(uf) 104.86 713.33 T
(fer16) 112.94 713.33 T
(      port map \050 c=>s1, i=>n_10, o=>n_5 \051;) 72 701.33 T
(   i_7 : b) 72 689.33 T
(uf) 104.86 689.33 T
(fer16) 112.94 689.33 T
(      port map \050 c=>s12, i=>n_12, o=>n_1 \051;) 72 677.33 T
(   i_8 : b) 72 665.33 T
(uf) 104.86 665.33 T
(fer16) 112.94 665.33 T
(      port map \050 c=>s10, i=>n_13, o=>n_2 \051;) 72 653.33 T
(   i_9 : b) 72 641.33 T
(uf) 104.86 641.33 T
(fer16) 112.94 641.33 T
(      port map \050 c=>s8, i=>n_13, o=>n_3 \051;) 72 629.33 T
(   i_10 : b) 72 617.33 T
(uf) 109.86 617.33 T
(fer16) 117.94 617.33 T
(      port map \050 c=>s11, i=>n_11, o=>n_1 \051;) 72 605.33 T
(   i_11 : b) 72 593.33 T
(uf) 109.86 593.33 T
(fer16) 117.94 593.33 T
(      port map \050 c=>s7, i=>n_11, o=>n_3 \051;) 72 581.33 T
(   i_12 : b) 72 569.33 T
(uf) 109.86 569.33 T
(fer16) 117.94 569.33 T
(      port map \050 c=>s9, i=>n_14, o=>n_2 \051;) 72 557.33 T
(   i_13 : shift3) 72 545.33 T
(      port map \050 i=>n_13, o=>n_12 \051;) 72 533.33 T
(   i_14 : shift1) 72 521.33 T
(      port map \050 i=>n_10, o=>n_9 \051;) 72 509.33 T
(   i_15 : addsubabs) 72 497.33 T
1.66 (      port map \050 c0=>c3, c1=>c4, i1=>n_2, i2=>n_1,) 72 485.33 P
(o=>n_7 \051;) 72 473.33 T
(   i_re) 72 461.33 T
(g1 : re) 94.9 461.33 T
(gister_16) 120.3 461.33 T
2.53 (      port map \050 clk=>clk, din=>n_4, load=>load2,) 72 449.33 P
(dout=>n_11 \051;) 72 437.33 T
(   i_re) 72 425.33 T
(g2 : re) 94.9 425.33 T
(gister_16) 120.3 425.33 T
2.08 (      port map \050 clk=>clk, din=>n_10, load=>load3,) 72 413.33 P
(dout=>n_13 \051;) 72 401.33 T
(   i_re) 72 389.33 T
(g3 : re) 94.9 389.33 T
(gister_16) 120.3 389.33 T
2.53 (      port map \050 clk=>clk, din=>n_5, load=>load1,) 72 377.33 P
(dout=>n_14 \051;) 72 365.33 T
(   i_19 : absminmax) 72 353.33 T
1.24 (      port map \050 c0=>c1, c1=>c2, i1=>n_3, i2=>n_14,) 72 341.33 P
(o=>n_10 \051;) 72 329.33 T
(end schematic;) 72 305.33 T
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(21) 301 36.66 T
1 F
(9.5 Abs/min/max Entity) 72 713.33 T
(.) 172.7 713.33 T
0 F
(///////////////////// abs/min/max entity /////////////////////////////) 72 689.33 T
4.17 (-- abs/min/max library component - structural and) 72 677.33 P
(beha) 72 665.33 T
(vioral descriptions) 90.68 665.33 T
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(   use ieee.std_logic_arith.all;) 72 617.33 T
(   use w) 72 605.33 T
(ork.all;) 102.45 605.33 T
(entity absminmax is) 72 581.33 T
(      port \050) 72 569.33 T
(i1 : in    std_logic_v) 109.5 557.33 T
(ector \05015 do) 189.36 557.33 T
(wnto 0\051;) 237.43 557.33 T
(i2 : in    std_logic_v) 109.5 545.33 T
(ector \05015 do) 189.36 545.33 T
(wnto 0\051;) 237.43 545.33 T
(c0 : in    std_logic;) 99.5 533.33 T
(c1 : in    std_logic;) 99.5 521.33 T
(            o : out   std_logic_v) 72 509.33 T
(ector \05015 do) 181.58 509.33 T
(wnto 0\051) 229.65 509.33 T
(\051;) 72 497.33 T
(end absminmax;) 72 485.33 T
(architecture beha) 72 461.33 T
(vioral of absminmax is) 140.38 461.33 T
(be) 72 449.33 T
(gin) 81.29 449.33 T
(process\050c0,c1,i1,i2\051) 92 437.33 T
(v) 112 425.33 T
(ariable a,b,c: inte) 116.75 425.33 T
(ger;) 185.47 425.33 T
(be) 92 413.33 T
(gin) 101.29 413.33 T
(a := con) 112 401.33 T
(v_inte) 143.9 401.33 T
(ger\050signed\050i1\051\051;) 168.75 401.33 T
(b := con) 112 389.33 T
(v_inte) 144.46 389.33 T
(ger\050signed\050i2\051\051;) 169.31 389.33 T
(if \050c1=\3250\325\051 and \050c0=\3251\325\051 then) 112 377.33 T
(if \050b<0\051 then) 132 365.33 T
(c := -b;) 152 353.33 T
(else) 132 341.33 T
(c := b;) 152 329.33 T
(end if;) 132 317.33 T
(elsif \050c1=\3251\325\051 and \050c0=\3250\325\051 then) 112 305.33 T
(if \050a < b\051 then) 132 293.33 T
(c := a;) 152 281.33 T
(else) 132 269.33 T
(c := b;) 152 257.33 T
(end if;) 132 245.33 T
(elsif \050c1=\3251\325\051 and \050c0=\3251\325\051 then) 112 233.33 T
(if \050a > b\051 then) 132 221.33 T
(c := a;) 152 209.33 T
(else) 132 197.33 T
(c := b;) 152 185.33 T
(end if;) 132 173.33 T
(end if;) 112 161.33 T
(if \050c0\325e) 112 149.33 T
(v) 140.9 149.33 T
(ent\051 then) 145.75 149.33 T
-0.13 (o <= con) 128.79 137.33 P
-0.13 (v_std_logic_v) 163.84 137.33 P
-0.13 (ector\050c,16\051 after 10) 220.36 137.33 P
(ns;) 72 125.33 T
(end if;) 112 113.33 T
(if \050c1\325e) 112 101.33 T
(v) 140.9 101.33 T
(ent\051 then) 145.75 101.33 T
0.32 (o <= con) 382.78 713.33 P
0.32 (v_std_logic_v) 418.74 713.33 P
0.32 (ector\050c,16\051 after) 475.27 713.33 P
(62.8 ns;) 315 701.33 T
(end if;) 355 689.33 T
(if \050i1\325e) 355 677.33 T
(v) 382.24 677.33 T
(ent\051 then) 387.09 677.33 T
0.32 (o <= con) 382.78 665.33 P
0.32 (v_std_logic_v) 418.74 665.33 P
0.32 (ector\050c,16\051 after) 475.27 665.33 P
(62.8 ns;) 315 653.33 T
(end if;) 375 641.33 T
(if \050i2\325e) 355 629.33 T
(v) 382.24 629.33 T
(ent\051 then) 387.09 629.33 T
-0.13 (o <= con) 371.79 617.33 P
-0.13 (v_std_logic_v) 406.84 617.33 P
-0.13 (ector\050c,16\051 after 61) 463.36 617.33 P
(ns;) 315 605.33 T
(end if;) 355 593.33 T
(end process;) 315 581.33 T
(end beha) 315 569.33 T
(vioral;) 350.62 569.33 T
(architecture structural of absminmax is) 315 533.33 T
0.36 (signal s1,s2,s3,s4,s5 : std_logic_v) 335 509.33 P
0.36 (ector \05015 do) 471.21 509.33 P
0.36 (wnto) 520 509.33 P
(0\051;) 315 497.33 T
(signal cout,o) 332.5 485.33 T
(v) 383.46 485.33 T
(er\337o) 388.31 485.33 T
(w) 406.39 485.33 T
(,s6,one: std_logic;) 412.96 485.33 T
(       -- adder_16 is a 16 bit ripple carry adder) 315 461.33 T
(component adder_16) 332.5 449.33 T
(      port \050     cin : in     std_logic;) 315 437.33 T
(                       x : in     std_logic_v) 315 425.33 T
(ector \05015 do) 452.08 425.33 T
(wnto 0\051;) 500.15 425.33 T
(                       y : in     std_logic_v) 315 413.33 T
(ector \05015 do) 452.08 413.33 T
(wnto 0\051;) 500.15 413.33 T
(                  cout : out   std_logic;) 315 401.33 T
(           o) 315 389.33 T
(v) 347.35 389.33 T
(er\337o) 352.2 389.33 T
(w : out   std_logic;) 370.28 389.33 T
(                       s : out   std_logic_v) 315 377.33 T
(ector \05015 do) 450.97 377.33 T
(wnto 0\051 \051;) 499.04 377.33 T
(end component;) 332.5 365.33 T
(       -- selector2_16 is a 16 bit 2 to 1 selector) 315 341.33 T
(component selector2_16) 332.5 329.33 T
(       port \050       i0 : in     std_logic_v) 315 317.33 T
(ector \05015 do) 454.3 317.33 T
(wnto 0\051;) 502.37 317.33 T
(                       i1 : in     std_logic_v) 315 305.33 T
(ector \05015 do) 454.86 305.33 T
(wnto 0\051;) 502.93 305.33 T
(                        s : in     std_logic;) 315 293.33 T
-0.06 (                        o : out   std_logic_v) 315 281.33 P
-0.06 (ector \05015 do) 452.74 281.33 P
-0.06 (wnto 0\051 \051;) 500.68 281.33 P
(end component;) 332.5 269.33 T
(       -- and_16 is an array of 16 2-input and g) 315 245.33 T
(ates) 494.36 245.33 T
(component and_16) 332.5 233.33 T
(       port \050       i1 : in     std_logic_v) 315 221.33 T
(ector \05015 do) 454.3 221.33 T
(wnto 0\051;) 502.37 221.33 T
(                       i2 : in     std_logic_v) 315 209.33 T
(ector \05015 do) 454.86 209.33 T
(wnto 0\051;) 502.93 209.33 T
-0.06 (                        o : out   std_logic_v) 315 197.33 P
-0.06 (ector \05015 do) 452.74 197.33 P
-0.06 (wnto 0\051 \051;) 500.68 197.33 P
(end component;) 332.5 185.33 T
(       -- in) 315 161.33 T
(v_16 is an array of 16 in) 349.04 161.33 T
(v) 446.4 161.33 T
(erters) 451.25 161.33 T
(component in) 332.5 149.33 T
(v_16) 386.82 149.33 T
(       port \050       i : in     std_logic_v) 315 137.33 T
(ector \05015 do) 449.3 137.33 T
(wnto 0\051;) 497.37 137.33 T
(                      o : out   std_logic_v) 315 125.33 T
(ector \05015 do) 449.58 125.33 T
(wnto 0\051 \051;) 497.65 125.33 T
(end component;) 332.5 113.33 T
(       -- xor2 is a 2 input xor g) 315 89.33 T
(ate) 429.94 89.33 T
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(22) 301 36.66 T
(component xor2) 89.5 713.33 T
(       port \050       i1 : in     std_logic;) 72 701.33 T
(                       i2 : in     std_logic;) 72 689.33 T
(                        o : out   std_logic \051;) 72 677.33 T
(end component;) 89.5 665.33 T
0.55 (for all : adder_16 use entity w) 93.32 641.33 P
0.55 (ork.adder_16\050 sche-) 216.48 641.33 P
(matic \051;) 72 629.33 T
0.27 (for all : selector2_16 use entity w) 91.37 617.33 P
0.27 (ork.selector2_16\050) 226.74 617.33 P
(schematic \051;) 72 605.33 T
0.31 (for all : and_16 use entity w) 91.65 593.33 P
0.31 (ork.and_16\050 schematic) 205.6 593.33 P
(\051;) 72 581.33 T
-0.01 (for all : in) 89.41 569.33 P
-0.01 (v_16 use entity w) 128.69 569.33 P
-0.01 (ork.in) 199.38 569.33 P
-0.01 (v_16\050 schematic \051;) 222.6 569.33 P
(for all : xor2 use entity w) 89.5 557.33 T
(ork.xor2\050 beha) 190.5 557.33 T
(vioral \051;) 249.17 557.33 T
(be) 72 533.33 T
(gin) 81.29 533.33 T
(process\050c1\051 be) 89.5 521.33 T
(gin) 147.38 521.33 T
(for i in 0 to 15 loop) 107 509.33 T
(s1\050i\051 <= c1;) 124.5 497.33 T
(end loop;) 107 485.33 T
(end process;) 89.5 473.33 T
(one <= \3241\325;) 89.5 461.33 T
(u1 : and_16 port map\050s1,i1,s2\051;) 89.5 449.33 T
(u2 : in) 89.5 437.33 T
(v_16 port map\050i2,s3\051;) 114.66 437.33 T
-0.04 (u3 : adder_16 port map\050one,s2,s3,cout,o) 89.22 425.33 P
-0.04 (v) 250 425.33 P
-0.04 (er\337o) 254.85 425.33 P
-0.04 (w) 272.93 425.33 P
-0.04 (,s4\051;) 279.5 425.33 P
(u4 : selector2_16 port map\050s4,i1,c1,s5\051;) 89.5 413.33 T
(u5 : xor2 port map\050c0,s4\05015\051,s6\051;) 89.5 401.33 T
(u6 : selector2_16 port map\050i2,s5,s6,o\051;) 89.5 389.33 T
(end structural;) 72 377.33 T
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(23) 301 36.66 T
1 F
(9.6 16 Bit Adder Entity) 72 713.33 T
(.) 170.47 713.33 T
0 F
(//////////////////////////// 16 bit adder entity ///////////////////////) 72 689.33 T
(-- 16 bit adder - beha) 72 665.33 T
(vioral and structural descriptions) 155.94 665.33 T
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(   use ieee.std_logic_misc.all;) 72 617.33 T
(   use ieee.std_logic_arith.all;) 72 605.33 T
(entity adder_16 is) 72 581.33 T
(      port \050 cin : in     std_logic;) 72 569.33 T
(                   x : in     std_logic_v) 72 557.33 T
(ector\05015 do) 199.08 557.33 T
(wnto 0\051;) 244.65 557.33 T
(                   y : in     std_logic_v) 72 545.33 T
(ector\05015 do) 199.08 545.33 T
(wnto 0\051;) 244.65 545.33 T
(              cout : out   std_logic;) 72 533.33 T
(       o) 72 521.33 T
(v) 94.35 521.33 T
(er\337o) 99.2 521.33 T
(w : out   std_logic;) 117.28 521.33 T
(                   s : out   std_logic_v) 72 509.33 T
(ector\05015 do) 197.97 509.33 T
(wnto 0\051 \051;) 243.54 509.33 T
(end adder_16;) 72 497.33 T
(architecture beha) 72 473.33 T
(vioral of adder_16 is) 140.38 473.33 T
(be) 72 461.33 T
(gin) 81.29 461.33 T
(process\050x,y) 89.5 449.33 T
(,cin\051) 134.67 449.33 T
(v) 107 437.33 T
(ariable sum: std_logic_v) 111.75 437.33 T
(ector\05015 do) 209.93 437.33 T
(wnto 0\051;) 255.5 437.33 T
(v) 107 425.33 T
(ariable carry: std_logic_v) 111.75 425.33 T
(ector\05016 do) 213.8 425.33 T
(wnto 0\051;) 259.37 425.33 T
(be) 89.5 413.33 T
(gin) 98.79 413.33 T
(carry\0500\051 := cin;) 107 401.33 T
(for i in 0 to 15 loop) 107 389.33 T
(sum\050i\051 := x\050i\051 xor y\050i\051 xor carry\050i\051;) 124.5 377.33 T
0.55 (carry\050i+1\051 := \050x\050i\051 and y\050i\051\051 or \050x\050i\051 and) 136.08 365.33 P
(carry\050i\051\051) 72 353.33 T
( or \050y\050i\051 and carry\050i\051\051;) 177 341.33 T
(end loop;) 107 329.33 T
(if\050cin\325e) 107 317.33 T
(v) 136.18 317.33 T
(ent\051 then) 141.03 317.33 T
(s <= sum after 46.2 ns; -- v) 124.5 305.33 T
(eri\336ed) 232.84 305.33 T
(cout <= carry\05016\051 after 44.8 ns; -- v) 124.5 293.33 T
(eri\336ed) 266.7 293.33 T
0.29 (o) 130.7 281.33 P
0.29 (v) 135.54 281.33 P
0.29 (er\337o) 140.4 281.33 P
0.29 (w <= carry\05015\051 xor carry\05016\051 after) 158.48 281.33 P
(46.2 ns;) 72 269.33 T
(end if;) 107 257.33 T
(if \050x\325e) 107 245.33 T
(v) 131.46 245.33 T
(ent\051 or \050y\325e) 136.31 245.33 T
(v) 181.04 245.33 T
(ent\051 then) 185.89 245.33 T
(s <= sum after 50.4 ns; -- v) 124.5 233.33 T
(eri\336ed) 232.84 233.33 T
(cout <= carry\05016\051 after 49 ns;) 124.5 221.33 T
0.29 (o) 130.7 209.33 P
0.29 (v) 135.54 209.33 P
0.29 (er\337o) 140.4 209.33 P
0.29 (w <= carry\05015\051 xor carry\05016\051 after) 158.48 209.33 P
(50.4 ns;) 72 197.33 T
(end if;) 107 185.33 T
(end process;) 89.5 173.33 T
(end beha) 72 161.33 T
(vioral;) 107.62 161.33 T
(-- 16-bit ripple carry adder) 72 137.33 T
(architecture schematic of adder_16 is) 72 125.33 T
(signal      n_1 : std_logic;) 89.5 101.33 T
(signal      n_2 : std_logic;) 89.5 89.33 T
(signal      n_3 : std_logic;) 89.5 77.33 T
(signal      n_4 : std_logic;) 332.5 713.33 T
(signal      n_5 : std_logic;) 332.5 701.33 T
(signal      n_6 : std_logic;) 332.5 689.33 T
(signal      n_7 : std_logic;) 332.5 677.33 T
(signal      n_8 : std_logic;) 332.5 665.33 T
(signal      n_9 : std_logic;) 332.5 653.33 T
(signal     n_10 : std_logic;) 332.5 641.33 T
(signal     n_11 : std_logic;) 332.5 629.33 T
(signal     n_12 : std_logic;) 332.5 617.33 T
(signal     n_13 : std_logic;) 332.5 605.33 T
(signal     n_14 : std_logic;) 332.5 593.33 T
(signal     n_15 : std_logic;) 332.5 581.33 T
(signal     cout_dummy : std_logic;) 332.5 569.33 T
(       -- adder_1 is a 1 bit full adder whose output is:) 315 545.33 T
(-- s = \050x xor y xor cin\051) 342 533.33 T
(-- cout = \050x and y\051 or \050x and cin\051 or \050y and cin\051) 342 521.33 T
(component adder_1) 332.5 509.33 T
(       port \050     cin : in     std_logic;) 315 497.33 T
(                        x : in     std_logic;) 315 485.33 T
(                        y : in     std_logic;) 315 473.33 T
(                   cout : out   std_logic;) 315 461.33 T
(                        s : out   std_logic \051;) 315 449.33 T
(end component;) 332.5 437.33 T
(       -- xor2 is a 2 input xor g) 315 413.33 T
(ate) 429.94 413.33 T
(component xor2) 332.5 401.33 T
(generic \050 delay : time := 4.2 ns \051;) 332.5 389.33 T
(port \050      i1 : in    std_logic;) 332.5 377.33 T
(                      i2 : in    std_logic;) 315 365.33 T
(                      o : out   std_logic \051;) 315 353.33 T
(end component;) 332.5 341.33 T
(be) 315 317.33 T
(gin) 324.29 317.33 T
(   cout <= cout_dummy;) 315 293.33 T
( i_13 : adder_1) 332.5 269.33 T
1.52 (port map \050 cin=>n_6, x=>x\0504\051, y=>y\0504\051,) 371.34 257.33 P
(cout=>n_5, s=>s\0504\051 \051;) 315 245.33 T
(i_14 : adder_1) 332.5 233.33 T
1.52 (port map \050 cin=>n_7, x=>x\0503\051, y=>y\0503\051,) 371.34 221.33 P
(cout=>n_6, s=>s\0503\051 \051;) 315 209.33 T
(i_15 : adder_1) 332.5 197.33 T
1.75 (port map \050 cin=>n_8, x=>x\0502\051, y=>y\0502\051,) 370.22 185.33 P
(cout=>n_7, s=>s\0502\051 \051;) 315 173.33 T
(i_16 : adder_1) 332.5 161.33 T
1.75 (port map \050 cin=>n_9, x=>x\0501\051, y=>y\0501\051,) 370.22 149.33 P
(cout=>n_8, s=>s\0501\051 \051;) 315 137.33 T
(i_17 : adder_1) 332.5 125.33 T
1.9 (port map \050 cin=>cin, x=>x\0500\051, y=>y\0500\051,) 372.23 113.33 P
(cout=>n_9, s=>s\0500\051 \051;) 315 101.33 T
(i_18 : adder_1) 332.5 89.33 T
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(24) 301 36.66 T
1.75 (port map \050 cin=>n_5, x=>x\0505\051, y=>y\0505\051,) 127.22 713.33 P
(cout=>n_4, s=>s\0505\051 \051;) 72 701.33 T
(i_19 : adder_1) 89.5 689.33 T
1.75 (port map \050 cin=>n_4, x=>x\0506\051, y=>y\0506\051,) 127.22 677.33 P
(cout=>n_2, s=>s\0506\051 \051;) 72 665.33 T
(i_20 : adder_1) 89.5 653.33 T
1.75 (port map \050 cin=>n_2, x=>x\0507\051, y=>y\0507\051,) 127.22 641.33 P
(cout=>n_3, s=>s\0507\051 \051;) 72 629.33 T
(i_21 : adder_1) 89.5 617.33 T
1.75 (port map \050 cin=>n_3, x=>x\0508\051, y=>y\0508\051,) 127.22 605.33 P
(cout=>n_15, s=>s\0508\051 \051;) 72 593.33 T
(i_22 : adder_1) 89.5 581.33 T
1.47 (port map \050 cin=>n_15, x=>x\0509\051, y=>y\0509\051,) 123.61 569.33 P
(cout=>n_14, s=>s\0509\051 \051;) 72 557.33 T
(i_23 : adder_1) 89.5 545.33 T
0.91 (port map \050 cin=>n_14, x=>x\05010\051, y=>y\05010\051,) 116.39 533.33 P
(cout=>n_13, s=>s\05010\051 \051;) 72 521.33 T
(i_24 : adder_1) 89.5 509.33 T
0.91 (port map \050 cin=>n_13, x=>x\05011\051, y=>y\05011\051,) 116.39 497.33 P
(cout=>n_12, s=>s\05011\051 \051;) 72 485.33 T
(i_25 : adder_1) 89.5 473.33 T
0.91 (port map \050 cin=>n_12, x=>x\05012\051, y=>y\05012\051,) 116.39 461.33 P
(cout=>n_11, s=>s\05012\051 \051;) 72 449.33 T
(i_26 : adder_1) 89.5 437.33 T
0.91 (port map \050 cin=>n_11, x=>x\05013\051, y=>y\05013\051,) 116.39 425.33 P
(cout=>n_10, s=>s\05013\051 \051;) 72 413.33 T
(i_27 : adder_1) 89.5 401.33 T
0.91 (port map \050 cin=>n_10, x=>x\05014\051, y=>y\05014\051,) 116.39 389.33 P
(cout=>n_1, s=>s\05014\051 \051;) 72 377.33 T
(i_28 : adder_1) 89.5 365.33 T
1.19 (port map \050 cin=>n_1, x=>x\05015\051, y=>y\05015\051,) 120 353.33 P
(cout=>cout_dummy) 72 341.33 T
(, s=>s\05015\051 \051;) 152.63 341.33 T
(i_12 : xor2) 89.5 329.33 T
(generic map \050 delay => 4.2 ns \051) 107 317.33 T
-0.22 (port map \050 i1=>cout_dummy) 101.62 305.33 P
-0.22 (, i2=>n_1, o=>o) 216.3 305.33 P
-0.22 (v) 281.05 305.33 P
-0.22 (er-) 285.9 305.33 P
(\337o) 72 293.33 T
(w \051;) 82.31 293.33 T
(end schematic;) 72 269.33 T
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(25) 301 36.66 T
1 F
(9.7 1-Bit Full Adder Entity) 72 713.33 T
(.) 186.03 713.33 T
0 F
-0.19 (///////////////////////// 1 bit adder entity //////////////////////////////) 72 689.33 P
-0.19 (-- 1 bit full adder - beha) 72 665.33 P
-0.19 (vioral and structural descriptions) 166.2 665.33 P
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(   use ieee.std_logic_misc.all;) 72 617.33 T
(   use ieee.std_logic_arith.all;) 72 605.33 T
(entity adder_1 is) 72 581.33 T
(      port \050     cin : in    std_logic;) 72 569.33 T
(                       x : in    std_logic;) 72 557.33 T
(                       y : in    std_logic;) 72 545.33 T
(                  cout : out   std_logic;) 72 533.33 T
(                       s : out   std_logic \051;) 72 521.33 T
(end adder_1;) 72 509.33 T
(architecture beha) 72 485.33 T
(vioral of adder_1 is) 140.38 485.33 T
(be) 72 473.33 T
(gin) 81.29 473.33 T
(process\050cin,x,y\051 be) 89.5 461.33 T
(gin) 165.16 461.33 T
(if \050x\325e) 107 449.33 T
(v) 131.46 449.33 T
(ent\051 or \050y\325e) 136.31 449.33 T
(v) 181.04 449.33 T
(ent\051 then) 185.89 449.33 T
(s <= \050x xor y xor cin\051 after 8.4 ns;) 124.5 437.33 T
0.24 (cout <= \050x and y\051 or \050x and cin\051 or \050y and) 129.52 425.33 P
(cin\051 after 7 ns;) 72 413.33 T
(end if;) 107 401.33 T
(if \050cin\325e) 104.5 389.33 T
(v) 136.18 389.33 T
(ent\051 then) 141.03 389.33 T
(s <= \050x xor y xor cin\051 after 4.2 ns;) 124.5 377.33 T
0.24 (cout <= \050x and y\051 or \050x and cin\051 or \050y and) 129.52 365.33 P
(cin\051 after 2.8 ns;) 72 353.33 T
(end if;) 104.5 341.33 T
(end process;) 89.5 329.33 T
(end beha) 72 317.33 T
(vioral;) 107.62 317.33 T
(architecture schematic of adder_1 is) 72 293.33 T
(signal      n_1 : std_logic;) 89.5 269.33 T
(signal      n_2 : std_logic;) 89.5 257.33 T
(signal      n_3 : std_logic;) 89.5 245.33 T
(       -- nand2 is a 2-input nand g) 72 221.33 T
(ate) 199.99 221.33 T
(component nand2) 89.5 209.33 T
(generic \050 delay : time := 1.4 ns \051;) 89.5 197.33 T
(port \050      i1 : in    std_logic;) 89.5 185.33 T
(                      i2 : in    std_logic;) 72 173.33 T
(                       o : out   std_logic \051;) 72 161.33 T
(end component;) 89.5 149.33 T
(       -- xor2 is a 2-input xor g) 72 125.33 T
(ate) 187.77 125.33 T
(component xor2) 89.5 113.33 T
(generic \050 delay : time := 4.2 ns \051;) 89.5 101.33 T
(port \050      i1 : in    std_logic;) 89.5 89.33 T
(                      i2 : in    std_logic;) 72 77.33 T
(                      o : out   std_logic \051;) 315 713.33 T
(end component;) 332.5 701.33 T
(be) 315 677.33 T
(gin) 324.29 677.33 T
(i_6 : nand2) 332.5 653.33 T
(generic map \050 delay => 1.4 ns \051) 350 641.33 T
(port map \050 i1=>n_3, i2=>n_2, o=>cout \051;) 347.5 629.33 T
(i_7 : nand2) 332.5 617.33 T
(generic map \050 delay => 1.4 ns \051) 350 605.33 T
(port map \050 i1=>n_1, i2=>cin, o=>n_2 \051;) 347.5 593.33 T
(i_8 : nand2) 332.5 581.33 T
(generic map \050 delay => 1.4 ns \051) 350 569.33 T
(port map \050 i1=>y) 347.5 557.33 T
(, i2=>x, o=>n_3 \051;) 415.07 557.33 T
(i_5 : xor2) 332.5 545.33 T
(generic map \050 delay => 4.2 ns \051) 350 533.33 T
(port map \050 i1=>cin, i2=>n_1, o=>s \051;) 347.5 521.33 T
(i_4 : xor2) 332.5 509.33 T
(generic map \050 delay => 4.2 ns \051) 350 497.33 T
(port map \050 i1=>y) 347.5 485.33 T
(, i2=>x, o=>n_1 \051;) 415.07 485.33 T
(end schematic;) 315 461.33 T
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(26) 301 36.66 T
1 F
(9.8 16-Bit Register Entity) 72 713.33 T
(.) 179.62 713.33 T
0 F
(////////////////////////// 16 bit re) 72 689.33 T
(gister entity ///////////////////////) 179.96 689.33 T
(-- 16 bit re) 72 665.33 T
(gister - beha) 114.34 665.33 T
(vioral and structural descriptions) 163.57 665.33 T
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(   use ieee.std_logic_misc.all;) 72 617.33 T
(   use ieee.std_logic_arith.all;) 72 605.33 T
(entity re) 72 581.33 T
(gister_16 is) 104.9 581.33 T
(generic\050 setup: time := 2 ns;) 89.5 569.33 T
( hold: time := 1 ns\051;) 89.5 557.33 T
( port \050     clk : in     std_logic;) 87 545.33 T
(                     din : in     std_logic_v) 72 533.33 T
(ector\05015 do) 211.86 533.33 T
(wnto 0\051;) 257.43 533.33 T
(                   load : in     std_logic;) 72 521.33 T
(                  dout : out   std_logic_v) 72 509.33 T
(ector\05015 do) 209.36 509.33 T
(wnto 0\051 \051;) 254.93 509.33 T
(be) 72 497.33 T
(gin) 81.29 497.33 T
(process\050clk\051) 89.5 485.33 T
(be) 89.5 473.33 T
(gin) 98.79 473.33 T
-0.14 (if\050clk=\3251\325\051 and \050clk\325e) 105.07 461.33 P
-0.14 (v) 189.59 461.33 P
-0.14 (ent\051 and \050load = \3241\325\051 then) 194.44 461.33 P
(assert \050 din\325) 124.5 449.33 T
(stable\050setup + 4.8 ns\051 \051) 171.16 449.33 T
(report \322setup time violation !\323) 124.5 437.33 T
(se) 124.5 425.33 T
(v) 132.58 425.33 T
(erity w) 137.43 425.33 T
(arning;) 165.38 425.33 T
(assert \050 load\325) 124.5 413.33 T
(stable\050setup + 5.8 ns\051 \051) 175.6 413.33 T
(report \322setup time violation !\323) 124.5 401.33 T
(se) 124.5 389.33 T
(v) 132.58 389.33 T
(erity w) 137.43 389.33 T
(arning;) 165.38 389.33 T
(assert \050 din\325) 124.5 377.33 T
(stable\0504.8 ns - hold\051 \051) 171.16 377.33 T
(report \322hold time violation !\323) 124.5 365.33 T
(se) 124.5 353.33 T
(v) 132.58 353.33 T
(erity w) 137.43 353.33 T
(arning;) 165.38 353.33 T
(assert \050 load\325) 124.5 341.33 T
(stable\0505.8 ns- hold\051 \051) 175.6 341.33 T
(report \322hold time violation !\323) 124.5 329.33 T
(se) 124.5 317.33 T
(v) 132.58 317.33 T
(erity w) 137.43 317.33 T
(arning;) 165.38 317.33 T
(end if;) 107 305.33 T
(end process;) 89.5 293.33 T
(end re) 72 281.33 T
(gister_16;) 96.56 281.33 T
(architecture beha) 72 245.33 T
(vioral of re) 140.38 245.33 T
(gister_16 is) 184.66 245.33 T
(constant delay: time := 4 ns;) 89.5 233.33 T
(be) 72 221.33 T
(gin) 81.29 221.33 T
(process\050clk\051) 89.5 209.33 T
0.28 (v) 110.98 197.33 P
0.28 (ariable result: std_logic_v) 115.73 197.33 P
0.28 (ector\05015 do) 220.03 197.33 P
0.28 (wnto 0\051) 265.89 197.33 P
(:= \3220000000000000000\323;) 72 185.33 T
(be) 89.5 173.33 T
(gin) 98.79 173.33 T
-0.14 (if\050clk=\3251\325\051 and \050clk\325e) 105.07 161.33 P
-0.14 (v) 189.59 161.33 P
-0.14 (ent\051 and \050load = \3241\325\051 then) 194.44 161.33 P
(result := din;) 124.5 149.33 T
(dout <= result after delay;) 124.5 137.33 T
(end if;) 107 125.33 T
(end process;) 89.5 113.33 T
(end beha) 72 101.33 T
(vioral;) 107.62 101.33 T
(architecture schematic of re) 315 713.33 T
(gister_16 is) 425.64 713.33 T
(signal      n_4 : std_logic;) 332.5 689.33 T
(signal      n_7 : std_logic;) 332.5 677.33 T
(signal     n_10 : std_logic;) 332.5 665.33 T
(signal     n_13 : std_logic;) 332.5 653.33 T
(signal     n_16 : std_logic;) 332.5 641.33 T
(signal     n_19 : std_logic;) 332.5 629.33 T
(signal     n_22 : std_logic;) 332.5 617.33 T
(signal     n_25 : std_logic;) 332.5 605.33 T
(signal     n_28 : std_logic;) 332.5 593.33 T
(signal     n_31 : std_logic;) 332.5 581.33 T
(signal     n_34 : std_logic;) 332.5 569.33 T
(signal     n_37 : std_logic;) 332.5 557.33 T
(signal     n_40 : std_logic;) 332.5 545.33 T
(signal     n_43 : std_logic;) 332.5 533.33 T
(signal     n_46 : std_logic;) 332.5 521.33 T
(signal     n_49 : std_logic;) 332.5 509.33 T
-0.14 (signal     dout_dummy : std_logic_v) 331.52 497.33 P
-0.14 (ector\05015 do) 474.57 497.33 P
-0.14 (wnto) 520 497.33 P
(0\051;) 315 485.33 T
(       -- mux2 is a 1-bit 2 to 1 selector) 315 461.33 T
(component mux2) 332.5 449.33 T
(port \050      i0 : in     std_logic;) 332.5 437.33 T
(                      i1 : in     std_logic;) 315 425.33 T
(                       s : in     std_logic;) 315 413.33 T
(                       o : out   std_logic \051;) 315 401.33 T
(end component;) 332.5 389.33 T
(       -- df) 315 365.33 T
(f is a D \337ip \337op) 349.74 365.33 T
(component df) 332.5 353.33 T
(f) 387.52 353.33 T
(      port \050     clk : in    std_logic;) 315 341.33 T
(                       d : in    std_logic;) 315 329.33 T
(                       q : out   std_logic \051;) 315 317.33 T
(end component;) 332.5 305.33 T
(be) 315 281.33 T
(gin) 324.29 281.33 T
(dout <= dout_dummy;) 332.5 257.33 T
(i_1 : mux2) 332.5 233.33 T
0.78 (port map \050 i0=>dout_dummy\0500\051, i1=>din\0500\051,) 357.65 221.33 P
(s=>load, o=>n_49 \051;) 315 209.33 T
(i_2 : mux2) 332.5 197.33 T
0.78 (port map \050 i0=>dout_dummy\0501\051, i1=>din\0501\051,) 357.65 185.33 P
(s=>load, o=>n_46 \051;) 315 173.33 T
(i_3 : mux2) 332.5 161.33 T
0.6 (port map \050 i0=>dout_dummy\0502\051, i1=>din\0502\051,) 358.38 149.33 P
(s=>load, o=>n_43 \051;) 315 137.33 T
(i_4 : mux2) 332.5 125.33 T
0.78 (port map \050 i0=>dout_dummy\0503\051, i1=>din\0503\051,) 357.65 113.33 P
(s=>load, o=>n_40 \051;) 315 101.33 T
(i_5 : mux2) 332.5 89.33 T
FMENDPAGE
%%EndPage: "26" 26
%%Page: "27" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(27) 301 36.66 T
0.78 (port map \050 i0=>dout_dummy\0504\051, i1=>din\0504\051,) 114.65 713.33 P
(s=>load, o=>n_37 \051;) 72 701.33 T
(i_6 : mux2) 89.5 689.33 T
0.78 (port map \050 i0=>dout_dummy\0505\051, i1=>din\0505\051,) 114.65 677.33 P
(s=>load, o=>n_34 \051;) 72 665.33 T
(i_7 : mux2) 89.5 653.33 T
0.78 (port map \050 i0=>dout_dummy\0506\051, i1=>din\0506\051,) 114.65 641.33 P
(s=>load, o=>n_31 \051;) 72 629.33 T
(i_8 : mux2) 89.5 617.33 T
0.78 (port map \050 i0=>dout_dummy\0507\051, i1=>din\0507\051,) 114.65 605.33 P
(s=>load, o=>n_28 \051;) 72 593.33 T
(i_9 : mux2) 89.5 581.33 T
0.78 (port map \050 i0=>dout_dummy\0508\051, i1=>din\0508\051,) 114.65 569.33 P
(s=>load, o=>n_25 \051;) 72 557.33 T
(i_10 : mux2) 89.5 545.33 T
0.78 (port map \050 i0=>dout_dummy\0509\051, i1=>din\0509\051,) 114.65 533.33 P
(s=>load, o=>n_22 \051;) 72 521.33 T
(i_11 : mux2) 89.5 509.33 T
0.19 (port map \050 i0=>dout_dummy\05010\051, i1=>din\05010\051,) 107.01 497.33 P
(s=>load, o=>n_19 \051;) 72 485.33 T
(i_12 : mux2) 89.5 473.33 T
0.19 (port map \050 i0=>dout_dummy\05011\051, i1=>din\05011\051,) 107.01 461.33 P
(s=>load, o=>n_16 \051;) 72 449.33 T
(i_13 : mux2) 89.5 437.33 T
0.19 (port map \050 i0=>dout_dummy\05012\051, i1=>din\05012\051,) 107.01 425.33 P
(s=>load, o=>n_13 \051;) 72 413.33 T
(i_14 : mux2) 89.5 401.33 T
0.19 (port map \050 i0=>dout_dummy\05013\051, i1=>din\05013\051,) 107.01 389.33 P
(s=>load, o=>n_10 \051;) 72 377.33 T
(i_15 : mux2) 89.5 365.33 T
0.19 (port map \050 i0=>dout_dummy\05014\051, i1=>din\05014\051,) 107.01 353.33 P
(s=>load, o=>n_7 \051;) 72 341.33 T
(i_16 : mux2) 89.5 329.33 T
0.19 (port map \050 i0=>dout_dummy\05015\051, i1=>din\05015\051,) 107.01 317.33 P
(s=>load, o=>n_4 \051;) 72 305.33 T
(i_17 : df) 89.5 293.33 T
(f) 123.14 293.33 T
4.05 (port map \050 clk=>clk, d=>n_46,) 157.14 281.33 P
(q=>dout_dummy\0501\051 \051;) 72 269.33 T
(i_18 : df) 89.5 257.33 T
(f) 123.14 257.33 T
4.05 (port map \050 clk=>clk, d=>n_49,) 157.14 245.33 P
(q=>dout_dummy\0500\051 \051;) 72 233.33 T
(i_19 : df) 89.5 221.33 T
(f) 123.14 221.33 T
4.05 (port map \050 clk=>clk, d=>n_43,) 157.14 209.33 P
(q=>dout_dummy\0502\051 \051;) 72 197.33 T
(i_20 : df) 89.5 185.33 T
(f) 123.14 185.33 T
4.05 (port map \050 clk=>clk, d=>n_40,) 157.14 173.33 P
(q=>dout_dummy\0503\051 \051;) 72 161.33 T
(i_21 : df) 89.5 149.33 T
(f) 123.14 149.33 T
4.05 (port map \050 clk=>clk, d=>n_34,) 157.14 137.33 P
(q=>dout_dummy\0505\051 \051;) 72 125.33 T
(i_22 : df) 89.5 113.33 T
(f) 123.14 113.33 T
4.05 (port map \050 clk=>clk, d=>n_37,) 157.14 101.33 P
(q=>dout_dummy\0504\051 \051;) 72 89.33 T
(i_23 : df) 89.5 77.33 T
(f) 123.14 77.33 T
4.05 (port map \050 clk=>clk, d=>n_31,) 400.14 713.33 P
(q=>dout_dummy\0506\051 \051;) 315 701.33 T
(i_24 : df) 332.5 689.33 T
(f) 366.14 689.33 T
4.05 (port map \050 clk=>clk, d=>n_28,) 400.14 677.33 P
(q=>dout_dummy\0507\051 \051;) 315 665.33 T
(i_25 : df) 332.5 653.33 T
(f) 366.14 653.33 T
4.05 (port map \050 clk=>clk, d=>n_22,) 400.14 641.33 P
(q=>dout_dummy\0509\051 \051;) 315 629.33 T
(i_26 : df) 332.5 617.33 T
(f) 366.14 617.33 T
4.05 (port map \050 clk=>clk, d=>n_25,) 400.14 605.33 P
(q=>dout_dummy\0508\051 \051;) 315 593.33 T
(i_27 : df) 332.5 581.33 T
(f) 366.14 581.33 T
4.05 (port map \050 clk=>clk, d=>n_19,) 400.14 569.33 P
(q=>dout_dummy\05010\051 \051;) 315 557.33 T
(i_28 : df) 332.5 545.33 T
(f) 366.14 545.33 T
4.05 (port map \050 clk=>clk, d=>n_16,) 400.14 533.33 P
(q=>dout_dummy\05011\051 \051;) 315 521.33 T
(i_29 : df) 332.5 509.33 T
(f) 366.14 509.33 T
4.05 (port map \050 clk=>clk, d=>n_10,) 400.14 497.33 P
(q=>dout_dummy\05013\051 \051;) 315 485.33 T
(i_30 : df) 332.5 473.33 T
(f) 366.14 473.33 T
4.05 (port map \050 clk=>clk, d=>n_13,) 400.14 461.33 P
(q=>dout_dummy\05012\051 \051;) 315 449.33 T
(i_31 : df) 332.5 437.33 T
(f) 366.14 437.33 T
4.34 (port map \050 clk=>clk, d=>n_7,) 403.97 425.33 P
(q=>dout_dummy\05014\051 \051;) 315 413.33 T
(i_32 : df) 332.5 401.33 T
(f) 366.14 401.33 T
4.34 (port map \050 clk=>clk, d=>n_4,) 403.97 389.33 P
(q=>dout_dummy\05015\051 \051;) 315 377.33 T
(end schematic;) 315 353.33 T
FMENDPAGE
%%EndPage: "27" 27
%%Page: "28" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(28) 301 36.66 T
1 F
(9.9 D Flip Flop Entity) 72 713.33 T
(.) 164.37 713.33 T
0 F
(/////////////////// D \337ip \337op entity /////////////////////////////////) 72 689.33 T
(-- D \337ip-\337op - beha) 72 665.33 T
(vioral description) 150.12 665.33 T
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(entity df) 72 605.33 T
(f is) 105.36 605.33 T
(generic \050  delay : time := 4 ns;) 89.5 593.33 T
(                       setup : time := 2 ns;) 72 581.33 T
(                        hold  : time := 1 ns \051;) 72 569.33 T
(port \050    clk : in     std_logic;) 89.5 557.33 T
(                       d : in     std_logic;) 72 545.33 T
(                       q : out   std_logic \051;) 72 533.33 T
(be) 72 521.33 T
(gin) 81.29 521.33 T
(process\050clk\051) 89.5 509.33 T
(be) 89.5 497.33 T
(gin) 98.79 497.33 T
(if \050clk = \3241\325\051 and \050clk\325e) 107 485.33 T
(v) 199.3 485.33 T
(ent\051 then) 204.15 485.33 T
(assert \050 d\325) 124.5 473.33 T
(stable\050setup\051 \051) 163.38 473.33 T
(report \322setup time violation !\323) 124.5 461.33 T
(se) 124.5 449.33 T
(v) 132.58 449.33 T
(erity w) 137.43 449.33 T
(arning;) 165.38 449.33 T
(end if;) 107 437.33 T
(end process;) 89.5 425.33 T
(process\050d\051 be) 89.5 401.33 T
(gin) 142.94 401.33 T
(if \050clk = \3241\325\051 then) 107 389.33 T
(assert \050 clk\325) 124.5 377.33 T
(stable\050hold\051 \051) 170.6 377.33 T
(report \322hold time violation !\323) 124.5 365.33 T
(se) 124.5 353.33 T
(v) 132.58 353.33 T
(erity w) 137.43 353.33 T
(arning;) 165.38 353.33 T
(end if;) 107 341.33 T
(end process;) 89.5 329.33 T
(end df) 72 305.33 T
(f;) 97.02 305.33 T
(architecture beha) 72 281.33 T
(vioral of df) 140.38 281.33 T
(f is) 185.12 281.33 T
(be) 72 269.33 T
(gin) 81.29 269.33 T
(process\050clk\051) 89.5 257.33 T
(v) 107 245.33 T
(ariable state : std_logic := \3240\325;) 111.75 245.33 T
(be) 89.5 233.33 T
(gin) 98.79 233.33 T
(if \050clk = \3241\325\051 and \050clk\325e) 107 221.33 T
(v) 199.3 221.33 T
(ent\051 then) 204.15 221.33 T
(state := d;) 124.5 209.33 T
(q <= state after delay;) 124.5 197.33 T
(end if;) 107 185.33 T
(end process;) 89.5 173.33 T
(end beha) 72 161.33 T
(vioral;) 107.62 161.33 T
FMENDPAGE
%%EndPage: "28" 28
%%Page: "29" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(29) 301 36.66 T
1 F
(9.10 2 Input And Gate Entity) 72 713.33 T
(.) 195.76 713.33 T
0 F
(//////////////////// 2 input and g) 72 689.33 T
(ate entity /////////////////////////) 182.55 689.33 T
(-- 2 input and g) 72 665.33 T
(ate - beha) 133.61 665.33 T
(vioral description) 172.28 665.33 T
(library ieee;) 72 641.33 T
(   use ieee.std_logic_1164.all;) 72 629.33 T
(   use ieee.std_logic_misc.all;) 72 617.33 T
(   use ieee.std_logic_arith.all;) 72 605.33 T
(entity and2 is) 72 581.33 T
(generic \050 delay : time := 2.4 ns \051;) 89.5 569.33 T
(port \050      i1 : in    std_logic;) 89.5 557.33 T
(                      i2 : in    std_logic;) 72 545.33 T
(                       o : out   std_logic \051;) 72 533.33 T
(end and2;) 72 521.33 T
(architecture beha) 72 497.33 T
(vioral of and2 is) 140.38 497.33 T
(be) 72 485.33 T
(gin) 81.29 485.33 T
(o <= i1 and i2 after delay;) 89.5 473.33 T
(end beha) 72 461.33 T
(vioral;) 107.62 461.33 T
FMENDPAGE
%%EndPage: "29" 29
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 29
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Symbol
%%+ Times-BoldItalic
%%+ AvantGarde-BookOblique
%%+ AvantGarde-Book
%%EOF
